{
    "swagger": "2.0",
    "schemes": [
        "http"
    ],
    "info": {
        "description": "This is a JSON API compliant implementation",
        "title": "Dashboard CMS - JSON API",
        "version": "Versioning not supported"
    },
    "host": "localhost:16000",
    "basePath": "/api",
    "securityDefinitions": {
        "oauth2": {
            "type": "oauth2",
            "description": "For more information see https://developers.getbase.com/docs/rest/articles/oauth2/requests",
            "flows": {
                "password": {
                    "tokenUrl": "http://localhost:16000/oauth/token",
                    "refreshUrl": "http://localhost:16000/oauth/token"
                },
                "authorizationCode": {
                    "authorizationUrl": "http://localhost:16000/oauth/authorize",
                    "tokenUrl": "http://localhost:16000/oauth/token",
                    "refreshUrl": "http://localhost:16000/oauth/token"
                },
                "implicit": {
                    "authorizationUrl": "http://localhost:16000/oauth/authorize",
                    "refreshUrl": "http://localhost:16000/oauth/token"
                },
                "clientCredentials": {
                    "tokenUrl": "http://localhost:16000/oauth/token",
                    "refreshUrl": "http://localhost:16000/oauth/token"
                }
            }
        },
        "csrf_token": {
            "type": "apiKey",
            "name": "X-CSRF-Token",
            "in": "header",
            "x-tokenUrl": "http://localhost:16000/user/token"
        }
    },
    "security": {
        "oauth2": [],
        "csrf_token": []
    },
    "tags": [
        {
            "name": "Block",
            "description": "Configuration entity Block"
        },
        {
            "name": "Custom block - Basic block",
            "description": "Custom block type Basic block of type Custom block. A basic block contains a title and a body.",
            "x-entity-type": "block_content",
            "x-definition": {
                "$ref": "#/definitions/block_content--basic"
            }
        },
        {
            "name": "Custom block - Gallery",
            "description": "Custom block type Gallery of type Custom block. A gallery block contains a title and a gallery of images and videos.",
            "x-entity-type": "block_content",
            "x-definition": {
                "$ref": "#/definitions/block_content--varbase_gallery_block"
            }
        },
        {
            "name": "Custom block type",
            "description": "Configuration entity Custom block type"
        },
        {
            "name": "Captcha Point",
            "description": "Configuration entity Captcha Point"
        },
        {
            "name": "Custom perms entity",
            "description": "Configuration entity Custom perms entity"
        },
        {
            "name": "Consumer"
        },
        {
            "name": "Crop type",
            "description": "Configuration entity Crop type"
        },
        {
            "name": "Crop - Focal point",
            "description": "Crop type Focal point of type Crop.",
            "x-entity-type": "crop",
            "x-definition": {
                "$ref": "#/definitions/crop--focal_point"
            }
        },
        {
            "name": "Crop - Square 1:1",
            "description": "Crop type Square 1:1 of type Crop.",
            "x-entity-type": "crop",
            "x-definition": {
                "$ref": "#/definitions/crop--square_1_1"
            }
        },
        {
            "name": "Crop - Standard 16:9",
            "description": "Crop type Standard 16:9 of type Crop.",
            "x-entity-type": "crop",
            "x-definition": {
                "$ref": "#/definitions/crop--standard_16_9"
            }
        },
        {
            "name": "Crop - Traditional 4:3",
            "description": "Crop type Traditional 4:3 of type Crop.",
            "x-entity-type": "crop",
            "x-definition": {
                "$ref": "#/definitions/crop--traditional_4_3"
            }
        },
        {
            "name": "Text Editor",
            "description": "Configuration entity Text Editor"
        },
        {
            "name": "Embed button",
            "description": "Configuration entity Embed button"
        },
        {
            "name": "Entity browser",
            "description": "Configuration entity Entity browser"
        },
        {
            "name": "Fake entity type"
        },
        {
            "name": "Entity queue",
            "description": "Configuration entity Entity queue"
        },
        {
            "name": "Field storage",
            "description": "Configuration entity Field storage"
        },
        {
            "name": "Field",
            "description": "Configuration entity Field"
        },
        {
            "name": "File"
        },
        {
            "name": "Text format",
            "description": "Configuration entity Text format"
        },
        {
            "name": "Group type",
            "description": "Configuration entity Group type"
        },
        {
            "name": "Group role",
            "description": "Configuration entity Group role"
        },
        {
            "name": "Group content type",
            "description": "Configuration entity Group content type"
        },
        {
            "name": "Group content - Project: Group membership",
            "description": "Group content type Project: Group membership of type Group content. Adds users to groups as members.",
            "x-entity-type": "group_content",
            "x-definition": {
                "$ref": "#/definitions/group_content--project-group_membership"
            }
        },
        {
            "name": "Group content - Project: Group node (Project)",
            "description": "Group content type Project: Group node (Project) of type Group content. Adds <em class=\"placeholder\">Project</em> content to groups both publicly and privately.",
            "x-entity-type": "group_content",
            "x-definition": {
                "$ref": "#/definitions/group_content--project-group_node-project"
            }
        },
        {
            "name": "Group - Project",
            "description": "Group type Project of type Group. ",
            "x-entity-type": "group",
            "x-definition": {
                "$ref": "#/definitions/group--project"
            }
        },
        {
            "name": "Image style",
            "description": "Configuration entity Image style"
        },
        {
            "name": "JSON:API Resource override",
            "description": "Configuration entity JSON:API Resource override"
        },
        {
            "name": "Linkit profile",
            "description": "Configuration entity Linkit profile"
        },
        {
            "name": "Login Destination",
            "description": "Configuration entity Login Destination"
        },
        {
            "name": "Media type",
            "description": "Configuration entity Media type"
        },
        {
            "name": "Media - Audio",
            "description": "Media type Audio of type Media. A locally hosted audio file.",
            "x-entity-type": "media",
            "x-definition": {
                "$ref": "#/definitions/media--audio"
            }
        },
        {
            "name": "Media - File",
            "description": "Media type File of type Media. Use local files for reusable media.",
            "x-entity-type": "media",
            "x-definition": {
                "$ref": "#/definitions/media--file"
            }
        },
        {
            "name": "Media - Gallery",
            "description": "Media type Gallery of type Media. Use the gallery for a reusable set of images or videos.",
            "x-entity-type": "media",
            "x-definition": {
                "$ref": "#/definitions/media--gallery"
            }
        },
        {
            "name": "Media - Image",
            "description": "Media type Image of type Media. Use local images for reusable media.",
            "x-entity-type": "media",
            "x-definition": {
                "$ref": "#/definitions/media--image"
            }
        },
        {
            "name": "Media - Remote video",
            "description": "Media type Remote video of type Media. A remotely hosted video from YouTube or Vimeo.",
            "x-entity-type": "media",
            "x-definition": {
                "$ref": "#/definitions/media--remote_video"
            }
        },
        {
            "name": "Media - Tweet",
            "description": "Media type Tweet of type Media. Represents a tweet.",
            "x-entity-type": "media",
            "x-definition": {
                "$ref": "#/definitions/media--tweet"
            }
        },
        {
            "name": "Media - Video",
            "description": "Media type Video of type Media. A locally hosted video file.",
            "x-entity-type": "media",
            "x-definition": {
                "$ref": "#/definitions/media--video"
            }
        },
        {
            "name": "Menu Position Rule",
            "description": "Configuration entity Menu Position Rule"
        },
        {
            "name": "Metatag defaults",
            "description": "Configuration entity Metatag defaults"
        },
        {
            "name": "Content type",
            "description": "Configuration entity Content type"
        },
        {
            "name": "Content - Landing page",
            "description": "Content type Landing page of type Content. Use <em>Landing pages</em> to build multi-component pages with custom layouts to display content in a modern way.",
            "x-entity-type": "node",
            "x-definition": {
                "$ref": "#/definitions/node--landing_page"
            }
        },
        {
            "name": "Content - Basic page",
            "description": "Content type Basic page of type Content. Use <em>basic pages</em> for your static content, such as an 'About us' page.",
            "x-entity-type": "node",
            "x-definition": {
                "$ref": "#/definitions/node--page"
            }
        },
        {
            "name": "Content - Project",
            "description": "Content type Project of type Content. ",
            "x-entity-type": "node",
            "x-definition": {
                "$ref": "#/definitions/node--project"
            }
        },
        {
            "name": "Page",
            "description": "Configuration entity Page"
        },
        {
            "name": "Page Variant",
            "description": "Configuration entity Page Variant"
        },
        {
            "name": "Paragraphs library item"
        },
        {
            "name": "Password Policy",
            "description": "Configuration entity Password Policy"
        },
        {
            "name": "URL alias"
        },
        {
            "name": "Rabbit hole settings",
            "description": "Configuration entity Rabbit hole settings"
        },
        {
            "name": "RDF mapping",
            "description": "Configuration entity RDF mapping"
        },
        {
            "name": "Redirect"
        },
        {
            "name": "Responsive image style",
            "description": "Configuration entity Responsive image style"
        },
        {
            "name": "Responsive preview device",
            "description": "Configuration entity Responsive preview device"
        },
        {
            "name": "REST resource configuration",
            "description": "Configuration entity REST resource configuration"
        },
        {
            "name": "Script",
            "description": "Configuration entity Script"
        },
        {
            "name": "Search server",
            "description": "Configuration entity Search server"
        },
        {
            "name": "Search index",
            "description": "Configuration entity Search index"
        },
        {
            "name": "Search task"
        },
        {
            "name": "Shortcut link - Default",
            "description": "Shortcut set Default of type Shortcut link.",
            "x-entity-type": "shortcut",
            "x-definition": {
                "$ref": "#/definitions/shortcut--default"
            }
        },
        {
            "name": "Shortcut set",
            "description": "Configuration entity Shortcut set"
        },
        {
            "name": "OAuth2 token - Access Token",
            "description": "Token type Access Token of type OAuth2 token. The access token type.",
            "x-entity-type": "oauth2_token",
            "x-definition": {
                "$ref": "#/definitions/oauth2_token--access_token"
            }
        },
        {
            "name": "OAuth2 token - Auth code",
            "description": "Token type Auth code of type OAuth2 token. The auth code type.",
            "x-entity-type": "oauth2_token",
            "x-definition": {
                "$ref": "#/definitions/oauth2_token--auth_code"
            }
        },
        {
            "name": "OAuth2 token - Refresh token",
            "description": "Token type Refresh token of type OAuth2 token. The refresh token type.",
            "x-entity-type": "oauth2_token",
            "x-definition": {
                "$ref": "#/definitions/oauth2_token--refresh_token"
            }
        },
        {
            "name": "OAuth2 Token Type",
            "description": "Configuration entity OAuth2 Token Type"
        },
        {
            "name": "Slick optionset",
            "description": "Configuration entity Slick optionset"
        },
        {
            "name": "SocialAuth"
        },
        {
            "name": "Action",
            "description": "Configuration entity Action"
        },
        {
            "name": "Menu",
            "description": "Configuration entity Menu"
        },
        {
            "name": "Taxonomy vocabulary",
            "description": "Configuration entity Taxonomy vocabulary"
        },
        {
            "name": "Tour",
            "description": "Configuration entity Tour"
        },
        {
            "name": "Cron Job",
            "description": "Configuration entity Cron Job"
        },
        {
            "name": "Update"
        },
        {
            "name": "User"
        },
        {
            "name": "Role",
            "description": "Configuration entity Role"
        },
        {
            "name": "Protection rule",
            "description": "Configuration entity Protection rule"
        },
        {
            "name": "Webform submission - Contact",
            "description": "Webform Contact of type Webform submission. Basic email contact webform.",
            "x-entity-type": "webform_submission",
            "x-definition": {
                "$ref": "#/definitions/webform_submission--contact"
            }
        },
        {
            "name": "Webform submission - Contact Us",
            "description": "Webform Contact Us of type Webform submission. A basic contact webform template.",
            "x-entity-type": "webform_submission",
            "x-definition": {
                "$ref": "#/definitions/webform_submission--template_contact"
            }
        },
        {
            "name": "Webform submission - Employee Evaluation",
            "description": "Webform Employee Evaluation of type Webform submission. An employee evaluation webform template.",
            "x-entity-type": "webform_submission",
            "x-definition": {
                "$ref": "#/definitions/webform_submission--template_employee_evaluation"
            }
        },
        {
            "name": "Webform submission - Feedback",
            "description": "Webform Feedback of type Webform submission. A basic feedback template.",
            "x-entity-type": "webform_submission",
            "x-definition": {
                "$ref": "#/definitions/webform_submission--template_feedback"
            }
        },
        {
            "name": "Webform submission - Issue",
            "description": "Webform Issue of type Webform submission. An issue webform template.",
            "x-entity-type": "webform_submission",
            "x-definition": {
                "$ref": "#/definitions/webform_submission--template_issue"
            }
        },
        {
            "name": "Webform submission - Job Application",
            "description": "Webform Job Application of type Webform submission. A job application webform template.",
            "x-entity-type": "webform_submission",
            "x-definition": {
                "$ref": "#/definitions/webform_submission--template_job_application"
            }
        },
        {
            "name": "Webform submission - Job Seeker Profile",
            "description": "Webform Job Seeker Profile of type Webform submission. A job seeker profile webform template.",
            "x-entity-type": "webform_submission",
            "x-definition": {
                "$ref": "#/definitions/webform_submission--template_job_seeker_profile"
            }
        },
        {
            "name": "Webform submission - Request a Medical Appointment",
            "description": "Webform Request a Medical Appointment of type Webform submission. A medical appointment request webform template.",
            "x-entity-type": "webform_submission",
            "x-definition": {
                "$ref": "#/definitions/webform_submission--template_medical_appointment"
            }
        },
        {
            "name": "Webform submission - Registration",
            "description": "Webform Registration of type Webform submission. A registration webform template.",
            "x-entity-type": "webform_submission",
            "x-definition": {
                "$ref": "#/definitions/webform_submission--template_registration"
            }
        },
        {
            "name": "Webform submission - Session Evaluation",
            "description": "Webform Session Evaluation of type Webform submission. A session evaluation webform template.",
            "x-entity-type": "webform_submission",
            "x-definition": {
                "$ref": "#/definitions/webform_submission--template_session_evaluation"
            }
        },
        {
            "name": "Webform submission - Subscribe",
            "description": "Webform Subscribe of type Webform submission. A subscribe to mailing list webform template.",
            "x-entity-type": "webform_submission",
            "x-definition": {
                "$ref": "#/definitions/webform_submission--template_subscribe"
            }
        },
        {
            "name": "Webform submission - User Profile",
            "description": "Webform User Profile of type Webform submission. A user profile webform template.",
            "x-entity-type": "webform_submission",
            "x-definition": {
                "$ref": "#/definitions/webform_submission--template_user_profile"
            }
        },
        {
            "name": "Webform",
            "description": "Configuration entity Webform"
        },
        {
            "name": "Webform options",
            "description": "Configuration entity Webform options"
        },
        {
            "name": "Custom menu link"
        },
        {
            "name": "Pathauto pattern",
            "description": "Configuration entity Pathauto pattern"
        },
        {
            "name": "View",
            "description": "Configuration entity View"
        },
        {
            "name": "Paragraphs type",
            "description": "Configuration entity Paragraphs type"
        },
        {
            "name": "Paragraph - Accordion",
            "description": "Paragraph type Accordion of type Paragraph. ",
            "x-entity-type": "paragraph",
            "x-definition": {
                "$ref": "#/definitions/paragraph--bp_accordion"
            }
        },
        {
            "name": "Paragraph - Accordion Section",
            "description": "Paragraph type Accordion Section of type Paragraph. ",
            "x-entity-type": "paragraph",
            "x-definition": {
                "$ref": "#/definitions/paragraph--bp_accordion_section"
            }
        },
        {
            "name": "Paragraph - Drupal Block",
            "description": "Paragraph type Drupal Block of type Paragraph. ",
            "x-entity-type": "paragraph",
            "x-definition": {
                "$ref": "#/definitions/paragraph--bp_block"
            }
        },
        {
            "name": "Paragraph - Carousel",
            "description": "Paragraph type Carousel of type Paragraph. ",
            "x-entity-type": "paragraph",
            "x-definition": {
                "$ref": "#/definitions/paragraph--bp_carousel"
            }
        },
        {
            "name": "Paragraph - Columns (Equal)",
            "description": "Paragraph type Columns (Equal) of type Paragraph. ",
            "x-entity-type": "paragraph",
            "x-definition": {
                "$ref": "#/definitions/paragraph--bp_columns"
            }
        },
        {
            "name": "Paragraph - Columns (Three Uneven)",
            "description": "Paragraph type Columns (Three Uneven) of type Paragraph. ",
            "x-entity-type": "paragraph",
            "x-definition": {
                "$ref": "#/definitions/paragraph--bp_columns_three_uneven"
            }
        },
        {
            "name": "Paragraph - Columns (Two Uneven)",
            "description": "Paragraph type Columns (Two Uneven) of type Paragraph. ",
            "x-entity-type": "paragraph",
            "x-definition": {
                "$ref": "#/definitions/paragraph--bp_columns_two_uneven"
            }
        },
        {
            "name": "Paragraph - Column Wrapper",
            "description": "Paragraph type Column Wrapper of type Paragraph. ",
            "x-entity-type": "paragraph",
            "x-definition": {
                "$ref": "#/definitions/paragraph--bp_column_wrapper"
            }
        },
        {
            "name": "Paragraph - Image",
            "description": "Paragraph type Image of type Paragraph. ",
            "x-entity-type": "paragraph",
            "x-definition": {
                "$ref": "#/definitions/paragraph--bp_image"
            }
        },
        {
            "name": "Paragraph - Modal",
            "description": "Paragraph type Modal of type Paragraph. ",
            "x-entity-type": "paragraph",
            "x-definition": {
                "$ref": "#/definitions/paragraph--bp_modal"
            }
        },
        {
            "name": "Paragraph - Rich Text",
            "description": "Paragraph type Rich Text of type Paragraph. ",
            "x-entity-type": "paragraph",
            "x-definition": {
                "$ref": "#/definitions/paragraph--bp_simple"
            }
        },
        {
            "name": "Paragraph - Tabs",
            "description": "Paragraph type Tabs of type Paragraph. ",
            "x-entity-type": "paragraph",
            "x-definition": {
                "$ref": "#/definitions/paragraph--bp_tabs"
            }
        },
        {
            "name": "Paragraph - Tab Section",
            "description": "Paragraph type Tab Section of type Paragraph. ",
            "x-entity-type": "paragraph",
            "x-definition": {
                "$ref": "#/definitions/paragraph--bp_tab_section"
            }
        },
        {
            "name": "Paragraph - View",
            "description": "Paragraph type View of type Paragraph. ",
            "x-entity-type": "paragraph",
            "x-definition": {
                "$ref": "#/definitions/paragraph--bp_view"
            }
        },
        {
            "name": "Paragraph - Webform",
            "description": "Paragraph type Webform of type Paragraph. ",
            "x-entity-type": "paragraph",
            "x-definition": {
                "$ref": "#/definitions/paragraph--bp_webform"
            }
        },
        {
            "name": "Paragraph - From library",
            "description": "Paragraph type From library of type Paragraph. ",
            "x-entity-type": "paragraph",
            "x-definition": {
                "$ref": "#/definitions/paragraph--from_library"
            }
        },
        {
            "name": "Paragraph - Text and image",
            "description": "Paragraph type Text and image of type Paragraph. ",
            "x-entity-type": "paragraph",
            "x-definition": {
                "$ref": "#/definitions/paragraph--text_and_image"
            }
        },
        {
            "name": "Entity form display",
            "description": "Configuration entity Entity form display"
        },
        {
            "name": "View mode",
            "description": "Configuration entity View mode"
        },
        {
            "name": "Form mode",
            "description": "Configuration entity Form mode"
        },
        {
            "name": "Entity view display",
            "description": "Configuration entity Entity view display"
        },
        {
            "name": "Base field override",
            "description": "Configuration entity Base field override"
        },
        {
            "name": "Date format",
            "description": "Configuration entity Date format"
        }
    ],
    "definitions": {
        "block_content--basic": {
            "title": "block_content:basic Schema",
            "description": "Describes the payload for 'block_content' entities of the 'basic' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "block_content--basic"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "Custom block ID",
                                    "description": "The custom block ID."
                                },
                                "drupal_internal__revision_id": {
                                    "type": "integer",
                                    "title": "Revision ID",
                                    "description": "The revision ID."
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language",
                                    "description": "The custom block language code."
                                },
                                "revision_created": {
                                    "type": "number",
                                    "title": "Revision create time",
                                    "format": "utc-millisec",
                                    "description": "The time that the current revision was created."
                                },
                                "revision_log": {
                                    "type": "string",
                                    "title": "Revision log message",
                                    "description": "The log entry explaining the changes in this revision.",
                                    "default": ""
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "info": {
                                    "type": "string",
                                    "title": "Block description",
                                    "maxLength": 255,
                                    "description": "A brief description of your block."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the custom block was last edited."
                                },
                                "reusable": {
                                    "type": "boolean",
                                    "title": "Reusable",
                                    "description": "A boolean indicating whether this block is reusable.",
                                    "default": true
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Text"
                                        },
                                        "format": {
                                            "type": "string",
                                            "title": "Text format"
                                        },
                                        "summary": {
                                            "type": "string",
                                            "title": "Summary"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Body"
                                }
                            },
                            "required": [
                                "info",
                                "revision_translation_affected",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "block_content_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "block_content_type--block_content_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Block type"
                                },
                                "revision_user": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Revision user"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "block_content--varbase_gallery_block": {
            "title": "block_content:varbase_gallery_block Schema",
            "description": "Describes the payload for 'block_content' entities of the 'varbase_gallery_block' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "block_content--varbase_gallery_block"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "Custom block ID",
                                    "description": "The custom block ID."
                                },
                                "drupal_internal__revision_id": {
                                    "type": "integer",
                                    "title": "Revision ID",
                                    "description": "The revision ID."
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language",
                                    "description": "The custom block language code."
                                },
                                "revision_created": {
                                    "type": "number",
                                    "title": "Revision create time",
                                    "format": "utc-millisec",
                                    "description": "The time that the current revision was created."
                                },
                                "revision_log": {
                                    "type": "string",
                                    "title": "Revision log message",
                                    "description": "The log entry explaining the changes in this revision.",
                                    "default": ""
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "info": {
                                    "type": "string",
                                    "title": "Block description",
                                    "maxLength": 255,
                                    "description": "A brief description of your block."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the custom block was last edited."
                                },
                                "reusable": {
                                    "type": "boolean",
                                    "title": "Reusable",
                                    "description": "A boolean indicating whether this block is reusable.",
                                    "default": true
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                }
                            },
                            "required": [
                                "info",
                                "revision_translation_affected",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "block_content_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "block_content_type--block_content_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Block type"
                                },
                                "revision_user": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Revision user"
                                },
                                "field_gallery": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "media--gallery"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Gallery"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "consumer--consumer": {
            "title": "consumer Schema",
            "description": "Describes the payload for 'consumer' entities.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "consumer--consumer"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language"
                                },
                                "label": {
                                    "type": "string",
                                    "title": "Label",
                                    "maxLength": 255,
                                    "description": "The consumer label."
                                },
                                "description": {
                                    "type": "string",
                                    "title": "Description",
                                    "description": "A description of the consumer. This text will be shown to the users to authorize sharing their data to create an access token."
                                },
                                "third_party": {
                                    "type": "boolean",
                                    "title": "Is this consumer 3rd party?",
                                    "description": "Mark this if the organization behind this consumer is not the same as the one behind the Drupal API.",
                                    "default": true
                                },
                                "is_default": {
                                    "type": "boolean",
                                    "title": "Is this the default consumer?",
                                    "description": "There can only be one default consumer. Mark this to use this consumer when none other applies.",
                                    "default": false
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                },
                                "secret": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "The hashed password",
                                            "maxLength": 255
                                        },
                                        "existing": {
                                            "type": "string",
                                            "title": "Existing password"
                                        },
                                        "pre_hashed": {
                                            "type": "boolean",
                                            "title": "Determines if a password needs hashing"
                                        }
                                    },
                                    "title": "Secret",
                                    "description": "The secret key of this client (hashed)."
                                },
                                "confidential": {
                                    "type": "boolean",
                                    "title": "Is Confidential?",
                                    "description": "A boolean indicating whether the client secret needs to be validated or not.",
                                    "default": true
                                },
                                "redirect": {
                                    "type": "uri",
                                    "title": "Redirect URI",
                                    "maxLength": 255,
                                    "description": "The URI this client will redirect to when needed."
                                },
                                "pkce": {
                                    "type": "boolean",
                                    "title": "Use PKCE?",
                                    "description": "A boolean indicating whether the client uses @pkce (e.g., a native client or SPA)",
                                    "default": false
                                }
                            },
                            "required": [
                                "label",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "owner_id": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "User ID"
                                },
                                "image": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "file--file"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Logo"
                                },
                                "roles": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "type",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Referenced resource",
                                                        "enum": [
                                                            "user_role--user_role"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "title": "Resource ID",
                                                        "format": "uuid",
                                                        "maxLength": 128
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "title": "Scopes"
                                },
                                "user_id": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "User"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "crop--focal_point": {
            "title": "crop:focal_point Schema",
            "description": "Describes the payload for 'crop' entities of the 'focal_point' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "crop--focal_point"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__cid": {
                                    "type": "integer",
                                    "title": "Crop ID",
                                    "description": "The crop ID."
                                },
                                "drupal_internal__vid": {
                                    "type": "integer",
                                    "title": "Revision ID",
                                    "description": "The crop revision ID."
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The node language code."
                                },
                                "entity_id": {
                                    "type": "integer",
                                    "title": "Entity ID",
                                    "description": "ID of entity crop belongs to."
                                },
                                "entity_type": {
                                    "type": "string",
                                    "title": "Entity type",
                                    "maxLength": 255,
                                    "description": "The type of entity crop belongs to."
                                },
                                "uri": {
                                    "type": "uri",
                                    "title": "URI",
                                    "maxLength": 255,
                                    "description": "The URI of the image crop belongs to."
                                },
                                "height": {
                                    "type": "integer",
                                    "title": "Height",
                                    "description": "The crop height."
                                },
                                "width": {
                                    "type": "integer",
                                    "title": "Width",
                                    "description": "The crop width."
                                },
                                "x": {
                                    "type": "integer",
                                    "title": "X coordinate",
                                    "description": "The crop\\'s X coordinate."
                                },
                                "y": {
                                    "type": "integer",
                                    "title": "Y coordinate",
                                    "description": "The crop\\'s Y coordinate."
                                },
                                "revision_timestamp": {
                                    "type": "number",
                                    "title": "Revision timestamp",
                                    "format": "utc-millisec",
                                    "description": "The time that the current revision was created."
                                },
                                "revision_log": {
                                    "type": "string",
                                    "title": "Revision Log",
                                    "description": "The log entry explaining the changes in this revision."
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                }
                            },
                            "required": [
                                "entity_id",
                                "entity_type",
                                "height",
                                "width",
                                "x",
                                "y",
                                "revision_translation_affected"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "crop_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "crop_type--crop_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Type"
                                },
                                "revision_uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Revision author ID"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "crop--square_1_1": {
            "title": "crop:square_1_1 Schema",
            "description": "Describes the payload for 'crop' entities of the 'square_1_1' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "crop--square_1_1"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__cid": {
                                    "type": "integer",
                                    "title": "Crop ID",
                                    "description": "The crop ID."
                                },
                                "drupal_internal__vid": {
                                    "type": "integer",
                                    "title": "Revision ID",
                                    "description": "The crop revision ID."
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The node language code."
                                },
                                "entity_id": {
                                    "type": "integer",
                                    "title": "Entity ID",
                                    "description": "ID of entity crop belongs to."
                                },
                                "entity_type": {
                                    "type": "string",
                                    "title": "Entity type",
                                    "maxLength": 255,
                                    "description": "The type of entity crop belongs to."
                                },
                                "uri": {
                                    "type": "uri",
                                    "title": "URI",
                                    "maxLength": 255,
                                    "description": "The URI of the image crop belongs to."
                                },
                                "height": {
                                    "type": "integer",
                                    "title": "Height",
                                    "description": "The crop height."
                                },
                                "width": {
                                    "type": "integer",
                                    "title": "Width",
                                    "description": "The crop width."
                                },
                                "x": {
                                    "type": "integer",
                                    "title": "X coordinate",
                                    "description": "The crop\\'s X coordinate."
                                },
                                "y": {
                                    "type": "integer",
                                    "title": "Y coordinate",
                                    "description": "The crop\\'s Y coordinate."
                                },
                                "revision_timestamp": {
                                    "type": "number",
                                    "title": "Revision timestamp",
                                    "format": "utc-millisec",
                                    "description": "The time that the current revision was created."
                                },
                                "revision_log": {
                                    "type": "string",
                                    "title": "Revision Log",
                                    "description": "The log entry explaining the changes in this revision."
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                }
                            },
                            "required": [
                                "entity_id",
                                "entity_type",
                                "height",
                                "width",
                                "x",
                                "y",
                                "revision_translation_affected"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "crop_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "crop_type--crop_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Type"
                                },
                                "revision_uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Revision author ID"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "crop--standard_16_9": {
            "title": "crop:standard_16_9 Schema",
            "description": "Describes the payload for 'crop' entities of the 'standard_16_9' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "crop--standard_16_9"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__cid": {
                                    "type": "integer",
                                    "title": "Crop ID",
                                    "description": "The crop ID."
                                },
                                "drupal_internal__vid": {
                                    "type": "integer",
                                    "title": "Revision ID",
                                    "description": "The crop revision ID."
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The node language code."
                                },
                                "entity_id": {
                                    "type": "integer",
                                    "title": "Entity ID",
                                    "description": "ID of entity crop belongs to."
                                },
                                "entity_type": {
                                    "type": "string",
                                    "title": "Entity type",
                                    "maxLength": 255,
                                    "description": "The type of entity crop belongs to."
                                },
                                "uri": {
                                    "type": "uri",
                                    "title": "URI",
                                    "maxLength": 255,
                                    "description": "The URI of the image crop belongs to."
                                },
                                "height": {
                                    "type": "integer",
                                    "title": "Height",
                                    "description": "The crop height."
                                },
                                "width": {
                                    "type": "integer",
                                    "title": "Width",
                                    "description": "The crop width."
                                },
                                "x": {
                                    "type": "integer",
                                    "title": "X coordinate",
                                    "description": "The crop\\'s X coordinate."
                                },
                                "y": {
                                    "type": "integer",
                                    "title": "Y coordinate",
                                    "description": "The crop\\'s Y coordinate."
                                },
                                "revision_timestamp": {
                                    "type": "number",
                                    "title": "Revision timestamp",
                                    "format": "utc-millisec",
                                    "description": "The time that the current revision was created."
                                },
                                "revision_log": {
                                    "type": "string",
                                    "title": "Revision Log",
                                    "description": "The log entry explaining the changes in this revision."
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                }
                            },
                            "required": [
                                "entity_id",
                                "entity_type",
                                "height",
                                "width",
                                "x",
                                "y",
                                "revision_translation_affected"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "crop_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "crop_type--crop_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Type"
                                },
                                "revision_uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Revision author ID"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "crop--traditional_4_3": {
            "title": "crop:traditional_4_3 Schema",
            "description": "Describes the payload for 'crop' entities of the 'traditional_4_3' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "crop--traditional_4_3"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__cid": {
                                    "type": "integer",
                                    "title": "Crop ID",
                                    "description": "The crop ID."
                                },
                                "drupal_internal__vid": {
                                    "type": "integer",
                                    "title": "Revision ID",
                                    "description": "The crop revision ID."
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The node language code."
                                },
                                "entity_id": {
                                    "type": "integer",
                                    "title": "Entity ID",
                                    "description": "ID of entity crop belongs to."
                                },
                                "entity_type": {
                                    "type": "string",
                                    "title": "Entity type",
                                    "maxLength": 255,
                                    "description": "The type of entity crop belongs to."
                                },
                                "uri": {
                                    "type": "uri",
                                    "title": "URI",
                                    "maxLength": 255,
                                    "description": "The URI of the image crop belongs to."
                                },
                                "height": {
                                    "type": "integer",
                                    "title": "Height",
                                    "description": "The crop height."
                                },
                                "width": {
                                    "type": "integer",
                                    "title": "Width",
                                    "description": "The crop width."
                                },
                                "x": {
                                    "type": "integer",
                                    "title": "X coordinate",
                                    "description": "The crop\\'s X coordinate."
                                },
                                "y": {
                                    "type": "integer",
                                    "title": "Y coordinate",
                                    "description": "The crop\\'s Y coordinate."
                                },
                                "revision_timestamp": {
                                    "type": "number",
                                    "title": "Revision timestamp",
                                    "format": "utc-millisec",
                                    "description": "The time that the current revision was created."
                                },
                                "revision_log": {
                                    "type": "string",
                                    "title": "Revision Log",
                                    "description": "The log entry explaining the changes in this revision."
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                }
                            },
                            "required": [
                                "entity_id",
                                "entity_type",
                                "height",
                                "width",
                                "x",
                                "y",
                                "revision_translation_affected"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "crop_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "crop_type--crop_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Type"
                                },
                                "revision_uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Revision author ID"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "entity_embed_fake_entity--entity_embed_fake_entity": {
            "title": "entity_embed_fake_entity Schema",
            "description": "Describes the payload for 'entity_embed_fake_entity' entities.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "entity_embed_fake_entity--entity_embed_fake_entity"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Members of the attributes object ('attributes\\\") represent information about the resource object in which it's defined . ",
                            "type": "object",
                            "additionalProperties": false,
                            "required": []
                        },
                        "relationships": {
                            "description": "Members of the relationships object('relationships\\\") represent references from the resource object in which it's defined to other resource objects . ",
                            "type": "object",
                            "additionalProperties": false,
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "file--file": {
            "title": "file Schema",
            "description": "Describes the payload for 'file' entities.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "file--file"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__fid": {
                                    "type": "integer",
                                    "title": "File ID",
                                    "description": "The file ID."
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The file language code."
                                },
                                "filename": {
                                    "type": "string",
                                    "title": "Filename",
                                    "maxLength": 255,
                                    "description": "Name of the file with no path components."
                                },
                                "uri": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "uri",
                                            "title": "URI value",
                                            "maxLength": 255
                                        },
                                        "url": {
                                            "type": "string",
                                            "title": "Root-relative file URL"
                                        }
                                    },
                                    "required": [
                                        "value",
                                        "url"
                                    ],
                                    "title": "URI",
                                    "description": "The URI to access the file (either local or remote)."
                                },
                                "filemime": {
                                    "type": "string",
                                    "title": "File MIME type",
                                    "maxLength": 255,
                                    "description": "The file\\'s MIME type."
                                },
                                "filesize": {
                                    "type": "integer",
                                    "title": "File size",
                                    "description": "The size of the file in bytes."
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Status",
                                    "description": "The status of the file, temporary (FALSE) and permanent (TRUE).",
                                    "default": false
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Created",
                                    "format": "utc-millisec",
                                    "description": "The timestamp that the file was created."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The timestamp that the file was last changed."
                                }
                            },
                            "required": []
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "User ID"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "group_content--project-group_membership": {
            "title": "group_content:project-group_membership Schema",
            "description": "Describes the payload for 'group_content' entities of the 'project-group_membership' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "group_content--project-group_membership"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language"
                                },
                                "label": {
                                    "type": "string",
                                    "title": "Title",
                                    "maxLength": 255
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Created on",
                                    "format": "utc-millisec",
                                    "description": "The time that the group content was created."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed on",
                                    "format": "utc-millisec",
                                    "description": "The time that the group content was last edited."
                                },
                                "path": {
                                    "type": "object",
                                    "properties": {
                                        "alias": {
                                            "type": "string",
                                            "title": "Path alias"
                                        },
                                        "pid": {
                                            "type": "integer",
                                            "title": "Path id"
                                        },
                                        "langcode": {
                                            "type": "string",
                                            "title": "Language Code"
                                        },
                                        "pathauto": {
                                            "type": "integer",
                                            "title": "Pathauto state",
                                            "description": "Whether an automated alias should be created or not."
                                        }
                                    },
                                    "required": [
                                        "pathauto"
                                    ],
                                    "title": "URL alias"
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                }
                            },
                            "required": [
                                "label",
                                "path",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "group_content_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "group_content_type--group_content_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Group content type"
                                },
                                "gid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Parent group"
                                },
                                "entity_id": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "User"
                                },
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Group content creator"
                                },
                                "group_roles": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "type",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Referenced resource",
                                                        "enum": [
                                                            "group_role--group_role"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "title": "Resource ID",
                                                        "format": "uuid",
                                                        "maxLength": 128
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "title": "Roles"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "group_content--project-group_node-project": {
            "title": "group_content:project-group_node-project Schema",
            "description": "Describes the payload for 'group_content' entities of the 'project-group_node-project' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "group_content--project-group_node-project"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language"
                                },
                                "label": {
                                    "type": "string",
                                    "title": "Title",
                                    "maxLength": 255
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Created on",
                                    "format": "utc-millisec",
                                    "description": "The time that the group content was created."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed on",
                                    "format": "utc-millisec",
                                    "description": "The time that the group content was last edited."
                                },
                                "path": {
                                    "type": "object",
                                    "properties": {
                                        "alias": {
                                            "type": "string",
                                            "title": "Path alias"
                                        },
                                        "pid": {
                                            "type": "integer",
                                            "title": "Path id"
                                        },
                                        "langcode": {
                                            "type": "string",
                                            "title": "Language Code"
                                        },
                                        "pathauto": {
                                            "type": "integer",
                                            "title": "Pathauto state",
                                            "description": "Whether an automated alias should be created or not."
                                        }
                                    },
                                    "required": [
                                        "pathauto"
                                    ],
                                    "title": "URL alias"
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                },
                                "field_name": {
                                    "type": "string",
                                    "title": "Name",
                                    "maxLength": 255
                                }
                            },
                            "required": [
                                "label",
                                "path",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "group_content_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "group_content_type--group_content_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Group content type"
                                },
                                "gid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Parent group"
                                },
                                "entity_id": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "node--project"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Title"
                                },
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Group content creator"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "group--project": {
            "title": "group:project Schema",
            "description": "Describes the payload for 'group' entities of the 'project' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "group--project"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language"
                                },
                                "label": {
                                    "type": "string",
                                    "title": "Title",
                                    "maxLength": 255
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Created on",
                                    "format": "utc-millisec",
                                    "description": "The time that the group was created."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed on",
                                    "format": "utc-millisec",
                                    "description": "The time that the group was last edited."
                                },
                                "path": {
                                    "type": "object",
                                    "properties": {
                                        "alias": {
                                            "type": "string",
                                            "title": "Path alias"
                                        },
                                        "pid": {
                                            "type": "integer",
                                            "title": "Path id"
                                        },
                                        "langcode": {
                                            "type": "string",
                                            "title": "Language Code"
                                        },
                                        "pathauto": {
                                            "type": "integer",
                                            "title": "Pathauto state",
                                            "description": "Whether an automated alias should be created or not."
                                        }
                                    },
                                    "required": [
                                        "pathauto"
                                    ],
                                    "title": "URL alias"
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                }
                            },
                            "required": [
                                "label",
                                "path",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "group_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "group_type--group_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Group type"
                                },
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Group creator"
                                },
                                "banner": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "file--file"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Banner"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "media--audio": {
            "title": "media:audio Schema",
            "description": "Describes the payload for 'media' entities of the 'audio' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "media--audio"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__mid": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__vid": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language"
                                },
                                "revision_created": {
                                    "type": "number",
                                    "title": "Revision create time",
                                    "format": "utc-millisec",
                                    "description": "The time that the current revision was created."
                                },
                                "revision_log_message": {
                                    "type": "string",
                                    "title": "Revision log message",
                                    "description": "Briefly describe the changes you have made.",
                                    "default": ""
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "maxLength": 255,
                                    "default": ""
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time the media item was created."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time the media item was last edited."
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                },
                                "path": {
                                    "type": "object",
                                    "properties": {
                                        "alias": {
                                            "type": "string",
                                            "title": "Path alias"
                                        },
                                        "pid": {
                                            "type": "integer",
                                            "title": "Path id"
                                        },
                                        "langcode": {
                                            "type": "string",
                                            "title": "Language Code"
                                        },
                                        "pathauto": {
                                            "type": "integer",
                                            "title": "Pathauto state",
                                            "description": "Whether an automated alias should be created or not."
                                        }
                                    },
                                    "required": [
                                        "pathauto"
                                    ],
                                    "title": "URL alias"
                                },
                                "field_media_in_library": {
                                    "type": "boolean",
                                    "title": "Show in media library",
                                    "default": true
                                }
                            },
                            "required": [
                                "name",
                                "revision_translation_affected",
                                "metatag",
                                "path"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "bundle": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "media_type--media_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Media type"
                                },
                                "revision_user": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Revision user"
                                },
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Authored by"
                                },
                                "thumbnail": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "file--file"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Thumbnail"
                                },
                                "field_media_audio_file": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "file--file"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Audio file"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "media--file": {
            "title": "media:file Schema",
            "description": "Describes the payload for 'media' entities of the 'file' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "media--file"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__mid": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__vid": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language"
                                },
                                "revision_created": {
                                    "type": "number",
                                    "title": "Revision create time",
                                    "format": "utc-millisec",
                                    "description": "The time that the current revision was created."
                                },
                                "revision_log_message": {
                                    "type": "string",
                                    "title": "Revision log message",
                                    "description": "Briefly describe the changes you have made.",
                                    "default": ""
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "maxLength": 255,
                                    "default": ""
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time the media item was created."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time the media item was last edited."
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                },
                                "path": {
                                    "type": "object",
                                    "properties": {
                                        "alias": {
                                            "type": "string",
                                            "title": "Path alias"
                                        },
                                        "pid": {
                                            "type": "integer",
                                            "title": "Path id"
                                        },
                                        "langcode": {
                                            "type": "string",
                                            "title": "Language Code"
                                        },
                                        "pathauto": {
                                            "type": "integer",
                                            "title": "Pathauto state",
                                            "description": "Whether an automated alias should be created or not."
                                        }
                                    },
                                    "required": [
                                        "pathauto"
                                    ],
                                    "title": "URL alias"
                                },
                                "field_media_in_library": {
                                    "type": "boolean",
                                    "title": "Show in media library",
                                    "default": true
                                }
                            },
                            "required": [
                                "name",
                                "revision_translation_affected",
                                "metatag",
                                "path"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "bundle": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "media_type--media_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Media type"
                                },
                                "revision_user": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Revision user"
                                },
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Authored by"
                                },
                                "thumbnail": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "file--file"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Thumbnail"
                                },
                                "field_media_file": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "file--file"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "File"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "media--gallery": {
            "title": "media:gallery Schema",
            "description": "Describes the payload for 'media' entities of the 'gallery' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "media--gallery"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__mid": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__vid": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language"
                                },
                                "revision_created": {
                                    "type": "number",
                                    "title": "Revision create time",
                                    "format": "utc-millisec",
                                    "description": "The time that the current revision was created."
                                },
                                "revision_log_message": {
                                    "type": "string",
                                    "title": "Revision log message",
                                    "description": "Briefly describe the changes you have made.",
                                    "default": ""
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "maxLength": 255,
                                    "default": ""
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time the media item was created."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time the media item was last edited."
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                },
                                "path": {
                                    "type": "object",
                                    "properties": {
                                        "alias": {
                                            "type": "string",
                                            "title": "Path alias"
                                        },
                                        "pid": {
                                            "type": "integer",
                                            "title": "Path id"
                                        },
                                        "langcode": {
                                            "type": "string",
                                            "title": "Language Code"
                                        },
                                        "pathauto": {
                                            "type": "integer",
                                            "title": "Pathauto state",
                                            "description": "Whether an automated alias should be created or not."
                                        }
                                    },
                                    "required": [
                                        "pathauto"
                                    ],
                                    "title": "URL alias"
                                },
                                "field_media_in_library": {
                                    "type": "boolean",
                                    "title": "Show in media library",
                                    "default": true
                                }
                            },
                            "required": [
                                "name",
                                "revision_translation_affected",
                                "metatag",
                                "path"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "bundle": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "media_type--media_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Media type"
                                },
                                "revision_user": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Revision user"
                                },
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Authored by"
                                },
                                "thumbnail": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "file--file"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Thumbnail"
                                },
                                "field_media_gallery": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "type",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Referenced resource",
                                                        "enum": [
                                                            "media--image",
                                                            "media--remote_video",
                                                            "media--video"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "title": "Resource ID",
                                                        "format": "uuid",
                                                        "maxLength": 128
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "title": "Media items"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "media--image": {
            "title": "media:image Schema",
            "description": "Describes the payload for 'media' entities of the 'image' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "media--image"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__mid": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__vid": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language"
                                },
                                "revision_created": {
                                    "type": "number",
                                    "title": "Revision create time",
                                    "format": "utc-millisec",
                                    "description": "The time that the current revision was created."
                                },
                                "revision_log_message": {
                                    "type": "string",
                                    "title": "Revision log message",
                                    "description": "Briefly describe the changes you have made.",
                                    "default": ""
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "maxLength": 255,
                                    "default": ""
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time the media item was created."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time the media item was last edited."
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                },
                                "path": {
                                    "type": "object",
                                    "properties": {
                                        "alias": {
                                            "type": "string",
                                            "title": "Path alias"
                                        },
                                        "pid": {
                                            "type": "integer",
                                            "title": "Path id"
                                        },
                                        "langcode": {
                                            "type": "string",
                                            "title": "Language Code"
                                        },
                                        "pathauto": {
                                            "type": "integer",
                                            "title": "Pathauto state",
                                            "description": "Whether an automated alias should be created or not."
                                        }
                                    },
                                    "required": [
                                        "pathauto"
                                    ],
                                    "title": "URL alias"
                                },
                                "field_media_in_library": {
                                    "type": "boolean",
                                    "title": "Show in media library",
                                    "default": true
                                }
                            },
                            "required": [
                                "name",
                                "revision_translation_affected",
                                "metatag",
                                "path"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "bundle": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "media_type--media_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Media type"
                                },
                                "revision_user": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Revision user"
                                },
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Authored by"
                                },
                                "thumbnail": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "file--file"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Thumbnail"
                                },
                                "field_media_image": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "file--file"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Image"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "media--remote_video": {
            "title": "media:remote_video Schema",
            "description": "Describes the payload for 'media' entities of the 'remote_video' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "media--remote_video"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__mid": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__vid": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language"
                                },
                                "revision_created": {
                                    "type": "number",
                                    "title": "Revision create time",
                                    "format": "utc-millisec",
                                    "description": "The time that the current revision was created."
                                },
                                "revision_log_message": {
                                    "type": "string",
                                    "title": "Revision log message",
                                    "description": "Briefly describe the changes you have made.",
                                    "default": ""
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "maxLength": 255,
                                    "default": ""
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time the media item was created."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time the media item was last edited."
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                },
                                "path": {
                                    "type": "object",
                                    "properties": {
                                        "alias": {
                                            "type": "string",
                                            "title": "Path alias"
                                        },
                                        "pid": {
                                            "type": "integer",
                                            "title": "Path id"
                                        },
                                        "langcode": {
                                            "type": "string",
                                            "title": "Language Code"
                                        },
                                        "pathauto": {
                                            "type": "integer",
                                            "title": "Pathauto state",
                                            "description": "Whether an automated alias should be created or not."
                                        }
                                    },
                                    "required": [
                                        "pathauto"
                                    ],
                                    "title": "URL alias"
                                },
                                "field_media_in_library": {
                                    "type": "boolean",
                                    "title": "Show in media library",
                                    "default": true
                                },
                                "field_media_oembed_video": {
                                    "type": "string",
                                    "title": "Video URL",
                                    "maxLength": 255
                                },
                                "field_provider": {
                                    "type": "string",
                                    "title": "Provider",
                                    "maxLength": 255
                                }
                            },
                            "required": [
                                "name",
                                "revision_translation_affected",
                                "metatag",
                                "path",
                                "field_media_oembed_video"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "bundle": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "media_type--media_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Media type"
                                },
                                "revision_user": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Revision user"
                                },
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Authored by"
                                },
                                "thumbnail": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "file--file"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Thumbnail"
                                },
                                "field_media_cover_image": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "file--file"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Cover Image"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "media--tweet": {
            "title": "media:tweet Schema",
            "description": "Describes the payload for 'media' entities of the 'tweet' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "media--tweet"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__mid": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__vid": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language"
                                },
                                "revision_created": {
                                    "type": "number",
                                    "title": "Revision create time",
                                    "format": "utc-millisec",
                                    "description": "The time that the current revision was created."
                                },
                                "revision_log_message": {
                                    "type": "string",
                                    "title": "Revision log message",
                                    "description": "Briefly describe the changes you have made.",
                                    "default": ""
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "maxLength": 255,
                                    "default": ""
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time the media item was created."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time the media item was last edited."
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                },
                                "path": {
                                    "type": "object",
                                    "properties": {
                                        "alias": {
                                            "type": "string",
                                            "title": "Path alias"
                                        },
                                        "pid": {
                                            "type": "integer",
                                            "title": "Path id"
                                        },
                                        "langcode": {
                                            "type": "string",
                                            "title": "Language Code"
                                        },
                                        "pathauto": {
                                            "type": "integer",
                                            "title": "Pathauto state",
                                            "description": "Whether an automated alias should be created or not."
                                        }
                                    },
                                    "required": [
                                        "pathauto"
                                    ],
                                    "title": "URL alias"
                                },
                                "field_media_in_library": {
                                    "type": "boolean",
                                    "title": "Show in media library",
                                    "default": true
                                },
                                "field_media_twitter": {
                                    "type": "string",
                                    "title": "Tweet URL",
                                    "maxLength": 255
                                }
                            },
                            "required": [
                                "name",
                                "revision_translation_affected",
                                "metatag",
                                "path",
                                "field_media_twitter"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "bundle": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "media_type--media_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Media type"
                                },
                                "revision_user": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Revision user"
                                },
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Authored by"
                                },
                                "thumbnail": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "file--file"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Thumbnail"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "media--video": {
            "title": "media:video Schema",
            "description": "Describes the payload for 'media' entities of the 'video' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "media--video"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__mid": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__vid": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language"
                                },
                                "revision_created": {
                                    "type": "number",
                                    "title": "Revision create time",
                                    "format": "utc-millisec",
                                    "description": "The time that the current revision was created."
                                },
                                "revision_log_message": {
                                    "type": "string",
                                    "title": "Revision log message",
                                    "description": "Briefly describe the changes you have made.",
                                    "default": ""
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "maxLength": 255,
                                    "default": ""
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time the media item was created."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time the media item was last edited."
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                },
                                "path": {
                                    "type": "object",
                                    "properties": {
                                        "alias": {
                                            "type": "string",
                                            "title": "Path alias"
                                        },
                                        "pid": {
                                            "type": "integer",
                                            "title": "Path id"
                                        },
                                        "langcode": {
                                            "type": "string",
                                            "title": "Language Code"
                                        },
                                        "pathauto": {
                                            "type": "integer",
                                            "title": "Pathauto state",
                                            "description": "Whether an automated alias should be created or not."
                                        }
                                    },
                                    "required": [
                                        "pathauto"
                                    ],
                                    "title": "URL alias"
                                },
                                "field_media_in_library": {
                                    "type": "boolean",
                                    "title": "Show in media library",
                                    "default": true
                                }
                            },
                            "required": [
                                "name",
                                "revision_translation_affected",
                                "metatag",
                                "path"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "bundle": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "media_type--media_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Media type"
                                },
                                "revision_user": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Revision user"
                                },
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Authored by"
                                },
                                "thumbnail": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "file--file"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Thumbnail"
                                },
                                "field_media_cover_image": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "file--file"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Cover Image"
                                },
                                "field_media_video_file": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "file--file"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Video file"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "node--landing_page": {
            "title": "node:landing_page Schema",
            "description": "Use Landing pages to build multi-component pages with custom layouts to display content in a modern way.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "node--landing_page"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__nid": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__vid": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language"
                                },
                                "revision_timestamp": {
                                    "type": "number",
                                    "title": "Revision create time",
                                    "format": "utc-millisec",
                                    "description": "The time that the current revision was created."
                                },
                                "revision_log": {
                                    "type": "string",
                                    "title": "Revision log message",
                                    "description": "Briefly describe the changes you have made.",
                                    "default": ""
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "title": {
                                    "type": "string",
                                    "title": "Title",
                                    "maxLength": 255
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time that the node was created."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the node was last edited."
                                },
                                "promote": {
                                    "type": "boolean",
                                    "title": "Promoted to front page",
                                    "default": false
                                },
                                "sticky": {
                                    "type": "boolean",
                                    "title": "Sticky at top of lists",
                                    "default": false
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                },
                                "path": {
                                    "type": "object",
                                    "properties": {
                                        "alias": {
                                            "type": "string",
                                            "title": "Path alias"
                                        },
                                        "pid": {
                                            "type": "integer",
                                            "title": "Path id"
                                        },
                                        "langcode": {
                                            "type": "string",
                                            "title": "Language Code"
                                        },
                                        "pathauto": {
                                            "type": "integer",
                                            "title": "Pathauto state",
                                            "description": "Whether an automated alias should be created or not."
                                        }
                                    },
                                    "required": [
                                        "pathauto"
                                    ],
                                    "title": "URL alias"
                                },
                                "rh_action": {
                                    "type": "string",
                                    "title": "Rabbit Hole action",
                                    "maxLength": 255,
                                    "description": "Specifies which action that Rabbit Hole should take."
                                },
                                "rh_redirect": {
                                    "type": "string",
                                    "title": "Rabbit Hole redirect path.",
                                    "maxLength": 255,
                                    "description": "The path to where the user should get redirected to."
                                },
                                "rh_redirect_response": {
                                    "type": "integer",
                                    "title": "Rabbit Hole redirect response code",
                                    "description": "Specifies the HTTP response code that should be used when perform a redirect."
                                },
                                "field_description": {
                                    "type": "string",
                                    "title": "Page description",
                                    "description": "The description text is displayed on overview pages. Additionally, it is used for Google and Facebook snippets."
                                },
                                "field_meta_tags": {
                                    "type": "metatag",
                                    "title": "Meta tags"
                                },
                                "field_yoast_seo": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "title": "Status"
                                        },
                                        "focus_keyword": {
                                            "type": "string",
                                            "title": "Focus Keyword"
                                        }
                                    },
                                    "title": "Real-time SEO"
                                }
                            },
                            "required": [
                                "title",
                                "revision_translation_affected",
                                "metatag",
                                "path"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "node_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "node_type--node_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Content type"
                                },
                                "revision_uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Revision user"
                                },
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Authored by"
                                },
                                "menu_link": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "menu_link_content--menu_link_content"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Menu link"
                                },
                                "field_lp_paragraphs": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "type",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Referenced resource",
                                                        "enum": [
                                                            "paragraph--bp_accordion",
                                                            "paragraph--bp_block",
                                                            "paragraph--bp_carousel",
                                                            "paragraph--bp_columns",
                                                            "paragraph--bp_columns_three_uneven",
                                                            "paragraph--bp_columns_two_uneven",
                                                            "paragraph--bp_image",
                                                            "paragraph--bp_modal",
                                                            "paragraph--bp_simple",
                                                            "paragraph--bp_tabs",
                                                            "paragraph--bp_view",
                                                            "paragraph--bp_webform",
                                                            "paragraph--from_library",
                                                            "paragraph--text_and_image"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "title": "Resource ID",
                                                        "format": "uuid",
                                                        "maxLength": 128
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "title": "Components"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "node--page": {
            "title": "node:page Schema",
            "description": "Use basic pages for your static content, such as an \\'About us\\' page.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "node--page"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__nid": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__vid": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language"
                                },
                                "revision_timestamp": {
                                    "type": "number",
                                    "title": "Revision create time",
                                    "format": "utc-millisec",
                                    "description": "The time that the current revision was created."
                                },
                                "revision_log": {
                                    "type": "string",
                                    "title": "Revision log message",
                                    "description": "Briefly describe the changes you have made.",
                                    "default": ""
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "title": {
                                    "type": "string",
                                    "title": "Title",
                                    "maxLength": 255
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time that the node was created."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the node was last edited."
                                },
                                "promote": {
                                    "type": "boolean",
                                    "title": "Promoted to front page",
                                    "default": false
                                },
                                "sticky": {
                                    "type": "boolean",
                                    "title": "Sticky at top of lists",
                                    "default": false
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                },
                                "path": {
                                    "type": "object",
                                    "properties": {
                                        "alias": {
                                            "type": "string",
                                            "title": "Path alias"
                                        },
                                        "pid": {
                                            "type": "integer",
                                            "title": "Path id"
                                        },
                                        "langcode": {
                                            "type": "string",
                                            "title": "Language Code"
                                        },
                                        "pathauto": {
                                            "type": "integer",
                                            "title": "Pathauto state",
                                            "description": "Whether an automated alias should be created or not."
                                        }
                                    },
                                    "required": [
                                        "pathauto"
                                    ],
                                    "title": "URL alias"
                                },
                                "rh_action": {
                                    "type": "string",
                                    "title": "Rabbit Hole action",
                                    "maxLength": 255,
                                    "description": "Specifies which action that Rabbit Hole should take."
                                },
                                "rh_redirect": {
                                    "type": "string",
                                    "title": "Rabbit Hole redirect path.",
                                    "maxLength": 255,
                                    "description": "The path to where the user should get redirected to."
                                },
                                "rh_redirect_response": {
                                    "type": "integer",
                                    "title": "Rabbit Hole redirect response code",
                                    "description": "Specifies the HTTP response code that should be used when perform a redirect."
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Text"
                                        },
                                        "format": {
                                            "type": "string",
                                            "title": "Text format"
                                        },
                                        "summary": {
                                            "type": "string",
                                            "title": "Summary"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Body"
                                },
                                "field_meta_tags": {
                                    "type": "metatag",
                                    "title": "Meta tags"
                                },
                                "field_yoast_seo": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "title": "Status"
                                        },
                                        "focus_keyword": {
                                            "type": "string",
                                            "title": "Focus Keyword"
                                        }
                                    },
                                    "title": "Real-time SEO"
                                }
                            },
                            "required": [
                                "title",
                                "revision_translation_affected",
                                "metatag",
                                "path"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "node_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "node_type--node_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Content type"
                                },
                                "revision_uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Revision user"
                                },
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Authored by"
                                },
                                "menu_link": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "menu_link_content--menu_link_content"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Menu link"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "node--project": {
            "title": "node:project Schema",
            "description": "Describes the payload for 'node' entities of the 'project' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "node--project"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__nid": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__vid": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language"
                                },
                                "revision_timestamp": {
                                    "type": "number",
                                    "title": "Revision create time",
                                    "format": "utc-millisec",
                                    "description": "The time that the current revision was created."
                                },
                                "revision_log": {
                                    "type": "string",
                                    "title": "Revision log message",
                                    "description": "Briefly describe the changes you have made.",
                                    "default": ""
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "title": {
                                    "type": "string",
                                    "title": "Title",
                                    "maxLength": 255
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time that the node was created."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the node was last edited."
                                },
                                "promote": {
                                    "type": "boolean",
                                    "title": "Promoted to front page",
                                    "default": false
                                },
                                "sticky": {
                                    "type": "boolean",
                                    "title": "Sticky at top of lists",
                                    "default": false
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                },
                                "path": {
                                    "type": "object",
                                    "properties": {
                                        "alias": {
                                            "type": "string",
                                            "title": "Path alias"
                                        },
                                        "pid": {
                                            "type": "integer",
                                            "title": "Path id"
                                        },
                                        "langcode": {
                                            "type": "string",
                                            "title": "Language Code"
                                        },
                                        "pathauto": {
                                            "type": "integer",
                                            "title": "Pathauto state",
                                            "description": "Whether an automated alias should be created or not."
                                        }
                                    },
                                    "required": [
                                        "pathauto"
                                    ],
                                    "title": "URL alias"
                                },
                                "rh_action": {
                                    "type": "string",
                                    "title": "Rabbit Hole action",
                                    "maxLength": 255,
                                    "description": "Specifies which action that Rabbit Hole should take."
                                },
                                "rh_redirect": {
                                    "type": "string",
                                    "title": "Rabbit Hole redirect path.",
                                    "maxLength": 255,
                                    "description": "The path to where the user should get redirected to."
                                },
                                "rh_redirect_response": {
                                    "type": "integer",
                                    "title": "Rabbit Hole redirect response code",
                                    "description": "Specifies the HTTP response code that should be used when perform a redirect."
                                },
                                "body": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Text"
                                        },
                                        "format": {
                                            "type": "string",
                                            "title": "Text format"
                                        },
                                        "summary": {
                                            "type": "string",
                                            "title": "Summary"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Description"
                                }
                            },
                            "required": [
                                "title",
                                "revision_translation_affected",
                                "metatag",
                                "path"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "node_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "node_type--node_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Content type"
                                },
                                "revision_uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Revision user"
                                },
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Authored by"
                                },
                                "menu_link": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "menu_link_content--menu_link_content"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Menu link"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "paragraphs_library_item--paragraphs_library_item": {
            "title": "paragraphs_library_item Schema",
            "description": "Describes the payload for 'paragraphs_library_item' entities.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "paragraphs_library_item--paragraphs_library_item"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__revision_id": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language"
                                },
                                "revision_created": {
                                    "type": "number",
                                    "title": "Revision create time",
                                    "format": "utc-millisec",
                                    "description": "The time that the current revision was created."
                                },
                                "revision_log": {
                                    "type": "string",
                                    "title": "Revision log message",
                                    "description": "Briefly describe the changes you have made.",
                                    "default": ""
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "label": {
                                    "type": "string",
                                    "title": "Label",
                                    "maxLength": 255
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time that the library item was created."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the library item was last edited."
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                }
                            },
                            "required": [
                                "label",
                                "revision_translation_affected",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "revision_uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Revision user"
                                },
                                "paragraphs": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Paragraphs"
                                },
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Authored by"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "path_alias--path_alias": {
            "title": "path_alias Schema",
            "description": "Describes the payload for 'path_alias' entities.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "path_alias--path_alias"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__revision_id": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language",
                                    "default": "und"
                                },
                                "path": {
                                    "type": "string",
                                    "title": "System path",
                                    "maxLength": 255,
                                    "description": "The path that this alias belongs to."
                                },
                                "alias": {
                                    "type": "string",
                                    "title": "URL alias",
                                    "maxLength": 255,
                                    "description": "An alias used with this path."
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                }
                            },
                            "required": [
                                "path",
                                "alias"
                            ]
                        },
                        "relationships": {
                            "description": "Members of the relationships object('relationships\\\") represent references from the resource object in which it's defined to other resource objects . ",
                            "type": "object",
                            "additionalProperties": false,
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "redirect--redirect": {
            "title": "redirect Schema",
            "description": "Describes the payload for 'redirect' entities.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "redirect--redirect"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__rid": {
                                    "type": "integer",
                                    "title": "Redirect ID",
                                    "description": "The redirect ID."
                                },
                                "hash": {
                                    "type": "string",
                                    "title": "Hash",
                                    "maxLength": 64,
                                    "description": "The redirect hash."
                                },
                                "redirect_type": {
                                    "type": "string",
                                    "title": "Type",
                                    "maxLength": 255,
                                    "description": "The redirect type."
                                },
                                "redirect_source": {
                                    "type": "object",
                                    "properties": {
                                        "path": {
                                            "type": "string",
                                            "title": "Path"
                                        }
                                    },
                                    "title": "From",
                                    "description": "Enter an internal Drupal path or path alias to redirect (e.g. node/123 or taxonomy/term/123). Fragment anchors (e.g. #anchor) are not allowed."
                                },
                                "redirect_redirect": {
                                    "type": "object",
                                    "properties": {
                                        "uri": {
                                            "type": "uri",
                                            "title": "URI"
                                        },
                                        "title": {
                                            "type": "string",
                                            "title": "Link text"
                                        }
                                    },
                                    "title": "To"
                                },
                                "language": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language",
                                    "description": "The redirect language."
                                },
                                "status_code": {
                                    "type": "integer",
                                    "title": "Status code",
                                    "description": "The redirect status code.",
                                    "default": 0
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Created",
                                    "format": "utc-millisec",
                                    "description": "The date when the redirect was created."
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                }
                            },
                            "required": [
                                "redirect_source",
                                "redirect_redirect",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "User ID"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true,
            "discriminator": "type"
        },
        "search_api_task--search_api_task": {
            "title": "search_api_task Schema",
            "description": "Describes the payload for 'search_api_task' entities.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "search_api_task--search_api_task"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "search_api_task_type": {
                                    "type": "string",
                                    "title": "Task type",
                                    "maxLength": 50
                                },
                                "server_id": {
                                    "type": "string",
                                    "title": "Server ID",
                                    "maxLength": 50
                                },
                                "index_id": {
                                    "type": "string",
                                    "title": "Index ID",
                                    "maxLength": 50
                                },
                                "data": {
                                    "type": "string",
                                    "title": "Task data"
                                }
                            },
                            "required": [
                                "server_id",
                                "index_id",
                                "data"
                            ]
                        },
                        "relationships": {
                            "description": "Members of the relationships object('relationships\\\") represent references from the resource object in which it's defined to other resource objects . ",
                            "type": "object",
                            "additionalProperties": false,
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "shortcut--default": {
            "title": "shortcut:default Schema",
            "description": "Describes the payload for 'shortcut' entities of the 'default' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "shortcut--default"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID",
                                    "description": "The ID of the shortcut."
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language",
                                    "description": "The language code of the shortcut."
                                },
                                "title": {
                                    "type": "string",
                                    "title": "Name",
                                    "maxLength": 255,
                                    "description": "The name of the shortcut."
                                },
                                "weight": {
                                    "type": "integer",
                                    "title": "Weight",
                                    "description": "Weight among shortcuts in the same shortcut set."
                                },
                                "link": {
                                    "type": "object",
                                    "properties": {
                                        "uri": {
                                            "type": "uri",
                                            "title": "URI"
                                        },
                                        "title": {
                                            "type": "string",
                                            "title": "Link text"
                                        }
                                    },
                                    "title": "Path",
                                    "description": "The location this shortcut points to."
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                }
                            },
                            "required": [
                                "title",
                                "link",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "shortcut_set": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "shortcut_set--shortcut_set"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Shortcut set"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "oauth2_token--access_token": {
            "title": "oauth2_token:access_token Schema",
            "description": "Describes the payload for 'oauth2_token' entities of the 'access_token' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "oauth2_token--access_token"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID",
                                    "description": "The ID of the Access Token entity."
                                },
                                "value": {
                                    "type": "string",
                                    "title": "Token",
                                    "maxLength": 128,
                                    "description": "The token value."
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Created",
                                    "format": "utc-millisec",
                                    "description": "The time that the entity was created."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the entity was last edited."
                                },
                                "expire": {
                                    "type": "number",
                                    "title": "Expire",
                                    "format": "utc-millisec",
                                    "description": "The time when the token expires."
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Publishing status",
                                    "description": "A boolean indicating whether the token is available.",
                                    "default": true
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                }
                            },
                            "required": [
                                "value",
                                "expire",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "bundle": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "oauth2_token_type--oauth2_token_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Bundle"
                                },
                                "auth_user_id": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "User"
                                },
                                "client": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "consumer--consumer"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Client"
                                },
                                "scopes": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "type",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Referenced resource",
                                                        "enum": [
                                                            "user_role--user_role"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "title": "Resource ID",
                                                        "format": "uuid",
                                                        "maxLength": 128
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "title": "Scopes"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "oauth2_token--auth_code": {
            "title": "oauth2_token:auth_code Schema",
            "description": "Describes the payload for 'oauth2_token' entities of the 'auth_code' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "oauth2_token--auth_code"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID",
                                    "description": "The ID of the Access Token entity."
                                },
                                "value": {
                                    "type": "string",
                                    "title": "Token",
                                    "maxLength": 128,
                                    "description": "The token value."
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Created",
                                    "format": "utc-millisec",
                                    "description": "The time that the entity was created."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the entity was last edited."
                                },
                                "expire": {
                                    "type": "number",
                                    "title": "Expire",
                                    "format": "utc-millisec",
                                    "description": "The time when the token expires."
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Publishing status",
                                    "description": "A boolean indicating whether the token is available.",
                                    "default": true
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                }
                            },
                            "required": [
                                "value",
                                "expire",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "bundle": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "oauth2_token_type--oauth2_token_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Bundle"
                                },
                                "auth_user_id": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "User"
                                },
                                "client": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "consumer--consumer"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Client"
                                },
                                "scopes": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "type",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Referenced resource",
                                                        "enum": [
                                                            "user_role--user_role"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "title": "Resource ID",
                                                        "format": "uuid",
                                                        "maxLength": 128
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "title": "Scopes"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "oauth2_token--refresh_token": {
            "title": "oauth2_token:refresh_token Schema",
            "description": "Describes the payload for 'oauth2_token' entities of the 'refresh_token' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "oauth2_token--refresh_token"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID",
                                    "description": "The ID of the Access Token entity."
                                },
                                "value": {
                                    "type": "string",
                                    "title": "Token",
                                    "maxLength": 128,
                                    "description": "The token value."
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Created",
                                    "format": "utc-millisec",
                                    "description": "The time that the entity was created."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the entity was last edited."
                                },
                                "expire": {
                                    "type": "number",
                                    "title": "Expire",
                                    "format": "utc-millisec",
                                    "description": "The time when the token expires."
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Publishing status",
                                    "description": "A boolean indicating whether the token is available.",
                                    "default": true
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                }
                            },
                            "required": [
                                "value",
                                "expire",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "bundle": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "oauth2_token_type--oauth2_token_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Bundle"
                                },
                                "auth_user_id": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "User"
                                },
                                "client": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "consumer--consumer"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Client"
                                },
                                "scopes": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "type",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Referenced resource",
                                                        "enum": [
                                                            "user_role--user_role"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "title": "Resource ID",
                                                        "format": "uuid",
                                                        "maxLength": 128
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "title": "Scopes"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "social_auth--social_auth": {
            "title": "social_auth Schema",
            "description": "Describes the payload for 'social_auth' entities.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "social_auth--social_auth"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID",
                                    "description": "The ID of the Social Auth record."
                                },
                                "plugin_id": {
                                    "type": "string",
                                    "title": "Plugin ID",
                                    "maxLength": 255,
                                    "description": "Identifier for Social Auth implementer."
                                },
                                "provider_user_id": {
                                    "type": "string",
                                    "title": "Provider user ID",
                                    "maxLength": 255,
                                    "description": "The unique user ID in the provider."
                                },
                                "token": {
                                    "type": "string",
                                    "title": "Token received after user authentication",
                                    "description": "Used to make API calls."
                                },
                                "additional_data": {
                                    "type": "string",
                                    "title": "Additional data",
                                    "description": "The additional data kept for future use."
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Created",
                                    "format": "utc-millisec",
                                    "description": "The time that the entity was created."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the entity was last edited."
                                }
                            },
                            "required": []
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "user_id": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "User ID"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "update_helper_checklist_update--update_helper_checklist_update": {
            "title": "update_helper_checklist_update Schema",
            "description": "Describes the payload for 'update_helper_checklist_update' entities.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "update_helper_checklist_update--update_helper_checklist_update"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "string",
                                    "title": "ID",
                                    "maxLength": 128,
                                    "description": "The ID of the Update entity."
                                },
                                "successful_by_hook": {
                                    "type": "boolean",
                                    "title": "Successful by Hook",
                                    "description": "Indicates if the update hook was successful."
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The language code of Update entity."
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Created",
                                    "format": "utc-millisec",
                                    "description": "The time that the entity was created."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the entity was last edited."
                                }
                            },
                            "required": []
                        },
                        "relationships": {
                            "description": "Members of the relationships object('relationships\\\") represent references from the resource object in which it's defined to other resource objects . ",
                            "type": "object",
                            "additionalProperties": false,
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "user--user": {
            "title": "user Schema",
            "description": "Describes the payload for 'user' entities.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "user--user"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__uid": {
                                    "type": "integer",
                                    "title": "User ID",
                                    "description": "The user ID."
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The user language code."
                                },
                                "preferred_langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Preferred language code",
                                    "description": "The user\\'s preferred language code for receiving emails and viewing the site."
                                },
                                "preferred_admin_langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Preferred admin language code",
                                    "description": "The user\\'s preferred language code for viewing administration pages.",
                                    "default": ""
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "maxLength": 255,
                                    "description": "The name of this user."
                                },
                                "pass": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "The hashed password",
                                            "maxLength": 255
                                        },
                                        "existing": {
                                            "type": "string",
                                            "title": "Existing password"
                                        },
                                        "pre_hashed": {
                                            "type": "boolean",
                                            "title": "Determines if a password needs hashing"
                                        }
                                    },
                                    "title": "Password",
                                    "description": "The password of this user (hashed)."
                                },
                                "mail": {
                                    "type": "string",
                                    "title": "Email",
                                    "format": "email",
                                    "description": "The email of this user.",
                                    "default": ""
                                },
                                "timezone": {
                                    "type": "string",
                                    "title": "Timezone",
                                    "maxLength": 32,
                                    "description": "The timezone of this user."
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "User status",
                                    "description": "Whether the user is active or blocked.",
                                    "default": false
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Created",
                                    "format": "utc-millisec",
                                    "description": "The time that the user was created."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the user was last edited."
                                },
                                "access": {
                                    "type": "number",
                                    "title": "Last access",
                                    "format": "utc-millisec",
                                    "description": "The time that the user last accessed the site.",
                                    "default": 0
                                },
                                "login": {
                                    "type": "number",
                                    "title": "Last login",
                                    "format": "utc-millisec",
                                    "description": "The time that the user last logged in.",
                                    "default": 0
                                },
                                "init": {
                                    "type": "string",
                                    "title": "Initial email",
                                    "format": "email",
                                    "description": "The email address used for initial account creation.",
                                    "default": ""
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                }
                            },
                            "required": [
                                "name",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "roles": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "type",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Referenced resource",
                                                        "enum": [
                                                            "user_role--user_role"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "title": "Resource ID",
                                                        "format": "uuid",
                                                        "maxLength": 128
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "title": "Roles"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "webform_submission--contact": {
            "title": "webform_submission:contact Schema",
            "description": "Describes the payload for 'webform_submission' entities of the 'contact' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "webform_submission--contact"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "serial": {
                                    "type": "integer",
                                    "title": "Serial number",
                                    "description": "The serial number of the webform submission entity."
                                },
                                "drupal_internal__sid": {
                                    "type": "integer",
                                    "title": "Submission ID",
                                    "description": "The ID of the webform submission entity."
                                },
                                "token": {
                                    "type": "string",
                                    "title": "Token",
                                    "maxLength": 255,
                                    "description": "A secure token used to look up a submission."
                                },
                                "uri": {
                                    "type": "string",
                                    "title": "Submission URI",
                                    "maxLength": 2000,
                                    "description": "The URI the user submitted the webform."
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Created",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was first saved as draft or submitted."
                                },
                                "completed": {
                                    "type": "number",
                                    "title": "Completed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was submitted as complete (not draft)."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was last saved (complete or draft)."
                                },
                                "in_draft": {
                                    "type": "boolean",
                                    "title": "Is draft",
                                    "description": "Is this a draft of the submission?",
                                    "default": false
                                },
                                "current_page": {
                                    "type": "string",
                                    "title": "Current page",
                                    "maxLength": 128,
                                    "description": "The current wizard page."
                                },
                                "remote_addr": {
                                    "type": "string",
                                    "title": "Remote IP address",
                                    "maxLength": 128,
                                    "description": "The IP address of the user that submitted the webform."
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language",
                                    "description": "The submission language code."
                                },
                                "entity_type": {
                                    "type": "string",
                                    "title": "Submitted to: Entity type",
                                    "maxLength": 32,
                                    "description": "The entity type to which this submission was submitted from."
                                },
                                "entity_id": {
                                    "type": "string",
                                    "title": "Submitted to: Entity ID",
                                    "maxLength": 255,
                                    "description": "The ID of the entity of which this webform submission was submitted from."
                                },
                                "locked": {
                                    "type": "boolean",
                                    "title": "Locked",
                                    "description": "A flag that indicates a locked webform submission.",
                                    "default": false
                                },
                                "sticky": {
                                    "type": "boolean",
                                    "title": "Sticky",
                                    "description": "A flag that indicate the status of the webform submission.",
                                    "default": false
                                },
                                "notes": {
                                    "type": "string",
                                    "title": "Notes",
                                    "description": "Administrative notes about the webform submission.",
                                    "default": ""
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                }
                            },
                            "required": [
                                "serial",
                                "token",
                                "uri",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Submitted by"
                                },
                                "webform_id": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "webform--webform"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Webform"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "webform_submission--template_contact": {
            "title": "webform_submission:template_contact Schema",
            "description": "Describes the payload for 'webform_submission' entities of the 'template_contact' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "webform_submission--template_contact"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "serial": {
                                    "type": "integer",
                                    "title": "Serial number",
                                    "description": "The serial number of the webform submission entity."
                                },
                                "drupal_internal__sid": {
                                    "type": "integer",
                                    "title": "Submission ID",
                                    "description": "The ID of the webform submission entity."
                                },
                                "token": {
                                    "type": "string",
                                    "title": "Token",
                                    "maxLength": 255,
                                    "description": "A secure token used to look up a submission."
                                },
                                "uri": {
                                    "type": "string",
                                    "title": "Submission URI",
                                    "maxLength": 2000,
                                    "description": "The URI the user submitted the webform."
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Created",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was first saved as draft or submitted."
                                },
                                "completed": {
                                    "type": "number",
                                    "title": "Completed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was submitted as complete (not draft)."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was last saved (complete or draft)."
                                },
                                "in_draft": {
                                    "type": "boolean",
                                    "title": "Is draft",
                                    "description": "Is this a draft of the submission?",
                                    "default": false
                                },
                                "current_page": {
                                    "type": "string",
                                    "title": "Current page",
                                    "maxLength": 128,
                                    "description": "The current wizard page."
                                },
                                "remote_addr": {
                                    "type": "string",
                                    "title": "Remote IP address",
                                    "maxLength": 128,
                                    "description": "The IP address of the user that submitted the webform."
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language",
                                    "description": "The submission language code."
                                },
                                "entity_type": {
                                    "type": "string",
                                    "title": "Submitted to: Entity type",
                                    "maxLength": 32,
                                    "description": "The entity type to which this submission was submitted from."
                                },
                                "entity_id": {
                                    "type": "string",
                                    "title": "Submitted to: Entity ID",
                                    "maxLength": 255,
                                    "description": "The ID of the entity of which this webform submission was submitted from."
                                },
                                "locked": {
                                    "type": "boolean",
                                    "title": "Locked",
                                    "description": "A flag that indicates a locked webform submission.",
                                    "default": false
                                },
                                "sticky": {
                                    "type": "boolean",
                                    "title": "Sticky",
                                    "description": "A flag that indicate the status of the webform submission.",
                                    "default": false
                                },
                                "notes": {
                                    "type": "string",
                                    "title": "Notes",
                                    "description": "Administrative notes about the webform submission.",
                                    "default": ""
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                }
                            },
                            "required": [
                                "serial",
                                "token",
                                "uri",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Submitted by"
                                },
                                "webform_id": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "webform--webform"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Webform"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "webform_submission--template_employee_evaluation": {
            "title": "webform_submission:template_employee_evaluation Schema",
            "description": "Describes the payload for 'webform_submission' entities of the 'template_employee_evaluation' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "webform_submission--template_employee_evaluation"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "serial": {
                                    "type": "integer",
                                    "title": "Serial number",
                                    "description": "The serial number of the webform submission entity."
                                },
                                "drupal_internal__sid": {
                                    "type": "integer",
                                    "title": "Submission ID",
                                    "description": "The ID of the webform submission entity."
                                },
                                "token": {
                                    "type": "string",
                                    "title": "Token",
                                    "maxLength": 255,
                                    "description": "A secure token used to look up a submission."
                                },
                                "uri": {
                                    "type": "string",
                                    "title": "Submission URI",
                                    "maxLength": 2000,
                                    "description": "The URI the user submitted the webform."
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Created",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was first saved as draft or submitted."
                                },
                                "completed": {
                                    "type": "number",
                                    "title": "Completed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was submitted as complete (not draft)."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was last saved (complete or draft)."
                                },
                                "in_draft": {
                                    "type": "boolean",
                                    "title": "Is draft",
                                    "description": "Is this a draft of the submission?",
                                    "default": false
                                },
                                "current_page": {
                                    "type": "string",
                                    "title": "Current page",
                                    "maxLength": 128,
                                    "description": "The current wizard page."
                                },
                                "remote_addr": {
                                    "type": "string",
                                    "title": "Remote IP address",
                                    "maxLength": 128,
                                    "description": "The IP address of the user that submitted the webform."
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language",
                                    "description": "The submission language code."
                                },
                                "entity_type": {
                                    "type": "string",
                                    "title": "Submitted to: Entity type",
                                    "maxLength": 32,
                                    "description": "The entity type to which this submission was submitted from."
                                },
                                "entity_id": {
                                    "type": "string",
                                    "title": "Submitted to: Entity ID",
                                    "maxLength": 255,
                                    "description": "The ID of the entity of which this webform submission was submitted from."
                                },
                                "locked": {
                                    "type": "boolean",
                                    "title": "Locked",
                                    "description": "A flag that indicates a locked webform submission.",
                                    "default": false
                                },
                                "sticky": {
                                    "type": "boolean",
                                    "title": "Sticky",
                                    "description": "A flag that indicate the status of the webform submission.",
                                    "default": false
                                },
                                "notes": {
                                    "type": "string",
                                    "title": "Notes",
                                    "description": "Administrative notes about the webform submission.",
                                    "default": ""
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                }
                            },
                            "required": [
                                "serial",
                                "token",
                                "uri",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Submitted by"
                                },
                                "webform_id": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "webform--webform"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Webform"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "webform_submission--template_feedback": {
            "title": "webform_submission:template_feedback Schema",
            "description": "Describes the payload for 'webform_submission' entities of the 'template_feedback' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "webform_submission--template_feedback"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "serial": {
                                    "type": "integer",
                                    "title": "Serial number",
                                    "description": "The serial number of the webform submission entity."
                                },
                                "drupal_internal__sid": {
                                    "type": "integer",
                                    "title": "Submission ID",
                                    "description": "The ID of the webform submission entity."
                                },
                                "token": {
                                    "type": "string",
                                    "title": "Token",
                                    "maxLength": 255,
                                    "description": "A secure token used to look up a submission."
                                },
                                "uri": {
                                    "type": "string",
                                    "title": "Submission URI",
                                    "maxLength": 2000,
                                    "description": "The URI the user submitted the webform."
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Created",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was first saved as draft or submitted."
                                },
                                "completed": {
                                    "type": "number",
                                    "title": "Completed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was submitted as complete (not draft)."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was last saved (complete or draft)."
                                },
                                "in_draft": {
                                    "type": "boolean",
                                    "title": "Is draft",
                                    "description": "Is this a draft of the submission?",
                                    "default": false
                                },
                                "current_page": {
                                    "type": "string",
                                    "title": "Current page",
                                    "maxLength": 128,
                                    "description": "The current wizard page."
                                },
                                "remote_addr": {
                                    "type": "string",
                                    "title": "Remote IP address",
                                    "maxLength": 128,
                                    "description": "The IP address of the user that submitted the webform."
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language",
                                    "description": "The submission language code."
                                },
                                "entity_type": {
                                    "type": "string",
                                    "title": "Submitted to: Entity type",
                                    "maxLength": 32,
                                    "description": "The entity type to which this submission was submitted from."
                                },
                                "entity_id": {
                                    "type": "string",
                                    "title": "Submitted to: Entity ID",
                                    "maxLength": 255,
                                    "description": "The ID of the entity of which this webform submission was submitted from."
                                },
                                "locked": {
                                    "type": "boolean",
                                    "title": "Locked",
                                    "description": "A flag that indicates a locked webform submission.",
                                    "default": false
                                },
                                "sticky": {
                                    "type": "boolean",
                                    "title": "Sticky",
                                    "description": "A flag that indicate the status of the webform submission.",
                                    "default": false
                                },
                                "notes": {
                                    "type": "string",
                                    "title": "Notes",
                                    "description": "Administrative notes about the webform submission.",
                                    "default": ""
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                }
                            },
                            "required": [
                                "serial",
                                "token",
                                "uri",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Submitted by"
                                },
                                "webform_id": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "webform--webform"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Webform"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "webform_submission--template_issue": {
            "title": "webform_submission:template_issue Schema",
            "description": "Describes the payload for 'webform_submission' entities of the 'template_issue' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "webform_submission--template_issue"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "serial": {
                                    "type": "integer",
                                    "title": "Serial number",
                                    "description": "The serial number of the webform submission entity."
                                },
                                "drupal_internal__sid": {
                                    "type": "integer",
                                    "title": "Submission ID",
                                    "description": "The ID of the webform submission entity."
                                },
                                "token": {
                                    "type": "string",
                                    "title": "Token",
                                    "maxLength": 255,
                                    "description": "A secure token used to look up a submission."
                                },
                                "uri": {
                                    "type": "string",
                                    "title": "Submission URI",
                                    "maxLength": 2000,
                                    "description": "The URI the user submitted the webform."
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Created",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was first saved as draft or submitted."
                                },
                                "completed": {
                                    "type": "number",
                                    "title": "Completed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was submitted as complete (not draft)."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was last saved (complete or draft)."
                                },
                                "in_draft": {
                                    "type": "boolean",
                                    "title": "Is draft",
                                    "description": "Is this a draft of the submission?",
                                    "default": false
                                },
                                "current_page": {
                                    "type": "string",
                                    "title": "Current page",
                                    "maxLength": 128,
                                    "description": "The current wizard page."
                                },
                                "remote_addr": {
                                    "type": "string",
                                    "title": "Remote IP address",
                                    "maxLength": 128,
                                    "description": "The IP address of the user that submitted the webform."
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language",
                                    "description": "The submission language code."
                                },
                                "entity_type": {
                                    "type": "string",
                                    "title": "Submitted to: Entity type",
                                    "maxLength": 32,
                                    "description": "The entity type to which this submission was submitted from."
                                },
                                "entity_id": {
                                    "type": "string",
                                    "title": "Submitted to: Entity ID",
                                    "maxLength": 255,
                                    "description": "The ID of the entity of which this webform submission was submitted from."
                                },
                                "locked": {
                                    "type": "boolean",
                                    "title": "Locked",
                                    "description": "A flag that indicates a locked webform submission.",
                                    "default": false
                                },
                                "sticky": {
                                    "type": "boolean",
                                    "title": "Sticky",
                                    "description": "A flag that indicate the status of the webform submission.",
                                    "default": false
                                },
                                "notes": {
                                    "type": "string",
                                    "title": "Notes",
                                    "description": "Administrative notes about the webform submission.",
                                    "default": ""
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                }
                            },
                            "required": [
                                "serial",
                                "token",
                                "uri",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Submitted by"
                                },
                                "webform_id": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "webform--webform"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Webform"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "webform_submission--template_job_application": {
            "title": "webform_submission:template_job_application Schema",
            "description": "Describes the payload for 'webform_submission' entities of the 'template_job_application' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "webform_submission--template_job_application"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "serial": {
                                    "type": "integer",
                                    "title": "Serial number",
                                    "description": "The serial number of the webform submission entity."
                                },
                                "drupal_internal__sid": {
                                    "type": "integer",
                                    "title": "Submission ID",
                                    "description": "The ID of the webform submission entity."
                                },
                                "token": {
                                    "type": "string",
                                    "title": "Token",
                                    "maxLength": 255,
                                    "description": "A secure token used to look up a submission."
                                },
                                "uri": {
                                    "type": "string",
                                    "title": "Submission URI",
                                    "maxLength": 2000,
                                    "description": "The URI the user submitted the webform."
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Created",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was first saved as draft or submitted."
                                },
                                "completed": {
                                    "type": "number",
                                    "title": "Completed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was submitted as complete (not draft)."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was last saved (complete or draft)."
                                },
                                "in_draft": {
                                    "type": "boolean",
                                    "title": "Is draft",
                                    "description": "Is this a draft of the submission?",
                                    "default": false
                                },
                                "current_page": {
                                    "type": "string",
                                    "title": "Current page",
                                    "maxLength": 128,
                                    "description": "The current wizard page."
                                },
                                "remote_addr": {
                                    "type": "string",
                                    "title": "Remote IP address",
                                    "maxLength": 128,
                                    "description": "The IP address of the user that submitted the webform."
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language",
                                    "description": "The submission language code."
                                },
                                "entity_type": {
                                    "type": "string",
                                    "title": "Submitted to: Entity type",
                                    "maxLength": 32,
                                    "description": "The entity type to which this submission was submitted from."
                                },
                                "entity_id": {
                                    "type": "string",
                                    "title": "Submitted to: Entity ID",
                                    "maxLength": 255,
                                    "description": "The ID of the entity of which this webform submission was submitted from."
                                },
                                "locked": {
                                    "type": "boolean",
                                    "title": "Locked",
                                    "description": "A flag that indicates a locked webform submission.",
                                    "default": false
                                },
                                "sticky": {
                                    "type": "boolean",
                                    "title": "Sticky",
                                    "description": "A flag that indicate the status of the webform submission.",
                                    "default": false
                                },
                                "notes": {
                                    "type": "string",
                                    "title": "Notes",
                                    "description": "Administrative notes about the webform submission.",
                                    "default": ""
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                }
                            },
                            "required": [
                                "serial",
                                "token",
                                "uri",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Submitted by"
                                },
                                "webform_id": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "webform--webform"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Webform"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "webform_submission--template_job_seeker_profile": {
            "title": "webform_submission:template_job_seeker_profile Schema",
            "description": "Describes the payload for 'webform_submission' entities of the 'template_job_seeker_profile' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "webform_submission--template_job_seeker_profile"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "serial": {
                                    "type": "integer",
                                    "title": "Serial number",
                                    "description": "The serial number of the webform submission entity."
                                },
                                "drupal_internal__sid": {
                                    "type": "integer",
                                    "title": "Submission ID",
                                    "description": "The ID of the webform submission entity."
                                },
                                "token": {
                                    "type": "string",
                                    "title": "Token",
                                    "maxLength": 255,
                                    "description": "A secure token used to look up a submission."
                                },
                                "uri": {
                                    "type": "string",
                                    "title": "Submission URI",
                                    "maxLength": 2000,
                                    "description": "The URI the user submitted the webform."
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Created",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was first saved as draft or submitted."
                                },
                                "completed": {
                                    "type": "number",
                                    "title": "Completed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was submitted as complete (not draft)."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was last saved (complete or draft)."
                                },
                                "in_draft": {
                                    "type": "boolean",
                                    "title": "Is draft",
                                    "description": "Is this a draft of the submission?",
                                    "default": false
                                },
                                "current_page": {
                                    "type": "string",
                                    "title": "Current page",
                                    "maxLength": 128,
                                    "description": "The current wizard page."
                                },
                                "remote_addr": {
                                    "type": "string",
                                    "title": "Remote IP address",
                                    "maxLength": 128,
                                    "description": "The IP address of the user that submitted the webform."
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language",
                                    "description": "The submission language code."
                                },
                                "entity_type": {
                                    "type": "string",
                                    "title": "Submitted to: Entity type",
                                    "maxLength": 32,
                                    "description": "The entity type to which this submission was submitted from."
                                },
                                "entity_id": {
                                    "type": "string",
                                    "title": "Submitted to: Entity ID",
                                    "maxLength": 255,
                                    "description": "The ID of the entity of which this webform submission was submitted from."
                                },
                                "locked": {
                                    "type": "boolean",
                                    "title": "Locked",
                                    "description": "A flag that indicates a locked webform submission.",
                                    "default": false
                                },
                                "sticky": {
                                    "type": "boolean",
                                    "title": "Sticky",
                                    "description": "A flag that indicate the status of the webform submission.",
                                    "default": false
                                },
                                "notes": {
                                    "type": "string",
                                    "title": "Notes",
                                    "description": "Administrative notes about the webform submission.",
                                    "default": ""
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                }
                            },
                            "required": [
                                "serial",
                                "token",
                                "uri",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Submitted by"
                                },
                                "webform_id": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "webform--webform"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Webform"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "webform_submission--template_medical_appointment": {
            "title": "webform_submission:template_medical_appointment Schema",
            "description": "Describes the payload for 'webform_submission' entities of the 'template_medical_appointment' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "webform_submission--template_medical_appointment"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "serial": {
                                    "type": "integer",
                                    "title": "Serial number",
                                    "description": "The serial number of the webform submission entity."
                                },
                                "drupal_internal__sid": {
                                    "type": "integer",
                                    "title": "Submission ID",
                                    "description": "The ID of the webform submission entity."
                                },
                                "token": {
                                    "type": "string",
                                    "title": "Token",
                                    "maxLength": 255,
                                    "description": "A secure token used to look up a submission."
                                },
                                "uri": {
                                    "type": "string",
                                    "title": "Submission URI",
                                    "maxLength": 2000,
                                    "description": "The URI the user submitted the webform."
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Created",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was first saved as draft or submitted."
                                },
                                "completed": {
                                    "type": "number",
                                    "title": "Completed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was submitted as complete (not draft)."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was last saved (complete or draft)."
                                },
                                "in_draft": {
                                    "type": "boolean",
                                    "title": "Is draft",
                                    "description": "Is this a draft of the submission?",
                                    "default": false
                                },
                                "current_page": {
                                    "type": "string",
                                    "title": "Current page",
                                    "maxLength": 128,
                                    "description": "The current wizard page."
                                },
                                "remote_addr": {
                                    "type": "string",
                                    "title": "Remote IP address",
                                    "maxLength": 128,
                                    "description": "The IP address of the user that submitted the webform."
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language",
                                    "description": "The submission language code."
                                },
                                "entity_type": {
                                    "type": "string",
                                    "title": "Submitted to: Entity type",
                                    "maxLength": 32,
                                    "description": "The entity type to which this submission was submitted from."
                                },
                                "entity_id": {
                                    "type": "string",
                                    "title": "Submitted to: Entity ID",
                                    "maxLength": 255,
                                    "description": "The ID of the entity of which this webform submission was submitted from."
                                },
                                "locked": {
                                    "type": "boolean",
                                    "title": "Locked",
                                    "description": "A flag that indicates a locked webform submission.",
                                    "default": false
                                },
                                "sticky": {
                                    "type": "boolean",
                                    "title": "Sticky",
                                    "description": "A flag that indicate the status of the webform submission.",
                                    "default": false
                                },
                                "notes": {
                                    "type": "string",
                                    "title": "Notes",
                                    "description": "Administrative notes about the webform submission.",
                                    "default": ""
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                }
                            },
                            "required": [
                                "serial",
                                "token",
                                "uri",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Submitted by"
                                },
                                "webform_id": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "webform--webform"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Webform"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "webform_submission--template_registration": {
            "title": "webform_submission:template_registration Schema",
            "description": "Describes the payload for 'webform_submission' entities of the 'template_registration' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "webform_submission--template_registration"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "serial": {
                                    "type": "integer",
                                    "title": "Serial number",
                                    "description": "The serial number of the webform submission entity."
                                },
                                "drupal_internal__sid": {
                                    "type": "integer",
                                    "title": "Submission ID",
                                    "description": "The ID of the webform submission entity."
                                },
                                "token": {
                                    "type": "string",
                                    "title": "Token",
                                    "maxLength": 255,
                                    "description": "A secure token used to look up a submission."
                                },
                                "uri": {
                                    "type": "string",
                                    "title": "Submission URI",
                                    "maxLength": 2000,
                                    "description": "The URI the user submitted the webform."
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Created",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was first saved as draft or submitted."
                                },
                                "completed": {
                                    "type": "number",
                                    "title": "Completed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was submitted as complete (not draft)."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was last saved (complete or draft)."
                                },
                                "in_draft": {
                                    "type": "boolean",
                                    "title": "Is draft",
                                    "description": "Is this a draft of the submission?",
                                    "default": false
                                },
                                "current_page": {
                                    "type": "string",
                                    "title": "Current page",
                                    "maxLength": 128,
                                    "description": "The current wizard page."
                                },
                                "remote_addr": {
                                    "type": "string",
                                    "title": "Remote IP address",
                                    "maxLength": 128,
                                    "description": "The IP address of the user that submitted the webform."
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language",
                                    "description": "The submission language code."
                                },
                                "entity_type": {
                                    "type": "string",
                                    "title": "Submitted to: Entity type",
                                    "maxLength": 32,
                                    "description": "The entity type to which this submission was submitted from."
                                },
                                "entity_id": {
                                    "type": "string",
                                    "title": "Submitted to: Entity ID",
                                    "maxLength": 255,
                                    "description": "The ID of the entity of which this webform submission was submitted from."
                                },
                                "locked": {
                                    "type": "boolean",
                                    "title": "Locked",
                                    "description": "A flag that indicates a locked webform submission.",
                                    "default": false
                                },
                                "sticky": {
                                    "type": "boolean",
                                    "title": "Sticky",
                                    "description": "A flag that indicate the status of the webform submission.",
                                    "default": false
                                },
                                "notes": {
                                    "type": "string",
                                    "title": "Notes",
                                    "description": "Administrative notes about the webform submission.",
                                    "default": ""
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                }
                            },
                            "required": [
                                "serial",
                                "token",
                                "uri",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Submitted by"
                                },
                                "webform_id": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "webform--webform"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Webform"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "webform_submission--template_session_evaluation": {
            "title": "webform_submission:template_session_evaluation Schema",
            "description": "Describes the payload for 'webform_submission' entities of the 'template_session_evaluation' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "webform_submission--template_session_evaluation"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "serial": {
                                    "type": "integer",
                                    "title": "Serial number",
                                    "description": "The serial number of the webform submission entity."
                                },
                                "drupal_internal__sid": {
                                    "type": "integer",
                                    "title": "Submission ID",
                                    "description": "The ID of the webform submission entity."
                                },
                                "token": {
                                    "type": "string",
                                    "title": "Token",
                                    "maxLength": 255,
                                    "description": "A secure token used to look up a submission."
                                },
                                "uri": {
                                    "type": "string",
                                    "title": "Submission URI",
                                    "maxLength": 2000,
                                    "description": "The URI the user submitted the webform."
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Created",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was first saved as draft or submitted."
                                },
                                "completed": {
                                    "type": "number",
                                    "title": "Completed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was submitted as complete (not draft)."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was last saved (complete or draft)."
                                },
                                "in_draft": {
                                    "type": "boolean",
                                    "title": "Is draft",
                                    "description": "Is this a draft of the submission?",
                                    "default": false
                                },
                                "current_page": {
                                    "type": "string",
                                    "title": "Current page",
                                    "maxLength": 128,
                                    "description": "The current wizard page."
                                },
                                "remote_addr": {
                                    "type": "string",
                                    "title": "Remote IP address",
                                    "maxLength": 128,
                                    "description": "The IP address of the user that submitted the webform."
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language",
                                    "description": "The submission language code."
                                },
                                "entity_type": {
                                    "type": "string",
                                    "title": "Submitted to: Entity type",
                                    "maxLength": 32,
                                    "description": "The entity type to which this submission was submitted from."
                                },
                                "entity_id": {
                                    "type": "string",
                                    "title": "Submitted to: Entity ID",
                                    "maxLength": 255,
                                    "description": "The ID of the entity of which this webform submission was submitted from."
                                },
                                "locked": {
                                    "type": "boolean",
                                    "title": "Locked",
                                    "description": "A flag that indicates a locked webform submission.",
                                    "default": false
                                },
                                "sticky": {
                                    "type": "boolean",
                                    "title": "Sticky",
                                    "description": "A flag that indicate the status of the webform submission.",
                                    "default": false
                                },
                                "notes": {
                                    "type": "string",
                                    "title": "Notes",
                                    "description": "Administrative notes about the webform submission.",
                                    "default": ""
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                }
                            },
                            "required": [
                                "serial",
                                "token",
                                "uri",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Submitted by"
                                },
                                "webform_id": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "webform--webform"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Webform"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "webform_submission--template_subscribe": {
            "title": "webform_submission:template_subscribe Schema",
            "description": "Describes the payload for 'webform_submission' entities of the 'template_subscribe' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "webform_submission--template_subscribe"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "serial": {
                                    "type": "integer",
                                    "title": "Serial number",
                                    "description": "The serial number of the webform submission entity."
                                },
                                "drupal_internal__sid": {
                                    "type": "integer",
                                    "title": "Submission ID",
                                    "description": "The ID of the webform submission entity."
                                },
                                "token": {
                                    "type": "string",
                                    "title": "Token",
                                    "maxLength": 255,
                                    "description": "A secure token used to look up a submission."
                                },
                                "uri": {
                                    "type": "string",
                                    "title": "Submission URI",
                                    "maxLength": 2000,
                                    "description": "The URI the user submitted the webform."
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Created",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was first saved as draft or submitted."
                                },
                                "completed": {
                                    "type": "number",
                                    "title": "Completed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was submitted as complete (not draft)."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was last saved (complete or draft)."
                                },
                                "in_draft": {
                                    "type": "boolean",
                                    "title": "Is draft",
                                    "description": "Is this a draft of the submission?",
                                    "default": false
                                },
                                "current_page": {
                                    "type": "string",
                                    "title": "Current page",
                                    "maxLength": 128,
                                    "description": "The current wizard page."
                                },
                                "remote_addr": {
                                    "type": "string",
                                    "title": "Remote IP address",
                                    "maxLength": 128,
                                    "description": "The IP address of the user that submitted the webform."
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language",
                                    "description": "The submission language code."
                                },
                                "entity_type": {
                                    "type": "string",
                                    "title": "Submitted to: Entity type",
                                    "maxLength": 32,
                                    "description": "The entity type to which this submission was submitted from."
                                },
                                "entity_id": {
                                    "type": "string",
                                    "title": "Submitted to: Entity ID",
                                    "maxLength": 255,
                                    "description": "The ID of the entity of which this webform submission was submitted from."
                                },
                                "locked": {
                                    "type": "boolean",
                                    "title": "Locked",
                                    "description": "A flag that indicates a locked webform submission.",
                                    "default": false
                                },
                                "sticky": {
                                    "type": "boolean",
                                    "title": "Sticky",
                                    "description": "A flag that indicate the status of the webform submission.",
                                    "default": false
                                },
                                "notes": {
                                    "type": "string",
                                    "title": "Notes",
                                    "description": "Administrative notes about the webform submission.",
                                    "default": ""
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                }
                            },
                            "required": [
                                "serial",
                                "token",
                                "uri",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Submitted by"
                                },
                                "webform_id": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "webform--webform"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Webform"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "webform_submission--template_user_profile": {
            "title": "webform_submission:template_user_profile Schema",
            "description": "Describes the payload for 'webform_submission' entities of the 'template_user_profile' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "webform_submission--template_user_profile"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "serial": {
                                    "type": "integer",
                                    "title": "Serial number",
                                    "description": "The serial number of the webform submission entity."
                                },
                                "drupal_internal__sid": {
                                    "type": "integer",
                                    "title": "Submission ID",
                                    "description": "The ID of the webform submission entity."
                                },
                                "token": {
                                    "type": "string",
                                    "title": "Token",
                                    "maxLength": 255,
                                    "description": "A secure token used to look up a submission."
                                },
                                "uri": {
                                    "type": "string",
                                    "title": "Submission URI",
                                    "maxLength": 2000,
                                    "description": "The URI the user submitted the webform."
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Created",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was first saved as draft or submitted."
                                },
                                "completed": {
                                    "type": "number",
                                    "title": "Completed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was submitted as complete (not draft)."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the webform submission was last saved (complete or draft)."
                                },
                                "in_draft": {
                                    "type": "boolean",
                                    "title": "Is draft",
                                    "description": "Is this a draft of the submission?",
                                    "default": false
                                },
                                "current_page": {
                                    "type": "string",
                                    "title": "Current page",
                                    "maxLength": 128,
                                    "description": "The current wizard page."
                                },
                                "remote_addr": {
                                    "type": "string",
                                    "title": "Remote IP address",
                                    "maxLength": 128,
                                    "description": "The IP address of the user that submitted the webform."
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language",
                                    "description": "The submission language code."
                                },
                                "entity_type": {
                                    "type": "string",
                                    "title": "Submitted to: Entity type",
                                    "maxLength": 32,
                                    "description": "The entity type to which this submission was submitted from."
                                },
                                "entity_id": {
                                    "type": "string",
                                    "title": "Submitted to: Entity ID",
                                    "maxLength": 255,
                                    "description": "The ID of the entity of which this webform submission was submitted from."
                                },
                                "locked": {
                                    "type": "boolean",
                                    "title": "Locked",
                                    "description": "A flag that indicates a locked webform submission.",
                                    "default": false
                                },
                                "sticky": {
                                    "type": "boolean",
                                    "title": "Sticky",
                                    "description": "A flag that indicate the status of the webform submission.",
                                    "default": false
                                },
                                "notes": {
                                    "type": "string",
                                    "title": "Notes",
                                    "description": "Administrative notes about the webform submission.",
                                    "default": ""
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                }
                            },
                            "required": [
                                "serial",
                                "token",
                                "uri",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "uid": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Submitted by"
                                },
                                "webform_id": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "webform--webform"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Webform"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "menu_link_content--menu_link_content": {
            "title": "menu_link_content Schema",
            "description": "Describes the payload for 'menu_link_content' entities.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "menu_link_content--menu_link_content"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "Entity ID",
                                    "description": "The entity ID for this menu link content entity."
                                },
                                "drupal_internal__revision_id": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language",
                                    "description": "The menu link language code."
                                },
                                "bundle": {
                                    "type": "string",
                                    "title": "Custom menu link bundle",
                                    "maxLength": 32,
                                    "description": "The content menu link bundle."
                                },
                                "revision_created": {
                                    "type": "number",
                                    "title": "Revision create time",
                                    "format": "utc-millisec",
                                    "description": "The time that the current revision was created."
                                },
                                "revision_log_message": {
                                    "type": "string",
                                    "title": "Revision log message",
                                    "description": "Briefly describe the changes you have made.",
                                    "default": ""
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "title": "Enabled",
                                    "description": "A flag for whether the link should be enabled in menus or hidden.",
                                    "default": true
                                },
                                "title": {
                                    "type": "string",
                                    "title": "Menu link title",
                                    "maxLength": 255,
                                    "description": "The text to be used for this link in the menu."
                                },
                                "description": {
                                    "type": "string",
                                    "title": "Description",
                                    "maxLength": 255,
                                    "description": "Shown when hovering over the menu link."
                                },
                                "menu_name": {
                                    "type": "string",
                                    "title": "Menu name",
                                    "maxLength": 255,
                                    "description": "The menu name. All links with the same menu name (such as \\\"tools\\\") are part of the same menu.",
                                    "default": "tools"
                                },
                                "link": {
                                    "type": "object",
                                    "properties": {
                                        "uri": {
                                            "type": "uri",
                                            "title": "URI"
                                        },
                                        "title": {
                                            "type": "string",
                                            "title": "Link text"
                                        }
                                    },
                                    "title": "Link",
                                    "description": "The location this menu link points to."
                                },
                                "external": {
                                    "type": "boolean",
                                    "title": "External",
                                    "description": "A flag to indicate if the link points to a full URL starting with a protocol, like http:// (1 = external, 0 = internal).",
                                    "default": false
                                },
                                "rediscover": {
                                    "type": "boolean",
                                    "title": "Indicates whether the menu link should be rediscovered",
                                    "default": false
                                },
                                "weight": {
                                    "type": "integer",
                                    "title": "Weight",
                                    "description": "Link weight among links in the same menu at the same depth. In the menu, the links with high weight will sink and links with a low weight will be positioned nearer the top.",
                                    "default": 0
                                },
                                "expanded": {
                                    "type": "boolean",
                                    "title": "Show as expanded",
                                    "description": "If selected and this menu link has children, the menu will always appear expanded. This option may be overridden for the entire menu tree when placing a menu block.",
                                    "default": false
                                },
                                "parent": {
                                    "type": "string",
                                    "title": "Parent plugin ID",
                                    "maxLength": 255,
                                    "description": "The ID of the parent menu link plugin, or empty string when at the top level of the hierarchy."
                                },
                                "changed": {
                                    "type": "number",
                                    "title": "Changed",
                                    "format": "utc-millisec",
                                    "description": "The time that the menu link was last edited."
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "metatag": {
                                    "type": "object",
                                    "title": "Metatags",
                                    "description": "The meta tags for the entity."
                                }
                            },
                            "required": [
                                "bundle",
                                "title",
                                "link",
                                "revision_translation_affected",
                                "metatag"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "revision_user": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "user--user"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Revision user"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true,
            "discriminator": "bundle"
        },
        "paragraph--bp_accordion": {
            "title": "paragraph:bp_accordion Schema",
            "description": "Describes the payload for 'paragraph' entities of the 'bp_accordion' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "paragraph--bp_accordion"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__revision_id": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The paragraphs entity language code."
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time that the Paragraph was created."
                                },
                                "parent_id": {
                                    "type": "string",
                                    "title": "Parent ID",
                                    "maxLength": 255,
                                    "description": "The ID of the parent entity of which this entity is referenced."
                                },
                                "parent_type": {
                                    "type": "string",
                                    "title": "Parent type",
                                    "maxLength": 32,
                                    "description": "The entity parent type to which this entity is referenced."
                                },
                                "parent_field_name": {
                                    "type": "string",
                                    "title": "Parent field name",
                                    "maxLength": 32,
                                    "description": "The entity parent field name to which this entity is referenced."
                                },
                                "behavior_settings": {
                                    "type": "string",
                                    "title": "Behavior settings",
                                    "description": "The behavior plugin settings",
                                    "default": "a:0:{}"
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "bp_background": {
                                    "type": "string",
                                    "title": "Background color",
                                    "enum": [
                                        "vbp_color_01",
                                        "vbp_color_02",
                                        "vbp_color_03",
                                        "vbp_color_04",
                                        "vbp_color_05"
                                    ]
                                },
                                "bp_classes": {
                                    "type": "string",
                                    "title": "CSS class(es)",
                                    "maxLength": 255,
                                    "description": "Customize the styling by adding CSS classes. Separate multiple classes by spaces."
                                },
                                "bp_gutter": {
                                    "type": "boolean",
                                    "title": "Gutter",
                                    "default": false
                                },
                                "bp_title": {
                                    "type": "string",
                                    "title": "Component title",
                                    "maxLength": 255,
                                    "description": "Fill in a title for this component to appear on the page, or just use it for editorial reference if you check the \\\"Don\\'t show title on page\\\" checkbox below."
                                },
                                "bp_title_status": {
                                    "type": "boolean",
                                    "title": "Don't show title on page",
                                    "default": false
                                },
                                "bp_width": {
                                    "type": "string",
                                    "title": "Width",
                                    "enum": [
                                        "paragraph--width--tiny",
                                        "paragraph--width--narrow",
                                        "paragraph--width--medium",
                                        "paragraph--width--wide",
                                        "paragraph--width--full",
                                        "bg-edge2edge"
                                    ],
                                    "default": ""
                                }
                            },
                            "required": [
                                "revision_translation_affected",
                                "bp_gutter",
                                "bp_width"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "paragraph_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "paragraphs_type--paragraphs_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Paragraph type"
                                },
                                "bp_accordion_section": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "type",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Referenced resource",
                                                        "enum": [
                                                            "paragraph--bp_accordion_section"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "title": "Resource ID",
                                                        "format": "uuid",
                                                        "maxLength": 128
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "title": "Accordion section"
                                },
                                "bp_image_field": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "media--image"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Background image"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "paragraph--bp_accordion_section": {
            "title": "paragraph:bp_accordion_section Schema",
            "description": "Describes the payload for 'paragraph' entities of the 'bp_accordion_section' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "paragraph--bp_accordion_section"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__revision_id": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The paragraphs entity language code."
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time that the Paragraph was created."
                                },
                                "parent_id": {
                                    "type": "string",
                                    "title": "Parent ID",
                                    "maxLength": 255,
                                    "description": "The ID of the parent entity of which this entity is referenced."
                                },
                                "parent_type": {
                                    "type": "string",
                                    "title": "Parent type",
                                    "maxLength": 32,
                                    "description": "The entity parent type to which this entity is referenced."
                                },
                                "parent_field_name": {
                                    "type": "string",
                                    "title": "Parent field name",
                                    "maxLength": 32,
                                    "description": "The entity parent field name to which this entity is referenced."
                                },
                                "behavior_settings": {
                                    "type": "string",
                                    "title": "Behavior settings",
                                    "description": "The behavior plugin settings",
                                    "default": "a:0:{}"
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "bp_accordion_section_title": {
                                    "type": "string",
                                    "title": "Accordion section title",
                                    "maxLength": 255
                                }
                            },
                            "required": [
                                "revision_translation_affected"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "paragraph_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "paragraphs_type--paragraphs_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Paragraph type"
                                },
                                "bp_accordion_section_body": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "type",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Referenced resource",
                                                        "enum": [
                                                            "paragraph--bp_simple",
                                                            "paragraph--bp_image",
                                                            "paragraph--bp_columns",
                                                            "paragraph--bp_columns_three_uneven",
                                                            "paragraph--bp_columns_two_uneven",
                                                            "paragraph--bp_block",
                                                            "paragraph--bp_modal",
                                                            "paragraph--bp_view",
                                                            "paragraph--bp_webform"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "title": "Resource ID",
                                                        "format": "uuid",
                                                        "maxLength": 128
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "title": "Accordion section body"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "paragraph--bp_block": {
            "title": "paragraph:bp_block Schema",
            "description": "Describes the payload for 'paragraph' entities of the 'bp_block' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "paragraph--bp_block"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__revision_id": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The paragraphs entity language code."
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time that the Paragraph was created."
                                },
                                "parent_id": {
                                    "type": "string",
                                    "title": "Parent ID",
                                    "maxLength": 255,
                                    "description": "The ID of the parent entity of which this entity is referenced."
                                },
                                "parent_type": {
                                    "type": "string",
                                    "title": "Parent type",
                                    "maxLength": 32,
                                    "description": "The entity parent type to which this entity is referenced."
                                },
                                "parent_field_name": {
                                    "type": "string",
                                    "title": "Parent field name",
                                    "maxLength": 32,
                                    "description": "The entity parent field name to which this entity is referenced."
                                },
                                "behavior_settings": {
                                    "type": "string",
                                    "title": "Behavior settings",
                                    "description": "The behavior plugin settings",
                                    "default": "a:0:{}"
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "bp_background": {
                                    "type": "string",
                                    "title": "Background color",
                                    "enum": [
                                        "vbp_color_01",
                                        "vbp_color_02",
                                        "vbp_color_03",
                                        "vbp_color_04",
                                        "vbp_color_05"
                                    ]
                                },
                                "bp_classes": {
                                    "type": "string",
                                    "title": "CSS class(es)",
                                    "maxLength": 255,
                                    "description": "Customize the styling by adding CSS classes. Separate multiple classes by spaces."
                                },
                                "bp_gutter": {
                                    "type": "boolean",
                                    "title": "Gutter",
                                    "default": false
                                },
                                "bp_title": {
                                    "type": "string",
                                    "title": "Component title",
                                    "maxLength": 255,
                                    "description": "Fill in a title for this component to appear on the page, or just use it for editorial reference if you check the \\\"Don\\'t show title on page\\\" checkbox below."
                                },
                                "bp_title_status": {
                                    "type": "boolean",
                                    "title": "Don't show title on page",
                                    "default": false
                                },
                                "bp_width": {
                                    "type": "string",
                                    "title": "Width",
                                    "enum": [
                                        "paragraph--width--tiny",
                                        "paragraph--width--narrow",
                                        "paragraph--width--medium",
                                        "paragraph--width--wide",
                                        "paragraph--width--full",
                                        "bg-edge2edge"
                                    ],
                                    "default": ""
                                }
                            },
                            "required": [
                                "revision_translation_affected",
                                "bp_gutter",
                                "bp_width"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "paragraph_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "paragraphs_type--paragraphs_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Paragraph type"
                                },
                                "bp_block": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "type",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Referenced resource",
                                                        "enum": [
                                                            "block--block"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "title": "Resource ID",
                                                        "format": "uuid",
                                                        "maxLength": 128
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "title": "Block"
                                },
                                "bp_image_field": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "media--image"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Background image"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "paragraph--bp_carousel": {
            "title": "paragraph:bp_carousel Schema",
            "description": "Describes the payload for 'paragraph' entities of the 'bp_carousel' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "paragraph--bp_carousel"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__revision_id": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The paragraphs entity language code."
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time that the Paragraph was created."
                                },
                                "parent_id": {
                                    "type": "string",
                                    "title": "Parent ID",
                                    "maxLength": 255,
                                    "description": "The ID of the parent entity of which this entity is referenced."
                                },
                                "parent_type": {
                                    "type": "string",
                                    "title": "Parent type",
                                    "maxLength": 32,
                                    "description": "The entity parent type to which this entity is referenced."
                                },
                                "parent_field_name": {
                                    "type": "string",
                                    "title": "Parent field name",
                                    "maxLength": 32,
                                    "description": "The entity parent field name to which this entity is referenced."
                                },
                                "behavior_settings": {
                                    "type": "string",
                                    "title": "Behavior settings",
                                    "description": "The behavior plugin settings",
                                    "default": "a:0:{}"
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "bp_background": {
                                    "type": "string",
                                    "title": "Background color",
                                    "enum": [
                                        "vbp_color_01",
                                        "vbp_color_02",
                                        "vbp_color_03",
                                        "vbp_color_04",
                                        "vbp_color_05"
                                    ]
                                },
                                "bp_classes": {
                                    "type": "string",
                                    "title": "CSS class(es)",
                                    "maxLength": 255,
                                    "description": "Customize the styling by adding CSS classes. Separate multiple classes by spaces."
                                },
                                "bp_gutter": {
                                    "type": "boolean",
                                    "title": "Gutter",
                                    "default": false
                                },
                                "bp_slide_interval": {
                                    "type": "string",
                                    "title": "Slide interval",
                                    "enum": [
                                        "false",
                                        1000,
                                        2000,
                                        3000,
                                        4000,
                                        5000,
                                        6000,
                                        7000
                                    ],
                                    "default": "false"
                                },
                                "bp_title": {
                                    "type": "string",
                                    "title": "Component title",
                                    "maxLength": 255,
                                    "description": "Fill in a title for this component to appear on the page, or just use it for editorial reference if you check the \\\"Don\\'t show title on page\\\" checkbox below."
                                },
                                "bp_title_status": {
                                    "type": "boolean",
                                    "title": "Don't show title on page",
                                    "default": false
                                },
                                "bp_width": {
                                    "type": "string",
                                    "title": "Width",
                                    "enum": [
                                        "paragraph--width--tiny",
                                        "paragraph--width--narrow",
                                        "paragraph--width--medium",
                                        "paragraph--width--wide",
                                        "paragraph--width--full",
                                        "bg-edge2edge"
                                    ],
                                    "default": ""
                                }
                            },
                            "required": [
                                "revision_translation_affected",
                                "bp_gutter",
                                "bp_width"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "paragraph_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "paragraphs_type--paragraphs_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Paragraph type"
                                },
                                "bp_slide_content": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "type",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Referenced resource",
                                                        "enum": [
                                                            "paragraph--bp_simple",
                                                            "paragraph--bp_image",
                                                            "paragraph--bp_accordion",
                                                            "paragraph--bp_columns",
                                                            "paragraph--bp_columns_three_uneven",
                                                            "paragraph--bp_columns_two_uneven",
                                                            "paragraph--bp_block",
                                                            "paragraph--bp_modal",
                                                            "paragraph--bp_tabs",
                                                            "paragraph--bp_view",
                                                            "paragraph--bp_webform"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "title": "Resource ID",
                                                        "format": "uuid",
                                                        "maxLength": 128
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "title": "Slide content"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "paragraph--bp_columns": {
            "title": "paragraph:bp_columns Schema",
            "description": "Describes the payload for 'paragraph' entities of the 'bp_columns' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "paragraph--bp_columns"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__revision_id": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The paragraphs entity language code."
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time that the Paragraph was created."
                                },
                                "parent_id": {
                                    "type": "string",
                                    "title": "Parent ID",
                                    "maxLength": 255,
                                    "description": "The ID of the parent entity of which this entity is referenced."
                                },
                                "parent_type": {
                                    "type": "string",
                                    "title": "Parent type",
                                    "maxLength": 32,
                                    "description": "The entity parent type to which this entity is referenced."
                                },
                                "parent_field_name": {
                                    "type": "string",
                                    "title": "Parent field name",
                                    "maxLength": 32,
                                    "description": "The entity parent field name to which this entity is referenced."
                                },
                                "behavior_settings": {
                                    "type": "string",
                                    "title": "Behavior settings",
                                    "description": "The behavior plugin settings",
                                    "default": "a:0:{}"
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "bp_background": {
                                    "type": "string",
                                    "title": "Background color",
                                    "enum": [
                                        "vbp_color_01",
                                        "vbp_color_02",
                                        "vbp_color_03",
                                        "vbp_color_04",
                                        "vbp_color_05"
                                    ]
                                },
                                "bp_classes": {
                                    "type": "string",
                                    "title": "CSS class(es)",
                                    "maxLength": 255,
                                    "description": "Customize the styling by adding CSS classes. Separate multiple classes by spaces."
                                },
                                "bp_gutter": {
                                    "type": "boolean",
                                    "title": "Gutter",
                                    "default": false
                                },
                                "bp_title": {
                                    "type": "string",
                                    "title": "Component title",
                                    "maxLength": 255,
                                    "description": "Fill in a title for this component to appear on the page, or just use it for editorial reference if you check the \\\"Don\\'t show title on page\\\" checkbox below."
                                },
                                "bp_title_status": {
                                    "type": "boolean",
                                    "title": "Don't show title on page",
                                    "default": false
                                },
                                "bp_width": {
                                    "type": "string",
                                    "title": "Width",
                                    "enum": [
                                        "paragraph--width--tiny",
                                        "paragraph--width--narrow",
                                        "paragraph--width--medium",
                                        "paragraph--width--wide",
                                        "paragraph--width--full",
                                        "bg-edge2edge"
                                    ],
                                    "default": ""
                                }
                            },
                            "required": [
                                "revision_translation_affected",
                                "bp_gutter",
                                "bp_width"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "paragraph_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "paragraphs_type--paragraphs_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Paragraph type"
                                },
                                "bp_column_content": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "type",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Referenced resource",
                                                        "enum": [
                                                            "paragraph--bp_simple",
                                                            "paragraph--bp_image",
                                                            "paragraph--bp_accordion",
                                                            "paragraph--bp_carousel",
                                                            "paragraph--bp_column_wrapper",
                                                            "paragraph--bp_columns",
                                                            "paragraph--bp_columns_three_uneven",
                                                            "paragraph--bp_columns_two_uneven",
                                                            "paragraph--bp_block",
                                                            "paragraph--bp_modal",
                                                            "paragraph--bp_tabs",
                                                            "paragraph--bp_view",
                                                            "paragraph--bp_webform"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "title": "Resource ID",
                                                        "format": "uuid",
                                                        "maxLength": 128
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "title": "Column content",
                                    "maxItems": 6
                                },
                                "bp_image_field": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "media--image"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Background image"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "paragraph--bp_columns_three_uneven": {
            "title": "paragraph:bp_columns_three_uneven Schema",
            "description": "Describes the payload for 'paragraph' entities of the 'bp_columns_three_uneven' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "paragraph--bp_columns_three_uneven"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__revision_id": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The paragraphs entity language code."
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time that the Paragraph was created."
                                },
                                "parent_id": {
                                    "type": "string",
                                    "title": "Parent ID",
                                    "maxLength": 255,
                                    "description": "The ID of the parent entity of which this entity is referenced."
                                },
                                "parent_type": {
                                    "type": "string",
                                    "title": "Parent type",
                                    "maxLength": 32,
                                    "description": "The entity parent type to which this entity is referenced."
                                },
                                "parent_field_name": {
                                    "type": "string",
                                    "title": "Parent field name",
                                    "maxLength": 32,
                                    "description": "The entity parent field name to which this entity is referenced."
                                },
                                "behavior_settings": {
                                    "type": "string",
                                    "title": "Behavior settings",
                                    "description": "The behavior plugin settings",
                                    "default": "a:0:{}"
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "bp_background": {
                                    "type": "string",
                                    "title": "Background color",
                                    "enum": [
                                        "vbp_color_01",
                                        "vbp_color_02",
                                        "vbp_color_03",
                                        "vbp_color_04",
                                        "vbp_color_05"
                                    ]
                                },
                                "bp_classes": {
                                    "type": "string",
                                    "title": "CSS class(es)",
                                    "maxLength": 255,
                                    "description": "Customize the styling of this component by adding CSS classes. Separate multiple classes by spaces."
                                },
                                "bp_column_style_3": {
                                    "type": "string",
                                    "title": "Column style",
                                    "enum": [
                                        "paragraph--style--25-50-25",
                                        "paragraph--style--50-25-25",
                                        "paragraph--style--25-25-50",
                                        "paragraph--style--16-66-16",
                                        "paragraph--style--66-16-16",
                                        "paragraph--style--16-16-66"
                                    ],
                                    "default": "paragraph--style--25-50-25"
                                },
                                "bp_gutter": {
                                    "type": "boolean",
                                    "title": "Gutter",
                                    "default": false
                                },
                                "bp_title": {
                                    "type": "string",
                                    "title": "Component title",
                                    "maxLength": 255,
                                    "description": "Fill in a title for this component to appear on the page, or just use it for editorial reference if you check the \\\"Don\\'t show title on page\\\" checkbox below."
                                },
                                "bp_title_status": {
                                    "type": "boolean",
                                    "title": "Don't show title on page",
                                    "default": false
                                },
                                "bp_width": {
                                    "type": "string",
                                    "title": "Width",
                                    "enum": [
                                        "paragraph--width--tiny",
                                        "paragraph--width--narrow",
                                        "paragraph--width--medium",
                                        "paragraph--width--wide",
                                        "paragraph--width--full",
                                        "bg-edge2edge"
                                    ],
                                    "default": ""
                                }
                            },
                            "required": [
                                "revision_translation_affected",
                                "bp_column_style_3",
                                "bp_gutter",
                                "bp_width"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "paragraph_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "paragraphs_type--paragraphs_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Paragraph type"
                                },
                                "bp_column_content_3": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "type",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Referenced resource",
                                                        "enum": [
                                                            "paragraph--bp_simple",
                                                            "paragraph--bp_image",
                                                            "paragraph--bp_accordion",
                                                            "paragraph--bp_carousel",
                                                            "paragraph--bp_column_wrapper",
                                                            "paragraph--bp_columns",
                                                            "paragraph--bp_columns_three_uneven",
                                                            "paragraph--bp_columns_two_uneven",
                                                            "paragraph--bp_block",
                                                            "paragraph--bp_modal",
                                                            "paragraph--bp_tabs",
                                                            "paragraph--bp_view",
                                                            "paragraph--bp_webform"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "title": "Resource ID",
                                                        "format": "uuid",
                                                        "maxLength": 128
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "title": "Column content",
                                    "maxItems": 3
                                },
                                "bp_image_field": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "media--image"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Background image"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "paragraph--bp_columns_two_uneven": {
            "title": "paragraph:bp_columns_two_uneven Schema",
            "description": "Describes the payload for 'paragraph' entities of the 'bp_columns_two_uneven' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "paragraph--bp_columns_two_uneven"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__revision_id": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The paragraphs entity language code."
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time that the Paragraph was created."
                                },
                                "parent_id": {
                                    "type": "string",
                                    "title": "Parent ID",
                                    "maxLength": 255,
                                    "description": "The ID of the parent entity of which this entity is referenced."
                                },
                                "parent_type": {
                                    "type": "string",
                                    "title": "Parent type",
                                    "maxLength": 32,
                                    "description": "The entity parent type to which this entity is referenced."
                                },
                                "parent_field_name": {
                                    "type": "string",
                                    "title": "Parent field name",
                                    "maxLength": 32,
                                    "description": "The entity parent field name to which this entity is referenced."
                                },
                                "behavior_settings": {
                                    "type": "string",
                                    "title": "Behavior settings",
                                    "description": "The behavior plugin settings",
                                    "default": "a:0:{}"
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "bp_background": {
                                    "type": "string",
                                    "title": "Background color",
                                    "enum": [
                                        "vbp_color_01",
                                        "vbp_color_02",
                                        "vbp_color_03",
                                        "vbp_color_04",
                                        "vbp_color_05"
                                    ]
                                },
                                "bp_classes": {
                                    "type": "string",
                                    "title": "CSS class(es)",
                                    "maxLength": 255,
                                    "description": "Customize the styling by adding CSS classes. Separate multiple classes by spaces."
                                },
                                "bp_column_style_2": {
                                    "type": "string",
                                    "title": "Column style",
                                    "enum": [
                                        "paragraph--style--75-25",
                                        "paragraph--style--66-33",
                                        "paragraph--style--25-75",
                                        "paragraph--style--33-66"
                                    ],
                                    "default": "paragraph--style--75-25"
                                },
                                "bp_gutter": {
                                    "type": "boolean",
                                    "title": "Gutter",
                                    "default": false
                                },
                                "bp_title": {
                                    "type": "string",
                                    "title": "Component title",
                                    "maxLength": 255,
                                    "description": "Fill in a title for this component to appear on the page, or just use it for editorial reference if you check the \\\"Don\\'t show title on page\\\" checkbox below."
                                },
                                "bp_title_status": {
                                    "type": "boolean",
                                    "title": "Don't show title on page",
                                    "default": false
                                },
                                "bp_width": {
                                    "type": "string",
                                    "title": "Width",
                                    "enum": [
                                        "paragraph--width--tiny",
                                        "paragraph--width--narrow",
                                        "paragraph--width--medium",
                                        "paragraph--width--wide",
                                        "paragraph--width--full",
                                        "bg-edge2edge"
                                    ],
                                    "default": ""
                                }
                            },
                            "required": [
                                "revision_translation_affected",
                                "bp_column_style_2",
                                "bp_gutter",
                                "bp_width"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "paragraph_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "paragraphs_type--paragraphs_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Paragraph type"
                                },
                                "bp_column_content_2": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "type",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Referenced resource",
                                                        "enum": [
                                                            "paragraph--bp_simple",
                                                            "paragraph--bp_image",
                                                            "paragraph--bp_accordion",
                                                            "paragraph--bp_carousel",
                                                            "paragraph--bp_column_wrapper",
                                                            "paragraph--bp_columns",
                                                            "paragraph--bp_columns_three_uneven",
                                                            "paragraph--bp_columns_two_uneven",
                                                            "paragraph--bp_block",
                                                            "paragraph--bp_modal",
                                                            "paragraph--bp_tabs",
                                                            "paragraph--bp_view",
                                                            "paragraph--bp_webform"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "title": "Resource ID",
                                                        "format": "uuid",
                                                        "maxLength": 128
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "title": "Column content",
                                    "maxItems": 2
                                },
                                "bp_image_field": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "media--image"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Background image"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "paragraph--bp_column_wrapper": {
            "title": "paragraph:bp_column_wrapper Schema",
            "description": "Describes the payload for 'paragraph' entities of the 'bp_column_wrapper' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "paragraph--bp_column_wrapper"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__revision_id": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The paragraphs entity language code."
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time that the Paragraph was created."
                                },
                                "parent_id": {
                                    "type": "string",
                                    "title": "Parent ID",
                                    "maxLength": 255,
                                    "description": "The ID of the parent entity of which this entity is referenced."
                                },
                                "parent_type": {
                                    "type": "string",
                                    "title": "Parent type",
                                    "maxLength": 32,
                                    "description": "The entity parent type to which this entity is referenced."
                                },
                                "parent_field_name": {
                                    "type": "string",
                                    "title": "Parent field name",
                                    "maxLength": 32,
                                    "description": "The entity parent field name to which this entity is referenced."
                                },
                                "behavior_settings": {
                                    "type": "string",
                                    "title": "Behavior settings",
                                    "description": "The behavior plugin settings",
                                    "default": "a:0:{}"
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                }
                            },
                            "required": [
                                "revision_translation_affected"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "paragraph_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "paragraphs_type--paragraphs_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Paragraph type"
                                },
                                "bp_column_content_w": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "type",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Referenced resource",
                                                        "enum": [
                                                            "paragraph--bp_simple",
                                                            "paragraph--bp_image",
                                                            "paragraph--bp_accordion",
                                                            "paragraph--bp_carousel",
                                                            "paragraph--bp_columns",
                                                            "paragraph--bp_columns_three_uneven",
                                                            "paragraph--bp_columns_two_uneven",
                                                            "paragraph--bp_block",
                                                            "paragraph--bp_modal",
                                                            "paragraph--bp_tabs",
                                                            "paragraph--bp_view",
                                                            "paragraph--bp_webform"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "title": "Resource ID",
                                                        "format": "uuid",
                                                        "maxLength": 128
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "title": "Column Wrapper Content"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "paragraph--bp_image": {
            "title": "paragraph:bp_image Schema",
            "description": "Describes the payload for 'paragraph' entities of the 'bp_image' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "paragraph--bp_image"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__revision_id": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The paragraphs entity language code."
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time that the Paragraph was created."
                                },
                                "parent_id": {
                                    "type": "string",
                                    "title": "Parent ID",
                                    "maxLength": 255,
                                    "description": "The ID of the parent entity of which this entity is referenced."
                                },
                                "parent_type": {
                                    "type": "string",
                                    "title": "Parent type",
                                    "maxLength": 32,
                                    "description": "The entity parent type to which this entity is referenced."
                                },
                                "parent_field_name": {
                                    "type": "string",
                                    "title": "Parent field name",
                                    "maxLength": 32,
                                    "description": "The entity parent field name to which this entity is referenced."
                                },
                                "behavior_settings": {
                                    "type": "string",
                                    "title": "Behavior settings",
                                    "description": "The behavior plugin settings",
                                    "default": "a:0:{}"
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "bp_background": {
                                    "type": "string",
                                    "title": "Background color",
                                    "enum": [
                                        "vbp_color_01",
                                        "vbp_color_02",
                                        "vbp_color_03",
                                        "vbp_color_04",
                                        "vbp_color_05"
                                    ]
                                },
                                "bp_classes": {
                                    "type": "string",
                                    "title": "CSS class(es)",
                                    "maxLength": 255,
                                    "description": "Customize the styling by adding CSS classes. Separate multiple classes by spaces."
                                },
                                "bp_gutter": {
                                    "type": "boolean",
                                    "title": "Gutter",
                                    "default": false
                                },
                                "bp_link": {
                                    "type": "object",
                                    "properties": {
                                        "uri": {
                                            "type": "uri",
                                            "title": "URI"
                                        },
                                        "title": {
                                            "type": "string",
                                            "title": "Link text"
                                        }
                                    },
                                    "title": "Link"
                                },
                                "bp_title": {
                                    "type": "string",
                                    "title": "Component title",
                                    "maxLength": 255,
                                    "description": "Fill in a title for this component to appear on the page, or just use it for editorial reference if you check the \\\"Don\\'t show title on page\\\" checkbox below."
                                },
                                "bp_title_status": {
                                    "type": "boolean",
                                    "title": "Don't show title on page",
                                    "default": false
                                },
                                "bp_width": {
                                    "type": "string",
                                    "title": "Width",
                                    "enum": [
                                        "paragraph--width--tiny",
                                        "paragraph--width--narrow",
                                        "paragraph--width--medium",
                                        "paragraph--width--wide",
                                        "paragraph--width--full",
                                        "bg-edge2edge"
                                    ],
                                    "default": ""
                                }
                            },
                            "required": [
                                "revision_translation_affected",
                                "bp_gutter",
                                "bp_width"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "paragraph_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "paragraphs_type--paragraphs_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Paragraph type"
                                },
                                "bp_image_field": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Image"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "paragraph--bp_modal": {
            "title": "paragraph:bp_modal Schema",
            "description": "Describes the payload for 'paragraph' entities of the 'bp_modal' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "paragraph--bp_modal"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__revision_id": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The paragraphs entity language code."
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time that the Paragraph was created."
                                },
                                "parent_id": {
                                    "type": "string",
                                    "title": "Parent ID",
                                    "maxLength": 255,
                                    "description": "The ID of the parent entity of which this entity is referenced."
                                },
                                "parent_type": {
                                    "type": "string",
                                    "title": "Parent type",
                                    "maxLength": 32,
                                    "description": "The entity parent type to which this entity is referenced."
                                },
                                "parent_field_name": {
                                    "type": "string",
                                    "title": "Parent field name",
                                    "maxLength": 32,
                                    "description": "The entity parent field name to which this entity is referenced."
                                },
                                "behavior_settings": {
                                    "type": "string",
                                    "title": "Behavior settings",
                                    "description": "The behavior plugin settings",
                                    "default": "a:0:{}"
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "bp_background": {
                                    "type": "string",
                                    "title": "Background color",
                                    "enum": [
                                        "vbp_color_01",
                                        "vbp_color_02",
                                        "vbp_color_03",
                                        "vbp_color_04",
                                        "vbp_color_05"
                                    ]
                                },
                                "bp_classes": {
                                    "type": "string",
                                    "title": "CSS class(es)",
                                    "maxLength": 255,
                                    "description": "Customize the styling by adding CSS classes. Separate multiple classes by spaces."
                                },
                                "bp_gutter": {
                                    "type": "boolean",
                                    "title": "Gutter",
                                    "default": false
                                },
                                "bp_modal_button_text": {
                                    "type": "string",
                                    "title": "Modal button text",
                                    "maxLength": 255
                                },
                                "bp_modal_title": {
                                    "type": "string",
                                    "title": "Modal title",
                                    "maxLength": 255
                                },
                                "bp_title": {
                                    "type": "string",
                                    "title": "Component title",
                                    "maxLength": 255,
                                    "description": "Fill in a title for this component to appear on the page, or just use it for editorial reference if you check the \\\"Don\\'t show title on page\\\" checkbox below."
                                },
                                "bp_title_status": {
                                    "type": "boolean",
                                    "title": "Don't show title on page",
                                    "default": false
                                },
                                "bp_width": {
                                    "type": "string",
                                    "title": "Width",
                                    "enum": [
                                        "paragraph--width--tiny",
                                        "paragraph--width--narrow",
                                        "paragraph--width--medium",
                                        "paragraph--width--wide",
                                        "paragraph--width--full",
                                        "bg-edge2edge"
                                    ],
                                    "default": ""
                                }
                            },
                            "required": [
                                "revision_translation_affected",
                                "bp_gutter",
                                "bp_modal_button_text",
                                "bp_width"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "paragraph_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "paragraphs_type--paragraphs_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Paragraph type"
                                },
                                "bp_image_field": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "media--image"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Background image"
                                },
                                "bp_modal_body": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "type",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Referenced resource",
                                                        "enum": [
                                                            "paragraph--bp_simple",
                                                            "paragraph--bp_image",
                                                            "paragraph--bp_accordion",
                                                            "paragraph--bp_carousel",
                                                            "paragraph--bp_columns",
                                                            "paragraph--bp_columns_three_uneven",
                                                            "paragraph--bp_columns_two_uneven",
                                                            "paragraph--bp_block",
                                                            "paragraph--bp_tabs",
                                                            "paragraph--bp_view",
                                                            "paragraph--bp_webform"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "title": "Resource ID",
                                                        "format": "uuid",
                                                        "maxLength": 128
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "title": "Modal body"
                                },
                                "bp_modal_footer": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "type",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Referenced resource",
                                                        "enum": [
                                                            "paragraph--bp_simple",
                                                            "paragraph--bp_image",
                                                            "paragraph--bp_accordion",
                                                            "paragraph--bp_block",
                                                            "paragraph--bp_carousel",
                                                            "paragraph--bp_columns",
                                                            "paragraph--bp_columns_three_uneven",
                                                            "paragraph--bp_columns_two_uneven",
                                                            "paragraph--bp_tabs",
                                                            "paragraph--bp_view",
                                                            "paragraph--bp_webform"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "title": "Resource ID",
                                                        "format": "uuid",
                                                        "maxLength": 128
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "title": "Modal footer"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "paragraph--bp_simple": {
            "title": "paragraph:bp_simple Schema",
            "description": "Describes the payload for 'paragraph' entities of the 'bp_simple' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "paragraph--bp_simple"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__revision_id": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The paragraphs entity language code."
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time that the Paragraph was created."
                                },
                                "parent_id": {
                                    "type": "string",
                                    "title": "Parent ID",
                                    "maxLength": 255,
                                    "description": "The ID of the parent entity of which this entity is referenced."
                                },
                                "parent_type": {
                                    "type": "string",
                                    "title": "Parent type",
                                    "maxLength": 32,
                                    "description": "The entity parent type to which this entity is referenced."
                                },
                                "parent_field_name": {
                                    "type": "string",
                                    "title": "Parent field name",
                                    "maxLength": 32,
                                    "description": "The entity parent field name to which this entity is referenced."
                                },
                                "behavior_settings": {
                                    "type": "string",
                                    "title": "Behavior settings",
                                    "description": "The behavior plugin settings",
                                    "default": "a:0:{}"
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "bp_background": {
                                    "type": "string",
                                    "title": "Background color",
                                    "enum": [
                                        "vbp_color_01",
                                        "vbp_color_02",
                                        "vbp_color_03",
                                        "vbp_color_04",
                                        "vbp_color_05"
                                    ]
                                },
                                "bp_classes": {
                                    "type": "string",
                                    "title": "CSS class(es)",
                                    "maxLength": 255,
                                    "description": "Customize the styling by adding CSS classes. Separate multiple classes by spaces."
                                },
                                "bp_gutter": {
                                    "type": "boolean",
                                    "title": "Gutter",
                                    "default": false
                                },
                                "bp_text": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Text"
                                        },
                                        "format": {
                                            "type": "string",
                                            "title": "Text format"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Text"
                                },
                                "bp_title": {
                                    "type": "string",
                                    "title": "Component title",
                                    "maxLength": 255,
                                    "description": "Fill in a title for this component to appear on the page, or just use it for editorial reference if you check the \\\"Don\\'t show title on page\\\" checkbox below."
                                },
                                "bp_title_status": {
                                    "type": "boolean",
                                    "title": "Don't show title on page",
                                    "default": false
                                },
                                "bp_width": {
                                    "type": "string",
                                    "title": "Width",
                                    "enum": [
                                        "paragraph--width--tiny",
                                        "paragraph--width--narrow",
                                        "paragraph--width--medium",
                                        "paragraph--width--wide",
                                        "paragraph--width--full",
                                        "bg-edge2edge"
                                    ],
                                    "default": ""
                                }
                            },
                            "required": [
                                "revision_translation_affected",
                                "bp_gutter",
                                "bp_width"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "paragraph_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "paragraphs_type--paragraphs_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Paragraph type"
                                },
                                "bp_image_field": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "media--image"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Background image"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "paragraph--bp_tabs": {
            "title": "paragraph:bp_tabs Schema",
            "description": "Describes the payload for 'paragraph' entities of the 'bp_tabs' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "paragraph--bp_tabs"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__revision_id": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The paragraphs entity language code."
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time that the Paragraph was created."
                                },
                                "parent_id": {
                                    "type": "string",
                                    "title": "Parent ID",
                                    "maxLength": 255,
                                    "description": "The ID of the parent entity of which this entity is referenced."
                                },
                                "parent_type": {
                                    "type": "string",
                                    "title": "Parent type",
                                    "maxLength": 32,
                                    "description": "The entity parent type to which this entity is referenced."
                                },
                                "parent_field_name": {
                                    "type": "string",
                                    "title": "Parent field name",
                                    "maxLength": 32,
                                    "description": "The entity parent field name to which this entity is referenced."
                                },
                                "behavior_settings": {
                                    "type": "string",
                                    "title": "Behavior settings",
                                    "description": "The behavior plugin settings",
                                    "default": "a:0:{}"
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "bp_background": {
                                    "type": "string",
                                    "title": "Background color",
                                    "enum": [
                                        "vbp_color_01",
                                        "vbp_color_02",
                                        "vbp_color_03",
                                        "vbp_color_04",
                                        "vbp_color_05"
                                    ]
                                },
                                "bp_classes": {
                                    "type": "string",
                                    "title": "CSS class(es)",
                                    "maxLength": 255,
                                    "description": "Customize the styling by adding CSS classes. Separate multiple classes by spaces."
                                },
                                "bp_gutter": {
                                    "type": "boolean",
                                    "title": "Gutter",
                                    "default": false
                                },
                                "bp_title": {
                                    "type": "string",
                                    "title": "Component title",
                                    "maxLength": 255,
                                    "description": "Fill in a title for this component to appear on the page, or just use it for editorial reference if you check the \\\"Don\\'t show title on page\\\" checkbox below."
                                },
                                "bp_title_status": {
                                    "type": "boolean",
                                    "title": "Don't show title on page",
                                    "default": false
                                },
                                "bp_width": {
                                    "type": "string",
                                    "title": "Width",
                                    "enum": [
                                        "paragraph--width--tiny",
                                        "paragraph--width--narrow",
                                        "paragraph--width--medium",
                                        "paragraph--width--wide",
                                        "paragraph--width--full",
                                        "bg-edge2edge"
                                    ],
                                    "default": ""
                                }
                            },
                            "required": [
                                "revision_translation_affected",
                                "bp_gutter",
                                "bp_width"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "paragraph_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "paragraphs_type--paragraphs_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Paragraph type"
                                },
                                "bp_image_field": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "media--image"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Background image"
                                },
                                "bp_tab_section": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "type",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Referenced resource",
                                                        "enum": [
                                                            "paragraph--bp_tab_section"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "title": "Resource ID",
                                                        "format": "uuid",
                                                        "maxLength": 128
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "title": "Tab"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "paragraph--bp_tab_section": {
            "title": "paragraph:bp_tab_section Schema",
            "description": "Describes the payload for 'paragraph' entities of the 'bp_tab_section' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "paragraph--bp_tab_section"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__revision_id": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The paragraphs entity language code."
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time that the Paragraph was created."
                                },
                                "parent_id": {
                                    "type": "string",
                                    "title": "Parent ID",
                                    "maxLength": 255,
                                    "description": "The ID of the parent entity of which this entity is referenced."
                                },
                                "parent_type": {
                                    "type": "string",
                                    "title": "Parent type",
                                    "maxLength": 32,
                                    "description": "The entity parent type to which this entity is referenced."
                                },
                                "parent_field_name": {
                                    "type": "string",
                                    "title": "Parent field name",
                                    "maxLength": 32,
                                    "description": "The entity parent field name to which this entity is referenced."
                                },
                                "behavior_settings": {
                                    "type": "string",
                                    "title": "Behavior settings",
                                    "description": "The behavior plugin settings",
                                    "default": "a:0:{}"
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "bp_tab_section_title": {
                                    "type": "string",
                                    "title": "Tab name",
                                    "maxLength": 255
                                }
                            },
                            "required": [
                                "revision_translation_affected",
                                "bp_tab_section_title"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "paragraph_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "paragraphs_type--paragraphs_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Paragraph type"
                                },
                                "bp_tab_section_body": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "type",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Referenced resource",
                                                        "enum": [
                                                            "paragraph--bp_simple",
                                                            "paragraph--bp_image",
                                                            "paragraph--bp_accordion",
                                                            "paragraph--bp_carousel",
                                                            "paragraph--bp_columns",
                                                            "paragraph--bp_columns_three_uneven",
                                                            "paragraph--bp_columns_two_uneven",
                                                            "paragraph--bp_block",
                                                            "paragraph--bp_modal",
                                                            "paragraph--bp_view",
                                                            "paragraph--bp_webform"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "title": "Resource ID",
                                                        "format": "uuid",
                                                        "maxLength": 128
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "title": "Tab body"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "paragraph--bp_view": {
            "title": "paragraph:bp_view Schema",
            "description": "Describes the payload for 'paragraph' entities of the 'bp_view' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "paragraph--bp_view"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__revision_id": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The paragraphs entity language code."
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time that the Paragraph was created."
                                },
                                "parent_id": {
                                    "type": "string",
                                    "title": "Parent ID",
                                    "maxLength": 255,
                                    "description": "The ID of the parent entity of which this entity is referenced."
                                },
                                "parent_type": {
                                    "type": "string",
                                    "title": "Parent type",
                                    "maxLength": 32,
                                    "description": "The entity parent type to which this entity is referenced."
                                },
                                "parent_field_name": {
                                    "type": "string",
                                    "title": "Parent field name",
                                    "maxLength": 32,
                                    "description": "The entity parent field name to which this entity is referenced."
                                },
                                "behavior_settings": {
                                    "type": "string",
                                    "title": "Behavior settings",
                                    "description": "The behavior plugin settings",
                                    "default": "a:0:{}"
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "bp_background": {
                                    "type": "string",
                                    "title": "Background color",
                                    "enum": [
                                        "vbp_color_01",
                                        "vbp_color_02",
                                        "vbp_color_03",
                                        "vbp_color_04",
                                        "vbp_color_05"
                                    ]
                                },
                                "bp_classes": {
                                    "type": "string",
                                    "title": "CSS class(es)",
                                    "maxLength": 255,
                                    "description": "Customize the styling by adding CSS classes. Separate multiple classes by spaces."
                                },
                                "bp_gutter": {
                                    "type": "boolean",
                                    "title": "Gutter",
                                    "default": false
                                },
                                "bp_title": {
                                    "type": "string",
                                    "title": "Component title",
                                    "maxLength": 255,
                                    "description": "Fill in a title for this component to appear on the page, or just use it for editorial reference if you check the \\\"Don\\'t show title on page\\\" checkbox below."
                                },
                                "bp_title_status": {
                                    "type": "boolean",
                                    "title": "Don't show title on page",
                                    "default": false
                                },
                                "bp_width": {
                                    "type": "string",
                                    "title": "Width",
                                    "enum": [
                                        "paragraph--width--tiny",
                                        "paragraph--width--narrow",
                                        "paragraph--width--medium",
                                        "paragraph--width--wide",
                                        "paragraph--width--full",
                                        "bg-edge2edge"
                                    ],
                                    "default": ""
                                }
                            },
                            "required": [
                                "revision_translation_affected",
                                "bp_gutter",
                                "bp_width"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "paragraph_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "paragraphs_type--paragraphs_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Paragraph type"
                                },
                                "bp_image_field": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "media--image"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Background image"
                                },
                                "bp_view": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "type",
                                                    "id"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Referenced resource",
                                                        "enum": [
                                                            "view--view"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "title": "Resource ID",
                                                        "format": "uuid",
                                                        "maxLength": 128
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "title": "View"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "paragraph--bp_webform": {
            "title": "paragraph:bp_webform Schema",
            "description": "Describes the payload for 'paragraph' entities of the 'bp_webform' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "paragraph--bp_webform"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__revision_id": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The paragraphs entity language code."
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time that the Paragraph was created."
                                },
                                "parent_id": {
                                    "type": "string",
                                    "title": "Parent ID",
                                    "maxLength": 255,
                                    "description": "The ID of the parent entity of which this entity is referenced."
                                },
                                "parent_type": {
                                    "type": "string",
                                    "title": "Parent type",
                                    "maxLength": 32,
                                    "description": "The entity parent type to which this entity is referenced."
                                },
                                "parent_field_name": {
                                    "type": "string",
                                    "title": "Parent field name",
                                    "maxLength": 32,
                                    "description": "The entity parent field name to which this entity is referenced."
                                },
                                "behavior_settings": {
                                    "type": "string",
                                    "title": "Behavior settings",
                                    "description": "The behavior plugin settings",
                                    "default": "a:0:{}"
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "bp_background": {
                                    "type": "string",
                                    "title": "Background color",
                                    "enum": [
                                        "vbp_color_01",
                                        "vbp_color_02",
                                        "vbp_color_03",
                                        "vbp_color_04",
                                        "vbp_color_05"
                                    ]
                                },
                                "bp_classes": {
                                    "type": "string",
                                    "title": "CSS class(es)",
                                    "maxLength": 255,
                                    "description": "Customize the styling by adding CSS classes. Separate multiple classes by spaces."
                                },
                                "bp_gutter": {
                                    "type": "boolean",
                                    "title": "Gutter",
                                    "default": false
                                },
                                "bp_title": {
                                    "type": "string",
                                    "title": "Component title",
                                    "maxLength": 255,
                                    "description": "Fill in a title for this component to appear on the page, or just use it for editorial reference if you check the \\\"Don\\'t show title on page\\\" checkbox below."
                                },
                                "bp_title_status": {
                                    "type": "boolean",
                                    "title": "Don't show title on page",
                                    "default": false
                                },
                                "bp_width": {
                                    "type": "string",
                                    "title": "Width",
                                    "enum": [
                                        "paragraph--width--tiny",
                                        "paragraph--width--narrow",
                                        "paragraph--width--medium",
                                        "paragraph--width--wide",
                                        "paragraph--width--full",
                                        "bg-edge2edge"
                                    ],
                                    "default": "paragraph--width--full"
                                }
                            },
                            "required": [
                                "revision_translation_affected",
                                "bp_gutter",
                                "bp_width"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "paragraph_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "paragraphs_type--paragraphs_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Paragraph type"
                                },
                                "bp_image_field": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "media--image"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Background image"
                                },
                                "bp_webform_field": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "webform--webform"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Webform"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "paragraph--from_library": {
            "title": "paragraph:from_library Schema",
            "description": "Describes the payload for 'paragraph' entities of the 'from_library' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "paragraph--from_library"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__revision_id": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The paragraphs entity language code."
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time that the Paragraph was created."
                                },
                                "parent_id": {
                                    "type": "string",
                                    "title": "Parent ID",
                                    "maxLength": 255,
                                    "description": "The ID of the parent entity of which this entity is referenced."
                                },
                                "parent_type": {
                                    "type": "string",
                                    "title": "Parent type",
                                    "maxLength": 32,
                                    "description": "The entity parent type to which this entity is referenced."
                                },
                                "parent_field_name": {
                                    "type": "string",
                                    "title": "Parent field name",
                                    "maxLength": 32,
                                    "description": "The entity parent field name to which this entity is referenced."
                                },
                                "behavior_settings": {
                                    "type": "string",
                                    "title": "Behavior settings",
                                    "description": "The behavior plugin settings",
                                    "default": "a:0:{}"
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                }
                            },
                            "required": [
                                "revision_translation_affected"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "paragraph_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "paragraphs_type--paragraphs_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Paragraph type"
                                },
                                "field_reusable_paragraph": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "paragraphs_library_item--paragraphs_library_item"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Reusable paragraph"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        },
        "paragraph--text_and_image": {
            "title": "paragraph:text_and_image Schema",
            "description": "Describes the payload for 'paragraph' entities of the 'text_and_image' bundle.",
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
                    "type": "object",
                    "required": [
                        "type",
                        "id"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "title": "type",
                            "description": "Resource type",
                            "enum": [
                                "paragraph--text_and_image"
                            ]
                        },
                        "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                        },
                        "attributes": {
                            "description": "Entity attributes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drupal_internal__id": {
                                    "type": "integer",
                                    "title": "ID"
                                },
                                "drupal_internal__revision_id": {
                                    "type": "integer",
                                    "title": "Revision ID"
                                },
                                "langcode": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Language code"
                                        },
                                        "language": {
                                            "type": "language_reference",
                                            "title": "Language object",
                                            "description": "The referenced language"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Language code",
                                    "description": "The paragraphs entity language code."
                                },
                                "status": {
                                    "type": "boolean",
                                    "title": "Published",
                                    "default": true
                                },
                                "created": {
                                    "type": "number",
                                    "title": "Authored on",
                                    "format": "utc-millisec",
                                    "description": "The time that the Paragraph was created."
                                },
                                "parent_id": {
                                    "type": "string",
                                    "title": "Parent ID",
                                    "maxLength": 255,
                                    "description": "The ID of the parent entity of which this entity is referenced."
                                },
                                "parent_type": {
                                    "type": "string",
                                    "title": "Parent type",
                                    "maxLength": 32,
                                    "description": "The entity parent type to which this entity is referenced."
                                },
                                "parent_field_name": {
                                    "type": "string",
                                    "title": "Parent field name",
                                    "maxLength": 32,
                                    "description": "The entity parent field name to which this entity is referenced."
                                },
                                "behavior_settings": {
                                    "type": "string",
                                    "title": "Behavior settings",
                                    "description": "The behavior plugin settings",
                                    "default": "a:0:{}"
                                },
                                "default_langcode": {
                                    "type": "boolean",
                                    "title": "Default translation",
                                    "description": "A flag indicating whether this is the default translation.",
                                    "default": true
                                },
                                "revision_default": {
                                    "type": "boolean",
                                    "title": "Default revision",
                                    "description": "A flag indicating whether this was a default revision when it was saved."
                                },
                                "revision_translation_affected": {
                                    "type": "boolean",
                                    "title": "Revision translation affected",
                                    "description": "Indicates if the last edit of a translation belongs to current revision."
                                },
                                "bp_background": {
                                    "type": "string",
                                    "title": "Background color",
                                    "enum": [
                                        "vbp_color_01",
                                        "vbp_color_02",
                                        "vbp_color_03",
                                        "vbp_color_04",
                                        "vbp_color_05"
                                    ]
                                },
                                "bp_classes": {
                                    "type": "string",
                                    "title": "CSS class(es)",
                                    "maxLength": 255,
                                    "description": "Customize the styling by adding CSS classes. Separate multiple classes by spaces."
                                },
                                "bp_gutter": {
                                    "type": "boolean",
                                    "title": "Gutter",
                                    "default": false
                                },
                                "bp_title": {
                                    "type": "string",
                                    "title": "Component title",
                                    "maxLength": 255,
                                    "description": "Fill in a title for this component to appear on the page, or just use it for editorial reference if you check the \\\"Don\\'t show title on page\\\" checkbox below."
                                },
                                "bp_title_status": {
                                    "type": "boolean",
                                    "title": "Don't show title on page",
                                    "default": false
                                },
                                "bp_width": {
                                    "type": "string",
                                    "title": "Width",
                                    "enum": [
                                        "paragraph--width--tiny",
                                        "paragraph--width--narrow",
                                        "paragraph--width--medium",
                                        "paragraph--width--wide",
                                        "paragraph--width--full",
                                        "bg-edge2edge"
                                    ],
                                    "default": "paragraph--width--full"
                                },
                                "field_image_position": {
                                    "type": "string",
                                    "title": "Image position",
                                    "enum": [
                                        "right",
                                        "left"
                                    ],
                                    "default": "right"
                                },
                                "field_text_content": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "title": "Text"
                                        },
                                        "format": {
                                            "type": "string",
                                            "title": "Text format"
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ],
                                    "title": "Text"
                                },
                                "text_and_image_style": {
                                    "type": "string",
                                    "title": "Fields style",
                                    "enum": [
                                        "paragraph--style--50-50",
                                        "paragraph--style--75-25",
                                        "paragraph--style--66-33",
                                        "paragraph--style--25-75",
                                        "paragraph--style--33-66"
                                    ],
                                    "default": "paragraph--style--50-50"
                                }
                            },
                            "required": [
                                "revision_translation_affected",
                                "bp_gutter",
                                "bp_width",
                                "field_image_position",
                                "text_and_image_style"
                            ]
                        },
                        "relationships": {
                            "description": "Entity relationships",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "paragraph_type": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "paragraphs_type--paragraphs_type"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Paragraph type"
                                },
                                "bp_image_field": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "media--image"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Background image"
                                },
                                "field_image": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "required": [
                                                "type",
                                                "id"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "title": "Referenced resource",
                                                    "enum": [
                                                        "media--image"
                                                    ]
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "Resource ID",
                                                    "format": "uuid",
                                                    "maxLength": 128
                                                }
                                            }
                                        }
                                    },
                                    "title": "Image"
                                }
                            },
                            "required": []
                        },
                        "links": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                "type": "object",
                                "required": [
                                    "href"
                                ],
                                "properties": {
                                    "href": {
                                        "description": "A string containing the link's URL . ",
                                        "type": "string",
                                        "format": "uri - reference"
                                    },
                                    "meta": {
                                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                }
                            }
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                },
                "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                        "type": "object",
                        "required": [
                            "href"
                        ],
                        "properties": {
                            "href": {
                                "description": "A string containing the link's URL . ",
                                "type": "string",
                                "format": "uri - reference"
                            },
                            "meta": {
                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "jsonapi": {
                    "description": "An object describing the server's implementation",
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        },
                        "meta": {
                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": true
        }
    },
    "consumes": [
        "application/vnd.api+json"
    ],
    "produces": [
        "application/vnd.api+json"
    ],
    "paths": {
        "/block_content/varbase_gallery_block/{entity}/relationships/block_content_type": {
            "delete": {
                "summary": "Relationship: block_content_type (Custom block type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the block_content varbase_gallery_block"
                    }
                ],
                "tags": [
                    "Custom block - Gallery"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: block_content_type (Custom block type)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the block_content_type--block_content_type resource type through the <em class=\"placeholder\">block_content_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the block_content varbase_gallery_block"
                    }
                ],
                "tags": [
                    "Custom block - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "block_content_type--block_content_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: block_content_type (Custom block type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the block_content varbase_gallery_block"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "block_content_type--block_content_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Custom block - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "block_content_type--block_content_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: block_content_type (Custom block type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the block_content varbase_gallery_block"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "block_content_type--block_content_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Custom block - Gallery"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "block_content_type--block_content_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/block_content/varbase_gallery_block": {
            "get": {
                "summary": "List (Custom block - Gallery)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the block_content--varbase_gallery_block resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Custom block - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "block_content:varbase_gallery_block Schema",
                            "description": "Describes the payload for 'block_content' entities of the 'varbase_gallery_block' bundle.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/block_content--varbase_gallery_block/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (Custom block - Gallery)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">block_content</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/block_content--varbase_gallery_block"
                        }
                    }
                ],
                "tags": [
                    "Custom block - Gallery"
                ],
                "responses": []
            }
        },
        "/block_content/varbase_gallery_block/{entity}/field_gallery": {
            "get": {
                "summary": "Related: field_gallery (Media - Gallery)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the media--gallery resource type through the <em class=\"placeholder\">field_gallery</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the block_content varbase_gallery_block"
                    }
                ],
                "tags": [
                    "Custom block - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/media--gallery"
                        }
                    }
                }
            }
        },
        "/block_content/varbase_gallery_block/{entity}/relationships/field_gallery": {
            "delete": {
                "summary": "Relationship: field_gallery (Media - Gallery)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the block_content varbase_gallery_block"
                    }
                ],
                "tags": [
                    "Custom block - Gallery"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: field_gallery (Media - Gallery)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media--gallery resource type through the <em class=\"placeholder\">field_gallery</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the block_content varbase_gallery_block"
                    }
                ],
                "tags": [
                    "Custom block - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media--gallery"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: field_gallery (Media - Gallery)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the block_content varbase_gallery_block"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media--gallery"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Custom block - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media--gallery"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: field_gallery (Media - Gallery)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the block_content varbase_gallery_block"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media--gallery"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Custom block - Gallery"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media--gallery"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/block_content/varbase_gallery_block/{entity}": {
            "get": {
                "summary": "View (Custom block - Gallery)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the block_content--varbase_gallery_block resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the block_content varbase_gallery_block"
                    }
                ],
                "tags": [
                    "Custom block - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/block_content--varbase_gallery_block"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (Custom block - Gallery)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the block_content varbase_gallery_block"
                    }
                ],
                "tags": [
                    "Custom block - Gallery"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Custom block - Gallery)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the block_content varbase_gallery_block"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">block_content</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/block_content--varbase_gallery_block"
                        }
                    }
                ],
                "tags": [
                    "Custom block - Gallery"
                ],
                "responses": []
            }
        },
        "/block_content/varbase_gallery_block/{entity}/revision_user": {
            "get": {
                "summary": "Related: revision_user (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the block_content varbase_gallery_block"
                    }
                ],
                "tags": [
                    "Custom block - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/block_content/varbase_gallery_block/{entity}/relationships/revision_user": {
            "delete": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the block_content varbase_gallery_block"
                    }
                ],
                "tags": [
                    "Custom block - Gallery"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: revision_user (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the block_content varbase_gallery_block"
                    }
                ],
                "tags": [
                    "Custom block - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the block_content varbase_gallery_block"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Custom block - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the block_content varbase_gallery_block"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Custom block - Gallery"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/date_format/date_format": {
            "get": {
                "summary": "List (Date format)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the date_format--date_format resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Date format"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "summary": "Create (Date format)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">date_format</em> object",
                        "required": true,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "Date format"
                ],
                "responses": []
            }
        },
        "/date_format/date_format/{entity}": {
            "get": {
                "summary": "View (Date format)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the date_format--date_format resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the date_format date_format"
                    }
                ],
                "tags": [
                    "Date format"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "summary": "Remove (Date format)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the date_format date_format"
                    }
                ],
                "tags": [
                    "Date format"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Date format)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the date_format date_format"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">date_format</em> object",
                        "required": true,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "Date format"
                ],
                "responses": []
            }
        },
        "/entity_embed_fake_entity/entity_embed_fake_entity": {
            "post": {
                "summary": "Create (Fake entity type)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">entity_embed_fake_entity</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity_embed_fake_entity--entity_embed_fake_entity"
                        }
                    }
                ],
                "tags": [
                    "Fake entity type"
                ],
                "responses": []
            }
        },
        "/entity_queue/entity_queue": {
            "get": {
                "summary": "List (Entity queue)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the entity_queue--entity_queue resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Entity queue"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "summary": "Create (Entity queue)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">entity_queue</em> object",
                        "required": true,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "Entity queue"
                ],
                "responses": []
            }
        },
        "/entity_queue/entity_queue/{entity}": {
            "get": {
                "summary": "View (Entity queue)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the entity_queue--entity_queue resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the entity_queue entity_queue"
                    }
                ],
                "tags": [
                    "Entity queue"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "summary": "Remove (Entity queue)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the entity_queue entity_queue"
                    }
                ],
                "tags": [
                    "Entity queue"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Entity queue)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the entity_queue entity_queue"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">entity_queue</em> object",
                        "required": true,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "Entity queue"
                ],
                "responses": []
            }
        },
        "/file/file": {
            "get": {
                "summary": "List (File)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the file--file resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "File"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "file Schema",
                            "description": "Describes the payload for 'file' entities.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/file--file/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">file</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/file--file"
                        }
                    }
                ],
                "tags": [
                    "File"
                ],
                "responses": []
            }
        },
        "/file/file/{entity}": {
            "get": {
                "summary": "View (File)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the file--file resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the file file"
                    }
                ],
                "tags": [
                    "File"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/file--file"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the file file"
                    }
                ],
                "tags": [
                    "File"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the file file"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">file</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/file--file"
                        }
                    }
                ],
                "tags": [
                    "File"
                ],
                "responses": []
            }
        },
        "/file/file/{entity}/uid": {
            "get": {
                "summary": "Related: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the file file"
                    }
                ],
                "tags": [
                    "File"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/file/file/{entity}/relationships/uid": {
            "delete": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the file file"
                    }
                ],
                "tags": [
                    "File"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the file file"
                    }
                ],
                "tags": [
                    "File"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the file file"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "File"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the file file"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "File"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/group/project/{entity}/banner": {
            "get": {
                "summary": "Related: banner (File)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">banner</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group project"
                    }
                ],
                "tags": [
                    "Group - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/file--file"
                        }
                    }
                }
            }
        },
        "/group/project/{entity}/relationships/banner": {
            "delete": {
                "summary": "Relationship: banner (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group project"
                    }
                ],
                "tags": [
                    "Group - Project"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: banner (File)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">banner</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group project"
                    }
                ],
                "tags": [
                    "Group - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: banner (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: banner (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group - Project"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/group/project": {
            "get": {
                "summary": "List (Group - Project)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the group--project resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Group - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "group:project Schema",
                            "description": "Describes the payload for 'group' entities of the 'project' bundle.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/group--project/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (Group - Project)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">group</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/group--project"
                        }
                    }
                ],
                "tags": [
                    "Group - Project"
                ],
                "responses": []
            }
        },
        "/group/project/{entity}/{file_field_name}": {
            "post": {
                "summary": "File_upload POST",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">group</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/group--project"
                        }
                    }
                ],
                "tags": [
                    "Group - Project"
                ],
                "responses": {
                    "201": {
                        "description": "Entity created",
                        "schema": {
                            "$ref": "#/definitions/group--project"
                        }
                    }
                }
            }
        },
        "/group/project/{file_field_name}": {
            "post": {
                "summary": "File_upload POST",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">group</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/group--project"
                        }
                    }
                ],
                "tags": [
                    "Group - Project"
                ],
                "responses": {
                    "201": {
                        "description": "Entity created",
                        "schema": {
                            "$ref": "#/definitions/group--project"
                        }
                    }
                }
            }
        },
        "/group/project/{entity}/group_type": {
            "get": {
                "summary": "Related: group_type (Group type)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group_type--group_type resource type through the <em class=\"placeholder\">group_type</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group project"
                    }
                ],
                "tags": [
                    "Group - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group/project/{entity}/relationships/group_type": {
            "delete": {
                "summary": "Relationship: group_type (Group type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group project"
                    }
                ],
                "tags": [
                    "Group - Project"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: group_type (Group type)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group_type--group_type resource type through the <em class=\"placeholder\">group_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group project"
                    }
                ],
                "tags": [
                    "Group - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group_type--group_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: group_type (Group type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group_type--group_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group_type--group_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: group_type (Group type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group_type--group_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group - Project"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group_type--group_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/group/project/{entity}": {
            "get": {
                "summary": "View (Group - Project)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the group--project resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group project"
                    }
                ],
                "tags": [
                    "Group - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/group--project"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (Group - Project)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group project"
                    }
                ],
                "tags": [
                    "Group - Project"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Group - Project)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">group</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/group--project"
                        }
                    }
                ],
                "tags": [
                    "Group - Project"
                ],
                "responses": []
            }
        },
        "/group/project/{entity}/uid": {
            "get": {
                "summary": "Related: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group project"
                    }
                ],
                "tags": [
                    "Group - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/group/project/{entity}/relationships/uid": {
            "delete": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group project"
                    }
                ],
                "tags": [
                    "Group - Project"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group project"
                    }
                ],
                "tags": [
                    "Group - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group - Project"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/group_content/project-group_membership": {
            "get": {
                "summary": "List (Group content - Project: Group membership)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the group_content--project-group_membership resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "group_content:project-group_membership Schema",
                            "description": "Describes the payload for 'group_content' entities of the 'project-group_membership' bundle.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/group_content--project-group_membership/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (Group content - Project: Group membership)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">group_content</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/group_content--project-group_membership"
                        }
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": []
            }
        },
        "/group_content/project-group_membership/{entity}/entity_id": {
            "get": {
                "summary": "Related: entity_id (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">entity_id</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/group_content/project-group_membership/{entity}/relationships/entity_id": {
            "delete": {
                "summary": "Relationship: entity_id (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: entity_id (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">entity_id</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: entity_id (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: entity_id (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/group_content/project-group_membership/{entity}/gid": {
            "get": {
                "summary": "Related: gid (Group - Project)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--project resource type through the <em class=\"placeholder\">gid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/group--project"
                        }
                    }
                }
            }
        },
        "/group_content/project-group_membership/{entity}/relationships/gid": {
            "delete": {
                "summary": "Relationship: gid (Group - Project)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: gid (Group - Project)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--project resource type through the <em class=\"placeholder\">gid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group--project"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: gid (Group - Project)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group--project"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group--project"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: gid (Group - Project)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group--project"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group--project"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/group_content/project-group_membership/{entity}/group_content_type": {
            "get": {
                "summary": "Related: group_content_type (Group content type)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group_content_type--group_content_type resource type through the <em class=\"placeholder\">group_content_type</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group_content/project-group_membership/{entity}/relationships/group_content_type": {
            "delete": {
                "summary": "Relationship: group_content_type (Group content type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: group_content_type (Group content type)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group_content_type--group_content_type resource type through the <em class=\"placeholder\">group_content_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group_content_type--group_content_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: group_content_type (Group content type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group_content_type--group_content_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group_content_type--group_content_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: group_content_type (Group content type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group_content_type--group_content_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group_content_type--group_content_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/group_content/project-group_membership/{entity}/group_roles": {
            "get": {
                "summary": "Related: group_roles (Group role)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group_role--group_role resource type through the <em class=\"placeholder\">group_roles</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group_content/project-group_membership/{entity}/relationships/group_roles": {
            "delete": {
                "summary": "Relationship: group_roles (Group role)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: group_roles (Group role)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group_role--group_role resource type through the <em class=\"placeholder\">group_roles</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "group_role--group_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: group_roles (Group role)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "group_role--group_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "group_role--group_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: group_roles (Group role)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "group_role--group_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "group_role--group_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                }
            }
        },
        "/group_content/project-group_membership/{entity}": {
            "get": {
                "summary": "View (Group content - Project: Group membership)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the group_content--project-group_membership resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/group_content--project-group_membership"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (Group content - Project: Group membership)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Group content - Project: Group membership)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">group_content</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/group_content--project-group_membership"
                        }
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": []
            }
        },
        "/group_content/project-group_membership/{entity}/uid": {
            "get": {
                "summary": "Related: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/group_content/project-group_membership/{entity}/relationships/uid": {
            "delete": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_membership"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group content - Project: Group membership"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/group_content/project-group_node-project": {
            "get": {
                "summary": "List (Group content - Project: Group node (Project))",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the group_content--project-group_node-project resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "group_content:project-group_node-project Schema",
                            "description": "Describes the payload for 'group_content' entities of the 'project-group_node-project' bundle.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/group_content--project-group_node-project/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (Group content - Project: Group node (Project))",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">group_content</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/group_content--project-group_node-project"
                        }
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": []
            }
        },
        "/group_content/project-group_node-project/{entity}/entity_id": {
            "get": {
                "summary": "Related: entity_id (Content - Project)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the node--project resource type through the <em class=\"placeholder\">entity_id</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_node-project"
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/node--project"
                        }
                    }
                }
            }
        },
        "/group_content/project-group_node-project/{entity}/relationships/entity_id": {
            "delete": {
                "summary": "Relationship: entity_id (Content - Project)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_node-project"
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: entity_id (Content - Project)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the node--project resource type through the <em class=\"placeholder\">entity_id</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_node-project"
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "node--project"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: entity_id (Content - Project)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_node-project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "node--project"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "node--project"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: entity_id (Content - Project)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_node-project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "node--project"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "node--project"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/group_content/project-group_node-project/{entity}/gid": {
            "get": {
                "summary": "Related: gid (Group - Project)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--project resource type through the <em class=\"placeholder\">gid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_node-project"
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/group--project"
                        }
                    }
                }
            }
        },
        "/group_content/project-group_node-project/{entity}/relationships/gid": {
            "delete": {
                "summary": "Relationship: gid (Group - Project)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_node-project"
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: gid (Group - Project)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--project resource type through the <em class=\"placeholder\">gid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_node-project"
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group--project"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: gid (Group - Project)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_node-project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group--project"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group--project"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: gid (Group - Project)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_node-project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group--project"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group--project"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/group_content/project-group_node-project/{entity}/group_content_type": {
            "get": {
                "summary": "Related: group_content_type (Group content type)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group_content_type--group_content_type resource type through the <em class=\"placeholder\">group_content_type</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_node-project"
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/group_content/project-group_node-project/{entity}/relationships/group_content_type": {
            "delete": {
                "summary": "Relationship: group_content_type (Group content type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_node-project"
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: group_content_type (Group content type)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group_content_type--group_content_type resource type through the <em class=\"placeholder\">group_content_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_node-project"
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group_content_type--group_content_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: group_content_type (Group content type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_node-project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group_content_type--group_content_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group_content_type--group_content_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: group_content_type (Group content type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_node-project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group_content_type--group_content_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "group_content_type--group_content_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/group_content/project-group_node-project/{entity}": {
            "get": {
                "summary": "View (Group content - Project: Group node (Project))",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the group_content--project-group_node-project resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_node-project"
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/group_content--project-group_node-project"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (Group content - Project: Group node (Project))",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_node-project"
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Group content - Project: Group node (Project))",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_node-project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">group_content</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/group_content--project-group_node-project"
                        }
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": []
            }
        },
        "/group_content/project-group_node-project/{entity}/uid": {
            "get": {
                "summary": "Related: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_node-project"
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/group_content/project-group_node-project/{entity}/relationships/uid": {
            "delete": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_node-project"
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_node-project"
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_node-project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content project-group_node-project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Group content - Project: Group node (Project)"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/group_content_type/group_content_type": {
            "get": {
                "summary": "List (Group content type)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the group_content_type--group_content_type resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Group content type"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "summary": "Create (Group content type)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">group_content_type</em> object",
                        "required": true,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "Group content type"
                ],
                "responses": []
            }
        },
        "/group_content_type/group_content_type/{entity}": {
            "get": {
                "summary": "View (Group content type)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the group_content_type--group_content_type resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content_type group_content_type"
                    }
                ],
                "tags": [
                    "Group content type"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "summary": "Remove (Group content type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content_type group_content_type"
                    }
                ],
                "tags": [
                    "Group content type"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Group content type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_content_type group_content_type"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">group_content_type</em> object",
                        "required": true,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "Group content type"
                ],
                "responses": []
            }
        },
        "/group_role/group_role": {
            "get": {
                "summary": "List (Group role)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the group_role--group_role resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Group role"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "summary": "Create (Group role)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">group_role</em> object",
                        "required": true,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "Group role"
                ],
                "responses": []
            }
        },
        "/group_role/group_role/{entity}": {
            "get": {
                "summary": "View (Group role)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the group_role--group_role resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_role group_role"
                    }
                ],
                "tags": [
                    "Group role"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "summary": "Remove (Group role)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_role group_role"
                    }
                ],
                "tags": [
                    "Group role"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Group role)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_role group_role"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">group_role</em> object",
                        "required": true,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "Group role"
                ],
                "responses": []
            }
        },
        "/group_type/group_type": {
            "get": {
                "summary": "List (Group type)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the group_type--group_type resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Group type"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "summary": "Create (Group type)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">group_type</em> object",
                        "required": true,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "Group type"
                ],
                "responses": []
            }
        },
        "/group_type/group_type/{entity}": {
            "get": {
                "summary": "View (Group type)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the group_type--group_type resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_type group_type"
                    }
                ],
                "tags": [
                    "Group type"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "summary": "Remove (Group type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_type group_type"
                    }
                ],
                "tags": [
                    "Group type"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Group type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the group_type group_type"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">group_type</em> object",
                        "required": true,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "Group type"
                ],
                "responses": []
            }
        },
        "/media/audio/{entity}/relationships/bundle": {
            "delete": {
                "summary": "Relationship: bundle (Media type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: bundle (Media type)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media_type--media_type resource type through the <em class=\"placeholder\">bundle</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: bundle (Media type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: bundle (Media type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/audio": {
            "get": {
                "summary": "List (Media - Audio)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the media--audio resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "media:audio Schema",
                            "description": "Describes the payload for 'media' entities of the 'audio' bundle.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/media--audio/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (Media - Audio)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--audio"
                        }
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": []
            }
        },
        "/media/audio/{entity}/field_media_audio_file": {
            "get": {
                "summary": "Related: field_media_audio_file (File)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_media_audio_file</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/file--file"
                        }
                    }
                }
            }
        },
        "/media/audio/{entity}/relationships/field_media_audio_file": {
            "delete": {
                "summary": "Relationship: field_media_audio_file (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: field_media_audio_file (File)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_media_audio_file</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: field_media_audio_file (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: field_media_audio_file (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/audio/{entity}/{file_field_name}": {
            "post": {
                "summary": "File_upload POST",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--audio"
                        }
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "201": {
                        "description": "Entity created",
                        "schema": {
                            "$ref": "#/definitions/media--audio"
                        }
                    }
                }
            }
        },
        "/media/audio/{file_field_name}": {
            "post": {
                "summary": "File_upload POST",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--audio"
                        }
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "201": {
                        "description": "Entity created",
                        "schema": {
                            "$ref": "#/definitions/media--audio"
                        }
                    }
                }
            }
        },
        "/media/audio/{entity}": {
            "get": {
                "summary": "View (Media - Audio)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the media--audio resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/media--audio"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (Media - Audio)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Media - Audio)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--audio"
                        }
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": []
            }
        },
        "/media/audio/{entity}/revision_user": {
            "get": {
                "summary": "Related: revision_user (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/media/audio/{entity}/relationships/revision_user": {
            "delete": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: revision_user (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/audio/{entity}/thumbnail": {
            "get": {
                "summary": "Related: thumbnail (File)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">thumbnail</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/file--file"
                        }
                    }
                }
            }
        },
        "/media/audio/{entity}/relationships/thumbnail": {
            "delete": {
                "summary": "Relationship: thumbnail (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: thumbnail (File)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">thumbnail</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: thumbnail (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: thumbnail (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/audio/{entity}/uid": {
            "get": {
                "summary": "Related: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/media/audio/{entity}/relationships/uid": {
            "delete": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media audio"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Audio"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/file/{entity}/relationships/bundle": {
            "delete": {
                "summary": "Relationship: bundle (Media type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: bundle (Media type)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media_type--media_type resource type through the <em class=\"placeholder\">bundle</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: bundle (Media type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: bundle (Media type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/file": {
            "get": {
                "summary": "List (Media - File)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the media--file resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "media:file Schema",
                            "description": "Describes the payload for 'media' entities of the 'file' bundle.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/media--file/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (Media - File)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--file"
                        }
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": []
            }
        },
        "/media/file/{entity}/field_media_file": {
            "get": {
                "summary": "Related: field_media_file (File)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_media_file</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/file--file"
                        }
                    }
                }
            }
        },
        "/media/file/{entity}/relationships/field_media_file": {
            "delete": {
                "summary": "Relationship: field_media_file (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: field_media_file (File)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_media_file</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: field_media_file (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: field_media_file (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/file/{entity}/{file_field_name}": {
            "post": {
                "summary": "File_upload POST",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--file"
                        }
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "201": {
                        "description": "Entity created",
                        "schema": {
                            "$ref": "#/definitions/media--file"
                        }
                    }
                }
            }
        },
        "/media/file/{file_field_name}": {
            "post": {
                "summary": "File_upload POST",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--file"
                        }
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "201": {
                        "description": "Entity created",
                        "schema": {
                            "$ref": "#/definitions/media--file"
                        }
                    }
                }
            }
        },
        "/media/file/{entity}": {
            "get": {
                "summary": "View (Media - File)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the media--file resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/media--file"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (Media - File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Media - File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--file"
                        }
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": []
            }
        },
        "/media/file/{entity}/revision_user": {
            "get": {
                "summary": "Related: revision_user (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/media/file/{entity}/relationships/revision_user": {
            "delete": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: revision_user (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/file/{entity}/thumbnail": {
            "get": {
                "summary": "Related: thumbnail (File)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">thumbnail</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/file--file"
                        }
                    }
                }
            }
        },
        "/media/file/{entity}/relationships/thumbnail": {
            "delete": {
                "summary": "Relationship: thumbnail (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: thumbnail (File)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">thumbnail</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: thumbnail (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: thumbnail (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/file/{entity}/uid": {
            "get": {
                "summary": "Related: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/media/file/{entity}/relationships/uid": {
            "delete": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media file"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - File"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/gallery/{entity}/relationships/bundle": {
            "delete": {
                "summary": "Relationship: bundle (Media type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: bundle (Media type)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media_type--media_type resource type through the <em class=\"placeholder\">bundle</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: bundle (Media type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: bundle (Media type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/gallery": {
            "get": {
                "summary": "List (Media - Gallery)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the media--gallery resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "media:gallery Schema",
                            "description": "Describes the payload for 'media' entities of the 'gallery' bundle.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/media--gallery/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (Media - Gallery)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--gallery"
                        }
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": []
            }
        },
        "/media/gallery/{entity}/field_media_gallery": {
            "get": {
                "summary": "Related: field_media_gallery (Media - Image)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the media--image resource type through the <em class=\"placeholder\">field_media_gallery</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "media:image Schema",
                            "description": "Describes the payload for 'media' entities of the 'image' bundle.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/media--image/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/media/gallery/{entity}/relationships/field_media_gallery": {
            "delete": {
                "summary": "Relationship: field_media_gallery (Media - Image)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: field_media_gallery (Media - Image)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media--image resource type through the <em class=\"placeholder\">field_media_gallery</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "media--image"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: field_media_gallery (Media - Image)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "media--image"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "media--image"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: field_media_gallery (Media - Image)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "media--image"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "media--image"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/gallery/{entity}/{file_field_name}": {
            "post": {
                "summary": "File_upload POST",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--gallery"
                        }
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "201": {
                        "description": "Entity created",
                        "schema": {
                            "$ref": "#/definitions/media--gallery"
                        }
                    }
                }
            }
        },
        "/media/gallery/{file_field_name}": {
            "post": {
                "summary": "File_upload POST",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--gallery"
                        }
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "201": {
                        "description": "Entity created",
                        "schema": {
                            "$ref": "#/definitions/media--gallery"
                        }
                    }
                }
            }
        },
        "/media/gallery/{entity}": {
            "get": {
                "summary": "View (Media - Gallery)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the media--gallery resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/media--gallery"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (Media - Gallery)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Media - Gallery)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--gallery"
                        }
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": []
            }
        },
        "/media/gallery/{entity}/revision_user": {
            "get": {
                "summary": "Related: revision_user (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/media/gallery/{entity}/relationships/revision_user": {
            "delete": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: revision_user (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/gallery/{entity}/thumbnail": {
            "get": {
                "summary": "Related: thumbnail (File)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">thumbnail</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/file--file"
                        }
                    }
                }
            }
        },
        "/media/gallery/{entity}/relationships/thumbnail": {
            "delete": {
                "summary": "Relationship: thumbnail (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: thumbnail (File)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">thumbnail</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: thumbnail (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: thumbnail (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/gallery/{entity}/uid": {
            "get": {
                "summary": "Related: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/media/gallery/{entity}/relationships/uid": {
            "delete": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media gallery"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Gallery"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/image/{entity}/relationships/bundle": {
            "delete": {
                "summary": "Relationship: bundle (Media type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: bundle (Media type)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media_type--media_type resource type through the <em class=\"placeholder\">bundle</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: bundle (Media type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: bundle (Media type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/image": {
            "get": {
                "summary": "List (Media - Image)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the media--image resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "media:image Schema",
                            "description": "Describes the payload for 'media' entities of the 'image' bundle.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/media--image/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (Media - Image)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--image"
                        }
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": []
            }
        },
        "/media/image/{entity}/field_media_image": {
            "get": {
                "summary": "Related: field_media_image (File)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_media_image</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/file--file"
                        }
                    }
                }
            }
        },
        "/media/image/{entity}/relationships/field_media_image": {
            "delete": {
                "summary": "Relationship: field_media_image (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: field_media_image (File)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_media_image</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: field_media_image (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: field_media_image (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/image/{entity}/{file_field_name}": {
            "post": {
                "summary": "File_upload POST",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--image"
                        }
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "201": {
                        "description": "Entity created",
                        "schema": {
                            "$ref": "#/definitions/media--image"
                        }
                    }
                }
            }
        },
        "/media/image/{file_field_name}": {
            "post": {
                "summary": "File_upload POST",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--image"
                        }
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "201": {
                        "description": "Entity created",
                        "schema": {
                            "$ref": "#/definitions/media--image"
                        }
                    }
                }
            }
        },
        "/media/image/{entity}": {
            "get": {
                "summary": "View (Media - Image)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the media--image resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/media--image"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (Media - Image)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Media - Image)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--image"
                        }
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": []
            }
        },
        "/media/image/{entity}/revision_user": {
            "get": {
                "summary": "Related: revision_user (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/media/image/{entity}/relationships/revision_user": {
            "delete": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: revision_user (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/image/{entity}/thumbnail": {
            "get": {
                "summary": "Related: thumbnail (File)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">thumbnail</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/file--file"
                        }
                    }
                }
            }
        },
        "/media/image/{entity}/relationships/thumbnail": {
            "delete": {
                "summary": "Relationship: thumbnail (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: thumbnail (File)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">thumbnail</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: thumbnail (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: thumbnail (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/image/{entity}/uid": {
            "get": {
                "summary": "Related: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/media/image/{entity}/relationships/uid": {
            "delete": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media image"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Image"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/remote_video/{entity}/relationships/bundle": {
            "delete": {
                "summary": "Relationship: bundle (Media type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: bundle (Media type)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media_type--media_type resource type through the <em class=\"placeholder\">bundle</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: bundle (Media type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: bundle (Media type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/remote_video": {
            "get": {
                "summary": "List (Media - Remote video)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the media--remote_video resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "media:remote_video Schema",
                            "description": "Describes the payload for 'media' entities of the 'remote_video' bundle.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/media--remote_video/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (Media - Remote video)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--remote_video"
                        }
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": []
            }
        },
        "/media/remote_video/{entity}/field_media_cover_image": {
            "get": {
                "summary": "Related: field_media_cover_image (File)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_media_cover_image</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/file--file"
                        }
                    }
                }
            }
        },
        "/media/remote_video/{entity}/relationships/field_media_cover_image": {
            "delete": {
                "summary": "Relationship: field_media_cover_image (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: field_media_cover_image (File)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_media_cover_image</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: field_media_cover_image (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: field_media_cover_image (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/remote_video/{entity}/{file_field_name}": {
            "post": {
                "summary": "File_upload POST",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--remote_video"
                        }
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "201": {
                        "description": "Entity created",
                        "schema": {
                            "$ref": "#/definitions/media--remote_video"
                        }
                    }
                }
            }
        },
        "/media/remote_video/{file_field_name}": {
            "post": {
                "summary": "File_upload POST",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--remote_video"
                        }
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "201": {
                        "description": "Entity created",
                        "schema": {
                            "$ref": "#/definitions/media--remote_video"
                        }
                    }
                }
            }
        },
        "/media/remote_video/{entity}": {
            "get": {
                "summary": "View (Media - Remote video)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the media--remote_video resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/media--remote_video"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (Media - Remote video)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Media - Remote video)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--remote_video"
                        }
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": []
            }
        },
        "/media/remote_video/{entity}/revision_user": {
            "get": {
                "summary": "Related: revision_user (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/media/remote_video/{entity}/relationships/revision_user": {
            "delete": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: revision_user (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/remote_video/{entity}/thumbnail": {
            "get": {
                "summary": "Related: thumbnail (File)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">thumbnail</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/file--file"
                        }
                    }
                }
            }
        },
        "/media/remote_video/{entity}/relationships/thumbnail": {
            "delete": {
                "summary": "Relationship: thumbnail (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: thumbnail (File)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">thumbnail</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: thumbnail (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: thumbnail (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/remote_video/{entity}/uid": {
            "get": {
                "summary": "Related: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/media/remote_video/{entity}/relationships/uid": {
            "delete": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media remote_video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Remote video"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/tweet/{entity}/relationships/bundle": {
            "delete": {
                "summary": "Relationship: bundle (Media type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: bundle (Media type)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media_type--media_type resource type through the <em class=\"placeholder\">bundle</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: bundle (Media type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: bundle (Media type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/tweet": {
            "get": {
                "summary": "List (Media - Tweet)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the media--tweet resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "media:tweet Schema",
                            "description": "Describes the payload for 'media' entities of the 'tweet' bundle.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/media--tweet/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (Media - Tweet)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--tweet"
                        }
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": []
            }
        },
        "/media/tweet/{entity}/{file_field_name}": {
            "post": {
                "summary": "File_upload POST",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--tweet"
                        }
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "201": {
                        "description": "Entity created",
                        "schema": {
                            "$ref": "#/definitions/media--tweet"
                        }
                    }
                }
            }
        },
        "/media/tweet/{file_field_name}": {
            "post": {
                "summary": "File_upload POST",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--tweet"
                        }
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "201": {
                        "description": "Entity created",
                        "schema": {
                            "$ref": "#/definitions/media--tweet"
                        }
                    }
                }
            }
        },
        "/media/tweet/{entity}": {
            "get": {
                "summary": "View (Media - Tweet)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the media--tweet resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/media--tweet"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (Media - Tweet)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Media - Tweet)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--tweet"
                        }
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": []
            }
        },
        "/media/tweet/{entity}/revision_user": {
            "get": {
                "summary": "Related: revision_user (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/media/tweet/{entity}/relationships/revision_user": {
            "delete": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: revision_user (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/tweet/{entity}/thumbnail": {
            "get": {
                "summary": "Related: thumbnail (File)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">thumbnail</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/file--file"
                        }
                    }
                }
            }
        },
        "/media/tweet/{entity}/relationships/thumbnail": {
            "delete": {
                "summary": "Relationship: thumbnail (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: thumbnail (File)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">thumbnail</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: thumbnail (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: thumbnail (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/tweet/{entity}/uid": {
            "get": {
                "summary": "Related: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/media/tweet/{entity}/relationships/uid": {
            "delete": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media tweet"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Tweet"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/video/{entity}/relationships/bundle": {
            "delete": {
                "summary": "Relationship: bundle (Media type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: bundle (Media type)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media_type--media_type resource type through the <em class=\"placeholder\">bundle</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: bundle (Media type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: bundle (Media type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media_type--media_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/video": {
            "get": {
                "summary": "List (Media - Video)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the media--video resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "media:video Schema",
                            "description": "Describes the payload for 'media' entities of the 'video' bundle.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/media--video/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (Media - Video)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--video"
                        }
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": []
            }
        },
        "/media/video/{entity}/field_media_cover_image": {
            "get": {
                "summary": "Related: field_media_cover_image (File)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_media_cover_image</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/file--file"
                        }
                    }
                }
            }
        },
        "/media/video/{entity}/relationships/field_media_cover_image": {
            "delete": {
                "summary": "Relationship: field_media_cover_image (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: field_media_cover_image (File)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_media_cover_image</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: field_media_cover_image (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: field_media_cover_image (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/video/{entity}/field_media_video_file": {
            "get": {
                "summary": "Related: field_media_video_file (File)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_media_video_file</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/file--file"
                        }
                    }
                }
            }
        },
        "/media/video/{entity}/relationships/field_media_video_file": {
            "delete": {
                "summary": "Relationship: field_media_video_file (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: field_media_video_file (File)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_media_video_file</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: field_media_video_file (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: field_media_video_file (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/video/{entity}/{file_field_name}": {
            "post": {
                "summary": "File_upload POST",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--video"
                        }
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "201": {
                        "description": "Entity created",
                        "schema": {
                            "$ref": "#/definitions/media--video"
                        }
                    }
                }
            }
        },
        "/media/video/{file_field_name}": {
            "post": {
                "summary": "File_upload POST",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--video"
                        }
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "201": {
                        "description": "Entity created",
                        "schema": {
                            "$ref": "#/definitions/media--video"
                        }
                    }
                }
            }
        },
        "/media/video/{entity}": {
            "get": {
                "summary": "View (Media - Video)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the media--video resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/media--video"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (Media - Video)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Media - Video)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">media</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media--video"
                        }
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": []
            }
        },
        "/media/video/{entity}/revision_user": {
            "get": {
                "summary": "Related: revision_user (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/media/video/{entity}/relationships/revision_user": {
            "delete": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: revision_user (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/video/{entity}/thumbnail": {
            "get": {
                "summary": "Related: thumbnail (File)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">thumbnail</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/file--file"
                        }
                    }
                }
            }
        },
        "/media/video/{entity}/relationships/thumbnail": {
            "delete": {
                "summary": "Relationship: thumbnail (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: thumbnail (File)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">thumbnail</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: thumbnail (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: thumbnail (File)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "file--file"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media/video/{entity}/uid": {
            "get": {
                "summary": "Related: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/media/video/{entity}/relationships/uid": {
            "delete": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the media video"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Media - Video"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/menu/menu": {
            "get": {
                "summary": "List (Menu)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the menu--menu resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Menu"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "summary": "Create (Menu)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">menu</em> object",
                        "required": true,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "Menu"
                ],
                "responses": []
            }
        },
        "/menu/menu/{entity}": {
            "get": {
                "summary": "View (Menu)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the menu--menu resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the menu menu"
                    }
                ],
                "tags": [
                    "Menu"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "summary": "Remove (Menu)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the menu menu"
                    }
                ],
                "tags": [
                    "Menu"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Menu)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the menu menu"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">menu</em> object",
                        "required": true,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "Menu"
                ],
                "responses": []
            }
        },
        "/menu_link_content/menu_link_content": {
            "get": {
                "summary": "List (Custom menu link)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the menu_link_content--menu_link_content resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Custom menu link"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "menu_link_content Schema",
                            "description": "Describes the payload for 'menu_link_content' entities.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/menu_link_content--menu_link_content/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true,
                            "discriminator": "bundle"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (Custom menu link)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">menu_link_content</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/menu_link_content--menu_link_content"
                        }
                    }
                ],
                "tags": [
                    "Custom menu link"
                ],
                "responses": []
            }
        },
        "/menu_link_content/menu_link_content/{entity}": {
            "get": {
                "summary": "View (Custom menu link)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the menu_link_content--menu_link_content resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the menu_link_content menu_link_content"
                    }
                ],
                "tags": [
                    "Custom menu link"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/menu_link_content--menu_link_content"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (Custom menu link)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the menu_link_content menu_link_content"
                    }
                ],
                "tags": [
                    "Custom menu link"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Custom menu link)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the menu_link_content menu_link_content"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">menu_link_content</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/menu_link_content--menu_link_content"
                        }
                    }
                ],
                "tags": [
                    "Custom menu link"
                ],
                "responses": []
            }
        },
        "/menu_link_content/menu_link_content/{entity}/revision_user": {
            "get": {
                "summary": "Related: revision_user (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the menu_link_content menu_link_content"
                    }
                ],
                "tags": [
                    "Custom menu link"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/menu_link_content/menu_link_content/{entity}/relationships/revision_user": {
            "delete": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the menu_link_content menu_link_content"
                    }
                ],
                "tags": [
                    "Custom menu link"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: revision_user (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the menu_link_content menu_link_content"
                    }
                ],
                "tags": [
                    "Custom menu link"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the menu_link_content menu_link_content"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Custom menu link"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: revision_user (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the menu_link_content menu_link_content"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Custom menu link"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/node/landing_page": {
            "get": {
                "summary": "List (Content - Landing page)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the node--landing_page resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "node:landing_page Schema",
                            "description": "Use Landing pages to build multi-component pages with custom layouts to display content in a modern way.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/node--landing_page/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (Content - Landing page)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">node</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/node--landing_page"
                        }
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": []
            }
        },
        "/node/landing_page/{entity}/field_lp_paragraphs": {
            "get": {
                "summary": "Related: field_lp_paragraphs (Paragraph - Accordion)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the paragraph--bp_accordion resource type through the <em class=\"placeholder\">field_lp_paragraphs</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "paragraph:bp_accordion Schema",
                            "description": "Describes the payload for 'paragraph' entities of the 'bp_accordion' bundle.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/paragraph--bp_accordion/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/node/landing_page/{entity}/relationships/field_lp_paragraphs": {
            "delete": {
                "summary": "Relationship: field_lp_paragraphs (Paragraph - Accordion)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: field_lp_paragraphs (Paragraph - Accordion)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the paragraph--bp_accordion resource type through the <em class=\"placeholder\">field_lp_paragraphs</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "paragraph--bp_accordion"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: field_lp_paragraphs (Paragraph - Accordion)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "paragraph--bp_accordion"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "paragraph--bp_accordion"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: field_lp_paragraphs (Paragraph - Accordion)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "paragraph--bp_accordion"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "paragraph--bp_accordion"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                }
            }
        },
        "/node/landing_page/{entity}": {
            "get": {
                "summary": "View (Content - Landing page)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the node--landing_page resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/node--landing_page"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (Content - Landing page)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Content - Landing page)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">node</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/node--landing_page"
                        }
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": []
            }
        },
        "/node/landing_page/{entity}/menu_link": {
            "get": {
                "summary": "Related: menu_link (Custom menu link)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the menu_link_content--menu_link_content resource type through the <em class=\"placeholder\">menu_link</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/menu_link_content--menu_link_content"
                        }
                    }
                }
            }
        },
        "/node/landing_page/{entity}/relationships/menu_link": {
            "delete": {
                "summary": "Relationship: menu_link (Custom menu link)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: menu_link (Custom menu link)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the menu_link_content--menu_link_content resource type through the <em class=\"placeholder\">menu_link</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "menu_link_content--menu_link_content"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: menu_link (Custom menu link)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "menu_link_content--menu_link_content"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "menu_link_content--menu_link_content"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: menu_link (Custom menu link)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "menu_link_content--menu_link_content"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "menu_link_content--menu_link_content"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/node/landing_page/{entity}/relationships/node_type": {
            "delete": {
                "summary": "Relationship: node_type (Content type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: node_type (Content type)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the node_type--node_type resource type through the <em class=\"placeholder\">node_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "node_type--node_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: node_type (Content type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "node_type--node_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "node_type--node_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: node_type (Content type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "node_type--node_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "node_type--node_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/node/landing_page/{entity}/revision_uid": {
            "get": {
                "summary": "Related: revision_uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/node/landing_page/{entity}/relationships/revision_uid": {
            "delete": {
                "summary": "Relationship: revision_uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: revision_uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: revision_uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: revision_uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/node/landing_page/{entity}/uid": {
            "get": {
                "summary": "Related: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/node/landing_page/{entity}/relationships/uid": {
            "delete": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node landing_page"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Landing page"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/node/page": {
            "get": {
                "summary": "List (Content - Basic page)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the node--page resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "node:page Schema",
                            "description": "Use basic pages for your static content, such as an \\'About us\\' page.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/node--page/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (Content - Basic page)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">node</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/node--page"
                        }
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": []
            }
        },
        "/node/page/{entity}": {
            "get": {
                "summary": "View (Content - Basic page)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the node--page resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node page"
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/node--page"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (Content - Basic page)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node page"
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Content - Basic page)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node page"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">node</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/node--page"
                        }
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": []
            }
        },
        "/node/page/{entity}/menu_link": {
            "get": {
                "summary": "Related: menu_link (Custom menu link)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the menu_link_content--menu_link_content resource type through the <em class=\"placeholder\">menu_link</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node page"
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/menu_link_content--menu_link_content"
                        }
                    }
                }
            }
        },
        "/node/page/{entity}/relationships/menu_link": {
            "delete": {
                "summary": "Relationship: menu_link (Custom menu link)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node page"
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: menu_link (Custom menu link)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the menu_link_content--menu_link_content resource type through the <em class=\"placeholder\">menu_link</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node page"
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "menu_link_content--menu_link_content"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: menu_link (Custom menu link)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node page"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "menu_link_content--menu_link_content"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "menu_link_content--menu_link_content"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: menu_link (Custom menu link)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node page"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "menu_link_content--menu_link_content"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "menu_link_content--menu_link_content"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/node/page/{entity}/relationships/node_type": {
            "delete": {
                "summary": "Relationship: node_type (Content type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node page"
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: node_type (Content type)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the node_type--node_type resource type through the <em class=\"placeholder\">node_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node page"
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "node_type--node_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: node_type (Content type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node page"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "node_type--node_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "node_type--node_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: node_type (Content type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node page"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "node_type--node_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "node_type--node_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/node/page/{entity}/revision_uid": {
            "get": {
                "summary": "Related: revision_uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node page"
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/node/page/{entity}/relationships/revision_uid": {
            "delete": {
                "summary": "Relationship: revision_uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node page"
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: revision_uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node page"
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: revision_uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node page"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: revision_uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node page"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/node/page/{entity}/uid": {
            "get": {
                "summary": "Related: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node page"
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/node/page/{entity}/relationships/uid": {
            "delete": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node page"
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node page"
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node page"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node page"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Basic page"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/node/project": {
            "get": {
                "summary": "List (Content - Project)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the node--project resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "node:project Schema",
                            "description": "Describes the payload for 'node' entities of the 'project' bundle.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/node--project/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (Content - Project)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">node</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/node--project"
                        }
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": []
            }
        },
        "/node/project/{entity}": {
            "get": {
                "summary": "View (Content - Project)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the node--project resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node project"
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/node--project"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (Content - Project)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node project"
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Content - Project)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">node</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/node--project"
                        }
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": []
            }
        },
        "/node/project/{entity}/menu_link": {
            "get": {
                "summary": "Related: menu_link (Custom menu link)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the menu_link_content--menu_link_content resource type through the <em class=\"placeholder\">menu_link</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node project"
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/menu_link_content--menu_link_content"
                        }
                    }
                }
            }
        },
        "/node/project/{entity}/relationships/menu_link": {
            "delete": {
                "summary": "Relationship: menu_link (Custom menu link)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node project"
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: menu_link (Custom menu link)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the menu_link_content--menu_link_content resource type through the <em class=\"placeholder\">menu_link</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node project"
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "menu_link_content--menu_link_content"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: menu_link (Custom menu link)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "menu_link_content--menu_link_content"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "menu_link_content--menu_link_content"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: menu_link (Custom menu link)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "menu_link_content--menu_link_content"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "menu_link_content--menu_link_content"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/node/project/{entity}/relationships/node_type": {
            "delete": {
                "summary": "Relationship: node_type (Content type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node project"
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: node_type (Content type)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the node_type--node_type resource type through the <em class=\"placeholder\">node_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node project"
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "node_type--node_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: node_type (Content type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "node_type--node_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "node_type--node_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: node_type (Content type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "node_type--node_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "node_type--node_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/node/project/{entity}/revision_uid": {
            "get": {
                "summary": "Related: revision_uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node project"
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/node/project/{entity}/relationships/revision_uid": {
            "delete": {
                "summary": "Relationship: revision_uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node project"
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: revision_uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node project"
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: revision_uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: revision_uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/node/project/{entity}/uid": {
            "get": {
                "summary": "Related: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node project"
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/node/project/{entity}/relationships/uid": {
            "delete": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node project"
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "resourceVersion",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node project"
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the node project"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Content - Project"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth2_token/access_token/{entity}/auth_user_id": {
            "get": {
                "summary": "Related: auth_user_id (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">auth_user_id</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token access_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/oauth2_token/access_token/{entity}/relationships/auth_user_id": {
            "delete": {
                "summary": "Relationship: auth_user_id (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token access_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: auth_user_id (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">auth_user_id</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token access_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: auth_user_id (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token access_token"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: auth_user_id (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token access_token"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth2_token/access_token/{entity}/bundle": {
            "get": {
                "summary": "Related: bundle (OAuth2 Token Type)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the oauth2_token_type--oauth2_token_type resource type through the <em class=\"placeholder\">bundle</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token access_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/oauth2_token/access_token/{entity}/relationships/bundle": {
            "delete": {
                "summary": "Relationship: bundle (OAuth2 Token Type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token access_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: bundle (OAuth2 Token Type)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the oauth2_token_type--oauth2_token_type resource type through the <em class=\"placeholder\">bundle</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token access_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "oauth2_token_type--oauth2_token_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: bundle (OAuth2 Token Type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token access_token"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "oauth2_token_type--oauth2_token_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "oauth2_token_type--oauth2_token_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: bundle (OAuth2 Token Type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token access_token"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "oauth2_token_type--oauth2_token_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "oauth2_token_type--oauth2_token_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth2_token/access_token/{entity}/relationships/client": {
            "delete": {
                "summary": "Relationship: client (Consumer)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token access_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: client (Consumer)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the consumer--consumer resource type through the <em class=\"placeholder\">client</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token access_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "consumer--consumer"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: client (Consumer)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token access_token"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "consumer--consumer"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "consumer--consumer"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: client (Consumer)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token access_token"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "consumer--consumer"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "consumer--consumer"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth2_token/access_token": {
            "get": {
                "summary": "List (OAuth2 token - Access Token)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the oauth2_token--access_token resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "oauth2_token:access_token Schema",
                            "description": "Describes the payload for 'oauth2_token' entities of the 'access_token' bundle.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/oauth2_token--access_token/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (OAuth2 token - Access Token)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">oauth2_token</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/oauth2_token--access_token"
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": []
            }
        },
        "/oauth2_token/access_token/{entity}": {
            "get": {
                "summary": "View (OAuth2 token - Access Token)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the oauth2_token--access_token resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token access_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/oauth2_token--access_token"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (OAuth2 token - Access Token)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token access_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (OAuth2 token - Access Token)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token access_token"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">oauth2_token</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/oauth2_token--access_token"
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": []
            }
        },
        "/oauth2_token/access_token/{entity}/scopes": {
            "get": {
                "summary": "Related: scopes (Role)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user_role--user_role resource type through the <em class=\"placeholder\">scopes</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token access_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/oauth2_token/access_token/{entity}/relationships/scopes": {
            "delete": {
                "summary": "Relationship: scopes (Role)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token access_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: scopes (Role)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user_role--user_role resource type through the <em class=\"placeholder\">scopes</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token access_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "user_role--user_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: scopes (Role)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token access_token"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "user_role--user_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "user_role--user_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: scopes (Role)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token access_token"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "user_role--user_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Access Token"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "user_role--user_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth2_token/auth_code/{entity}/auth_user_id": {
            "get": {
                "summary": "Related: auth_user_id (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">auth_user_id</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token auth_code"
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/oauth2_token/auth_code/{entity}/relationships/auth_user_id": {
            "delete": {
                "summary": "Relationship: auth_user_id (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token auth_code"
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: auth_user_id (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">auth_user_id</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token auth_code"
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: auth_user_id (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token auth_code"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: auth_user_id (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token auth_code"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth2_token/auth_code/{entity}/bundle": {
            "get": {
                "summary": "Related: bundle (OAuth2 Token Type)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the oauth2_token_type--oauth2_token_type resource type through the <em class=\"placeholder\">bundle</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token auth_code"
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/oauth2_token/auth_code/{entity}/relationships/bundle": {
            "delete": {
                "summary": "Relationship: bundle (OAuth2 Token Type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token auth_code"
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: bundle (OAuth2 Token Type)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the oauth2_token_type--oauth2_token_type resource type through the <em class=\"placeholder\">bundle</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token auth_code"
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "oauth2_token_type--oauth2_token_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: bundle (OAuth2 Token Type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token auth_code"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "oauth2_token_type--oauth2_token_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "oauth2_token_type--oauth2_token_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: bundle (OAuth2 Token Type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token auth_code"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "oauth2_token_type--oauth2_token_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "oauth2_token_type--oauth2_token_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth2_token/auth_code/{entity}/relationships/client": {
            "delete": {
                "summary": "Relationship: client (Consumer)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token auth_code"
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: client (Consumer)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the consumer--consumer resource type through the <em class=\"placeholder\">client</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token auth_code"
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "consumer--consumer"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: client (Consumer)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token auth_code"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "consumer--consumer"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "consumer--consumer"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: client (Consumer)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token auth_code"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "consumer--consumer"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "consumer--consumer"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth2_token/auth_code": {
            "get": {
                "summary": "List (OAuth2 token - Auth code)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the oauth2_token--auth_code resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "oauth2_token:auth_code Schema",
                            "description": "Describes the payload for 'oauth2_token' entities of the 'auth_code' bundle.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/oauth2_token--auth_code/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (OAuth2 token - Auth code)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">oauth2_token</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/oauth2_token--auth_code"
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": []
            }
        },
        "/oauth2_token/auth_code/{entity}": {
            "get": {
                "summary": "View (OAuth2 token - Auth code)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the oauth2_token--auth_code resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token auth_code"
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/oauth2_token--auth_code"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (OAuth2 token - Auth code)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token auth_code"
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (OAuth2 token - Auth code)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token auth_code"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">oauth2_token</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/oauth2_token--auth_code"
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": []
            }
        },
        "/oauth2_token/auth_code/{entity}/scopes": {
            "get": {
                "summary": "Related: scopes (Role)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user_role--user_role resource type through the <em class=\"placeholder\">scopes</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token auth_code"
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/oauth2_token/auth_code/{entity}/relationships/scopes": {
            "delete": {
                "summary": "Relationship: scopes (Role)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token auth_code"
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: scopes (Role)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user_role--user_role resource type through the <em class=\"placeholder\">scopes</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token auth_code"
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "user_role--user_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: scopes (Role)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token auth_code"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "user_role--user_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "user_role--user_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: scopes (Role)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token auth_code"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "user_role--user_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Auth code"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "user_role--user_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth2_token/refresh_token/{entity}/auth_user_id": {
            "get": {
                "summary": "Related: auth_user_id (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">auth_user_id</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token refresh_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/oauth2_token/refresh_token/{entity}/relationships/auth_user_id": {
            "delete": {
                "summary": "Relationship: auth_user_id (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token refresh_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: auth_user_id (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">auth_user_id</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token refresh_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: auth_user_id (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token refresh_token"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: auth_user_id (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token refresh_token"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth2_token/refresh_token/{entity}/bundle": {
            "get": {
                "summary": "Related: bundle (OAuth2 Token Type)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the oauth2_token_type--oauth2_token_type resource type through the <em class=\"placeholder\">bundle</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token refresh_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/oauth2_token/refresh_token/{entity}/relationships/bundle": {
            "delete": {
                "summary": "Relationship: bundle (OAuth2 Token Type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token refresh_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: bundle (OAuth2 Token Type)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the oauth2_token_type--oauth2_token_type resource type through the <em class=\"placeholder\">bundle</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token refresh_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "oauth2_token_type--oauth2_token_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: bundle (OAuth2 Token Type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token refresh_token"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "oauth2_token_type--oauth2_token_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "oauth2_token_type--oauth2_token_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: bundle (OAuth2 Token Type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token refresh_token"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "oauth2_token_type--oauth2_token_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "oauth2_token_type--oauth2_token_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth2_token/refresh_token/{entity}/relationships/client": {
            "delete": {
                "summary": "Relationship: client (Consumer)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token refresh_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: client (Consumer)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the consumer--consumer resource type through the <em class=\"placeholder\">client</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token refresh_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "consumer--consumer"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: client (Consumer)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token refresh_token"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "consumer--consumer"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "consumer--consumer"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: client (Consumer)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token refresh_token"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "consumer--consumer"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "consumer--consumer"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth2_token/refresh_token": {
            "get": {
                "summary": "List (OAuth2 token - Refresh token)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the oauth2_token--refresh_token resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "oauth2_token:refresh_token Schema",
                            "description": "Describes the payload for 'oauth2_token' entities of the 'refresh_token' bundle.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/oauth2_token--refresh_token/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (OAuth2 token - Refresh token)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">oauth2_token</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/oauth2_token--refresh_token"
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": []
            }
        },
        "/oauth2_token/refresh_token/{entity}": {
            "get": {
                "summary": "View (OAuth2 token - Refresh token)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the oauth2_token--refresh_token resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token refresh_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/oauth2_token--refresh_token"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (OAuth2 token - Refresh token)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token refresh_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (OAuth2 token - Refresh token)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token refresh_token"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">oauth2_token</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/oauth2_token--refresh_token"
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": []
            }
        },
        "/oauth2_token/refresh_token/{entity}/scopes": {
            "get": {
                "summary": "Related: scopes (Role)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user_role--user_role resource type through the <em class=\"placeholder\">scopes</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token refresh_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/oauth2_token/refresh_token/{entity}/relationships/scopes": {
            "delete": {
                "summary": "Relationship: scopes (Role)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token refresh_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: scopes (Role)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user_role--user_role resource type through the <em class=\"placeholder\">scopes</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token refresh_token"
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "user_role--user_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: scopes (Role)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token refresh_token"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "user_role--user_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "user_role--user_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: scopes (Role)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token refresh_token"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "user_role--user_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "OAuth2 token - Refresh token"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "user_role--user_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth2_token_type/oauth2_token_type": {
            "get": {
                "summary": "List (OAuth2 Token Type)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the oauth2_token_type--oauth2_token_type resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "OAuth2 Token Type"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "summary": "Create (OAuth2 Token Type)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">oauth2_token_type</em> object",
                        "required": true,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "OAuth2 Token Type"
                ],
                "responses": []
            }
        },
        "/oauth2_token_type/oauth2_token_type/{entity}": {
            "get": {
                "summary": "View (OAuth2 Token Type)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the oauth2_token_type--oauth2_token_type resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token_type oauth2_token_type"
                    }
                ],
                "tags": [
                    "OAuth2 Token Type"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "summary": "Remove (OAuth2 Token Type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token_type oauth2_token_type"
                    }
                ],
                "tags": [
                    "OAuth2 Token Type"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (OAuth2 Token Type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the oauth2_token_type oauth2_token_type"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">oauth2_token_type</em> object",
                        "required": true,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "OAuth2 Token Type"
                ],
                "responses": []
            }
        },
        "/paragraph/from_library": {
            "get": {
                "summary": "List (Paragraph - From library)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the paragraph--from_library resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Paragraph - From library"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "paragraph:from_library Schema",
                            "description": "Describes the payload for 'paragraph' entities of the 'from_library' bundle.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/paragraph--from_library/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (Paragraph - From library)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">paragraph</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/paragraph--from_library"
                        }
                    }
                ],
                "tags": [
                    "Paragraph - From library"
                ],
                "responses": []
            }
        },
        "/paragraph/from_library/{entity}/field_reusable_paragraph": {
            "get": {
                "summary": "Related: field_reusable_paragraph (Paragraphs library item)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the paragraphs_library_item--paragraphs_library_item resource type through the <em class=\"placeholder\">field_reusable_paragraph</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph from_library"
                    }
                ],
                "tags": [
                    "Paragraph - From library"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/paragraphs_library_item--paragraphs_library_item"
                        }
                    }
                }
            }
        },
        "/paragraph/from_library/{entity}/relationships/field_reusable_paragraph": {
            "delete": {
                "summary": "Relationship: field_reusable_paragraph (Paragraphs library item)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph from_library"
                    }
                ],
                "tags": [
                    "Paragraph - From library"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: field_reusable_paragraph (Paragraphs library item)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the paragraphs_library_item--paragraphs_library_item resource type through the <em class=\"placeholder\">field_reusable_paragraph</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph from_library"
                    }
                ],
                "tags": [
                    "Paragraph - From library"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "paragraphs_library_item--paragraphs_library_item"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: field_reusable_paragraph (Paragraphs library item)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph from_library"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "paragraphs_library_item--paragraphs_library_item"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Paragraph - From library"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "paragraphs_library_item--paragraphs_library_item"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: field_reusable_paragraph (Paragraphs library item)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph from_library"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "paragraphs_library_item--paragraphs_library_item"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Paragraph - From library"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "paragraphs_library_item--paragraphs_library_item"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/paragraph/from_library/{entity}": {
            "get": {
                "summary": "View (Paragraph - From library)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the paragraph--from_library resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph from_library"
                    }
                ],
                "tags": [
                    "Paragraph - From library"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/paragraph--from_library"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (Paragraph - From library)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph from_library"
                    }
                ],
                "tags": [
                    "Paragraph - From library"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Paragraph - From library)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph from_library"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">paragraph</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/paragraph--from_library"
                        }
                    }
                ],
                "tags": [
                    "Paragraph - From library"
                ],
                "responses": []
            }
        },
        "/paragraph/from_library/{entity}/relationships/paragraph_type": {
            "delete": {
                "summary": "Relationship: paragraph_type (Paragraphs type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph from_library"
                    }
                ],
                "tags": [
                    "Paragraph - From library"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: paragraph_type (Paragraphs type)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the paragraphs_type--paragraphs_type resource type through the <em class=\"placeholder\">paragraph_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph from_library"
                    }
                ],
                "tags": [
                    "Paragraph - From library"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "paragraphs_type--paragraphs_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: paragraph_type (Paragraphs type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph from_library"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "paragraphs_type--paragraphs_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Paragraph - From library"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "paragraphs_type--paragraphs_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: paragraph_type (Paragraphs type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph from_library"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "paragraphs_type--paragraphs_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Paragraph - From library"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "paragraphs_type--paragraphs_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/paragraph/text_and_image/{entity}/bp_image_field": {
            "get": {
                "summary": "Related: bp_image_field (Media - Image)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the media--image resource type through the <em class=\"placeholder\">bp_image_field</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph text_and_image"
                    }
                ],
                "tags": [
                    "Paragraph - Text and image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/media--image"
                        }
                    }
                }
            }
        },
        "/paragraph/text_and_image/{entity}/relationships/bp_image_field": {
            "delete": {
                "summary": "Relationship: bp_image_field (Media - Image)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph text_and_image"
                    }
                ],
                "tags": [
                    "Paragraph - Text and image"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: bp_image_field (Media - Image)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media--image resource type through the <em class=\"placeholder\">bp_image_field</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph text_and_image"
                    }
                ],
                "tags": [
                    "Paragraph - Text and image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media--image"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: bp_image_field (Media - Image)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph text_and_image"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media--image"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Paragraph - Text and image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media--image"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: bp_image_field (Media - Image)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph text_and_image"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media--image"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Paragraph - Text and image"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media--image"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/paragraph/text_and_image": {
            "get": {
                "summary": "List (Paragraph - Text and image)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the paragraph--text_and_image resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Paragraph - Text and image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "paragraph:text_and_image Schema",
                            "description": "Describes the payload for 'paragraph' entities of the 'text_and_image' bundle.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/paragraph--text_and_image/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (Paragraph - Text and image)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">paragraph</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/paragraph--text_and_image"
                        }
                    }
                ],
                "tags": [
                    "Paragraph - Text and image"
                ],
                "responses": []
            }
        },
        "/paragraph/text_and_image/{entity}/field_image": {
            "get": {
                "summary": "Related: field_image (Media - Image)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the media--image resource type through the <em class=\"placeholder\">field_image</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph text_and_image"
                    }
                ],
                "tags": [
                    "Paragraph - Text and image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/media--image"
                        }
                    }
                }
            }
        },
        "/paragraph/text_and_image/{entity}/relationships/field_image": {
            "delete": {
                "summary": "Relationship: field_image (Media - Image)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph text_and_image"
                    }
                ],
                "tags": [
                    "Paragraph - Text and image"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: field_image (Media - Image)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media--image resource type through the <em class=\"placeholder\">field_image</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph text_and_image"
                    }
                ],
                "tags": [
                    "Paragraph - Text and image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media--image"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: field_image (Media - Image)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph text_and_image"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media--image"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Paragraph - Text and image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media--image"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: field_image (Media - Image)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph text_and_image"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media--image"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Paragraph - Text and image"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "media--image"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/paragraph/text_and_image/{entity}": {
            "get": {
                "summary": "View (Paragraph - Text and image)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the paragraph--text_and_image resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph text_and_image"
                    }
                ],
                "tags": [
                    "Paragraph - Text and image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/paragraph--text_and_image"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (Paragraph - Text and image)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph text_and_image"
                    }
                ],
                "tags": [
                    "Paragraph - Text and image"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Paragraph - Text and image)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph text_and_image"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">paragraph</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/paragraph--text_and_image"
                        }
                    }
                ],
                "tags": [
                    "Paragraph - Text and image"
                ],
                "responses": []
            }
        },
        "/paragraph/text_and_image/{entity}/relationships/paragraph_type": {
            "delete": {
                "summary": "Relationship: paragraph_type (Paragraphs type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph text_and_image"
                    }
                ],
                "tags": [
                    "Paragraph - Text and image"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: paragraph_type (Paragraphs type)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the paragraphs_type--paragraphs_type resource type through the <em class=\"placeholder\">paragraph_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph text_and_image"
                    }
                ],
                "tags": [
                    "Paragraph - Text and image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "paragraphs_type--paragraphs_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: paragraph_type (Paragraphs type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph text_and_image"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "paragraphs_type--paragraphs_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Paragraph - Text and image"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "paragraphs_type--paragraphs_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: paragraph_type (Paragraphs type)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraph text_and_image"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "paragraphs_type--paragraphs_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Paragraph - Text and image"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "paragraphs_type--paragraphs_type"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/paragraphs_library_item/paragraphs_library_item": {
            "get": {
                "summary": "List (Paragraphs library item)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the paragraphs_library_item--paragraphs_library_item resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Paragraphs library item"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "paragraphs_library_item Schema",
                            "description": "Describes the payload for 'paragraphs_library_item' entities.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/paragraphs_library_item--paragraphs_library_item/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (Paragraphs library item)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">paragraphs_library_item</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/paragraphs_library_item--paragraphs_library_item"
                        }
                    }
                ],
                "tags": [
                    "Paragraphs library item"
                ],
                "responses": []
            }
        },
        "/paragraphs_library_item/paragraphs_library_item/{entity}": {
            "get": {
                "summary": "View (Paragraphs library item)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the paragraphs_library_item--paragraphs_library_item resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraphs_library_item paragraphs_library_item"
                    }
                ],
                "tags": [
                    "Paragraphs library item"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/paragraphs_library_item--paragraphs_library_item"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (Paragraphs library item)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraphs_library_item paragraphs_library_item"
                    }
                ],
                "tags": [
                    "Paragraphs library item"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Paragraphs library item)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraphs_library_item paragraphs_library_item"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">paragraphs_library_item</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/paragraphs_library_item--paragraphs_library_item"
                        }
                    }
                ],
                "tags": [
                    "Paragraphs library item"
                ],
                "responses": []
            }
        },
        "/paragraphs_library_item/paragraphs_library_item/{entity}/paragraphs": {
            "get": {
                "summary": "Related: paragraphs (Paragraph - Accordion)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the paragraph--bp_accordion resource type through the <em class=\"placeholder\">paragraphs</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraphs_library_item paragraphs_library_item"
                    }
                ],
                "tags": [
                    "Paragraphs library item"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/paragraph--bp_accordion"
                        }
                    }
                }
            }
        },
        "/paragraphs_library_item/paragraphs_library_item/{entity}/relationships/paragraphs": {
            "delete": {
                "summary": "Relationship: paragraphs (Paragraph - Accordion)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraphs_library_item paragraphs_library_item"
                    }
                ],
                "tags": [
                    "Paragraphs library item"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: paragraphs (Paragraph - Accordion)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the paragraph--bp_accordion resource type through the <em class=\"placeholder\">paragraphs</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraphs_library_item paragraphs_library_item"
                    }
                ],
                "tags": [
                    "Paragraphs library item"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "paragraph--bp_accordion"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: paragraphs (Paragraph - Accordion)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraphs_library_item paragraphs_library_item"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "paragraph--bp_accordion"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Paragraphs library item"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "paragraph--bp_accordion"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: paragraphs (Paragraph - Accordion)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraphs_library_item paragraphs_library_item"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "paragraph--bp_accordion"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Paragraphs library item"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "paragraph--bp_accordion"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/paragraphs_library_item/paragraphs_library_item/{entity}/revision_uid": {
            "get": {
                "summary": "Related: revision_uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraphs_library_item paragraphs_library_item"
                    }
                ],
                "tags": [
                    "Paragraphs library item"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/paragraphs_library_item/paragraphs_library_item/{entity}/relationships/revision_uid": {
            "delete": {
                "summary": "Relationship: revision_uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraphs_library_item paragraphs_library_item"
                    }
                ],
                "tags": [
                    "Paragraphs library item"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: revision_uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraphs_library_item paragraphs_library_item"
                    }
                ],
                "tags": [
                    "Paragraphs library item"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: revision_uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraphs_library_item paragraphs_library_item"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Paragraphs library item"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: revision_uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraphs_library_item paragraphs_library_item"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Paragraphs library item"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/paragraphs_library_item/paragraphs_library_item/{entity}/uid": {
            "get": {
                "summary": "Related: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraphs_library_item paragraphs_library_item"
                    }
                ],
                "tags": [
                    "Paragraphs library item"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/paragraphs_library_item/paragraphs_library_item/{entity}/relationships/uid": {
            "delete": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraphs_library_item paragraphs_library_item"
                    }
                ],
                "tags": [
                    "Paragraphs library item"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraphs_library_item paragraphs_library_item"
                    }
                ],
                "tags": [
                    "Paragraphs library item"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraphs_library_item paragraphs_library_item"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Paragraphs library item"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the paragraphs_library_item paragraphs_library_item"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Paragraphs library item"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/path_alias/path_alias": {
            "get": {
                "summary": "List (URL alias)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the path_alias--path_alias resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "URL alias"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "path_alias Schema",
                            "description": "Describes the payload for 'path_alias' entities.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/path_alias--path_alias/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (URL alias)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">path_alias</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/path_alias--path_alias"
                        }
                    }
                ],
                "tags": [
                    "URL alias"
                ],
                "responses": []
            }
        },
        "/path_alias/path_alias/{entity}": {
            "get": {
                "summary": "View (URL alias)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the path_alias--path_alias resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the path_alias path_alias"
                    }
                ],
                "tags": [
                    "URL alias"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/path_alias--path_alias"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (URL alias)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the path_alias path_alias"
                    }
                ],
                "tags": [
                    "URL alias"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (URL alias)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the path_alias path_alias"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">path_alias</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/path_alias--path_alias"
                        }
                    }
                ],
                "tags": [
                    "URL alias"
                ],
                "responses": []
            }
        },
        "/script/script": {
            "get": {
                "summary": "List (Script)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the script--script resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Script"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "summary": "Create (Script)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">script</em> object",
                        "required": true,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "Script"
                ],
                "responses": []
            }
        },
        "/script/script/{entity}": {
            "get": {
                "summary": "View (Script)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the script--script resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the script script"
                    }
                ],
                "tags": [
                    "Script"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "summary": "Remove (Script)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the script script"
                    }
                ],
                "tags": [
                    "Script"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Script)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the script script"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">script</em> object",
                        "required": true,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "Script"
                ],
                "responses": []
            }
        },
        "/social_auth/social_auth": {
            "get": {
                "summary": "List (SocialAuth)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the social_auth--social_auth resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "SocialAuth"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "social_auth Schema",
                            "description": "Describes the payload for 'social_auth' entities.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/social_auth--social_auth/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (SocialAuth)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">social_auth</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/social_auth--social_auth"
                        }
                    }
                ],
                "tags": [
                    "SocialAuth"
                ],
                "responses": []
            }
        },
        "/social_auth/social_auth/{entity}": {
            "get": {
                "summary": "View (SocialAuth)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the social_auth--social_auth resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the social_auth social_auth"
                    }
                ],
                "tags": [
                    "SocialAuth"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/social_auth--social_auth"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (SocialAuth)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the social_auth social_auth"
                    }
                ],
                "tags": [
                    "SocialAuth"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (SocialAuth)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the social_auth social_auth"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">social_auth</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/social_auth--social_auth"
                        }
                    }
                ],
                "tags": [
                    "SocialAuth"
                ],
                "responses": []
            }
        },
        "/social_auth/social_auth/{entity}/user_id": {
            "get": {
                "summary": "Related: user_id (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">user_id</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the social_auth social_auth"
                    }
                ],
                "tags": [
                    "SocialAuth"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/social_auth/social_auth/{entity}/relationships/user_id": {
            "delete": {
                "summary": "Relationship: user_id (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the social_auth social_auth"
                    }
                ],
                "tags": [
                    "SocialAuth"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: user_id (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">user_id</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the social_auth social_auth"
                    }
                ],
                "tags": [
                    "SocialAuth"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: user_id (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the social_auth social_auth"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "SocialAuth"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: user_id (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the social_auth social_auth"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "SocialAuth"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy_vocabulary/taxonomy_vocabulary": {
            "get": {
                "summary": "List (Taxonomy vocabulary)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the taxonomy_vocabulary--taxonomy_vocabulary resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Taxonomy vocabulary"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "summary": "Create (Taxonomy vocabulary)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">taxonomy_vocabulary</em> object",
                        "required": true,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "Taxonomy vocabulary"
                ],
                "responses": []
            }
        },
        "/taxonomy_vocabulary/taxonomy_vocabulary/{entity}": {
            "get": {
                "summary": "View (Taxonomy vocabulary)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the taxonomy_vocabulary--taxonomy_vocabulary resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the taxonomy_vocabulary taxonomy_vocabulary"
                    }
                ],
                "tags": [
                    "Taxonomy vocabulary"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "summary": "Remove (Taxonomy vocabulary)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the taxonomy_vocabulary taxonomy_vocabulary"
                    }
                ],
                "tags": [
                    "Taxonomy vocabulary"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Taxonomy vocabulary)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the taxonomy_vocabulary taxonomy_vocabulary"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">taxonomy_vocabulary</em> object",
                        "required": true,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "Taxonomy vocabulary"
                ],
                "responses": []
            }
        },
        "/user/user": {
            "get": {
                "summary": "List (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the user--user resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "user Schema",
                            "description": "Describes the payload for 'user' entities.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/user--user/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">user</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": []
            }
        },
        "/user/user/{entity}": {
            "get": {
                "summary": "View (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the user--user resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the user user"
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the user user"
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the user user"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">user</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": []
            }
        },
        "/user/user/{entity}/roles": {
            "get": {
                "summary": "Related: roles (Role)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user_role--user_role resource type through the <em class=\"placeholder\">roles</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the user user"
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/user/user/{entity}/relationships/roles": {
            "delete": {
                "summary": "Relationship: roles (Role)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the user user"
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: roles (Role)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user_role--user_role resource type through the <em class=\"placeholder\">roles</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the user user"
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "user_role--user_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: roles (Role)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the user user"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "user_role--user_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "user_role--user_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: roles (Role)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the user user"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "user_role--user_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                                    "type": "array",
                                    "items": {
                                        "description": "The \"type\" and \"id\" to non-empty members.",
                                        "type": "object",
                                        "required": [
                                            "type",
                                            "id"
                                        ],
                                        "properties": {
                                            "type": {
                                                "title": "Resource type name",
                                                "type": "string",
                                                "enum": [
                                                    "user_role--user_role"
                                                ]
                                            },
                                            "id": {
                                                "title": "Resource ID",
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true,
                                                "properties": {}
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "uniqueItems": true
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user_role/user_role": {
            "get": {
                "summary": "List (Role)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the user_role--user_role resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Role"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "summary": "Create (Role)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">user_role</em> object",
                        "required": true,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "Role"
                ],
                "responses": []
            }
        },
        "/user_role/user_role/{entity}": {
            "get": {
                "summary": "View (Role)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the user_role--user_role resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the user_role user_role"
                    }
                ],
                "tags": [
                    "Role"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "summary": "Remove (Role)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the user_role user_role"
                    }
                ],
                "tags": [
                    "Role"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Role)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the user_role user_role"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">user_role</em> object",
                        "required": true,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "Role"
                ],
                "responses": []
            }
        },
        "/view/view": {
            "get": {
                "summary": "List (View)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the view--view resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "View"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "summary": "Create (View)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">view</em> object",
                        "required": true,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "View"
                ],
                "responses": []
            }
        },
        "/view/view/{entity}": {
            "get": {
                "summary": "View (View)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the view--view resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the view view"
                    }
                ],
                "tags": [
                    "View"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "summary": "Remove (View)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the view view"
                    }
                ],
                "tags": [
                    "View"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (View)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the view view"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">view</em> object",
                        "required": true,
                        "schema": {
                            "$ref": ""
                        }
                    }
                ],
                "tags": [
                    "View"
                ],
                "responses": []
            }
        },
        "/webform_submission/contact": {
            "get": {
                "summary": "List (Webform submission - Contact)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the webform_submission--contact resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Webform submission - Contact"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "webform_submission:contact Schema",
                            "description": "Describes the payload for 'webform_submission' entities of the 'contact' bundle.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/webform_submission--contact/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (Webform submission - Contact)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">webform_submission</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/webform_submission--contact"
                        }
                    }
                ],
                "tags": [
                    "Webform submission - Contact"
                ],
                "responses": []
            }
        },
        "/webform_submission/contact/{entity}": {
            "get": {
                "summary": "View (Webform submission - Contact)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the webform_submission--contact resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission contact"
                    }
                ],
                "tags": [
                    "Webform submission - Contact"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/webform_submission--contact"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (Webform submission - Contact)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission contact"
                    }
                ],
                "tags": [
                    "Webform submission - Contact"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Webform submission - Contact)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission contact"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">webform_submission</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/webform_submission--contact"
                        }
                    }
                ],
                "tags": [
                    "Webform submission - Contact"
                ],
                "responses": []
            }
        },
        "/webform_submission/contact/{entity}/uid": {
            "get": {
                "summary": "Related: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission contact"
                    }
                ],
                "tags": [
                    "Webform submission - Contact"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/webform_submission/contact/{entity}/relationships/uid": {
            "delete": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission contact"
                    }
                ],
                "tags": [
                    "Webform submission - Contact"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission contact"
                    }
                ],
                "tags": [
                    "Webform submission - Contact"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission contact"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Webform submission - Contact"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission contact"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Webform submission - Contact"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/webform_submission/contact/{entity}/relationships/webform_id": {
            "delete": {
                "summary": "Relationship: webform_id (Webform)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission contact"
                    }
                ],
                "tags": [
                    "Webform submission - Contact"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: webform_id (Webform)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the webform--webform resource type through the <em class=\"placeholder\">webform_id</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission contact"
                    }
                ],
                "tags": [
                    "Webform submission - Contact"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "webform--webform"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: webform_id (Webform)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission contact"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "webform--webform"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Webform submission - Contact"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "webform--webform"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: webform_id (Webform)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission contact"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "webform--webform"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Webform submission - Contact"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "webform--webform"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/webform_submission/template_medical_appointment": {
            "get": {
                "summary": "List (Webform submission - Request a Medical Appointment)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the webform_submission--template_medical_appointment resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "array",
                        "required": false,
                        "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
                    }
                ],
                "tags": [
                    "Webform submission - Request a Medical Appointment"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "title": "webform_submission:template_medical_appointment Schema",
                            "description": "Describes the payload for 'webform_submission' entities of the 'template_medical_appointment' bundle.",
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/webform_submission--template_medical_appointment/properties/data"
                                    }
                                },
                                "meta": {
                                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "links": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                                        "type": "object",
                                        "required": [
                                            "href"
                                        ],
                                        "properties": {
                                            "href": {
                                                "description": "A string containing the link's URL . ",
                                                "type": "string",
                                                "format": "uri - reference"
                                            },
                                            "meta": {
                                                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                                "type": "object",
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "jsonapi": {
                                    "description": "An object describing the server's implementation",
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "summary": "Create (Webform submission - Request a Medical Appointment)",
                "description": null,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">webform_submission</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/webform_submission--template_medical_appointment"
                        }
                    }
                ],
                "tags": [
                    "Webform submission - Request a Medical Appointment"
                ],
                "responses": []
            }
        },
        "/webform_submission/template_medical_appointment/{entity}": {
            "get": {
                "summary": "View (Webform submission - Request a Medical Appointment)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the webform_submission--template_medical_appointment resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission template_medical_appointment"
                    }
                ],
                "tags": [
                    "Webform submission - Request a Medical Appointment"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/webform_submission--template_medical_appointment"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove (Webform submission - Request a Medical Appointment)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission template_medical_appointment"
                    }
                ],
                "tags": [
                    "Webform submission - Request a Medical Appointment"
                ],
                "responses": {
                    "201": {
                        "description": "Entity deleted"
                    }
                }
            },
            "patch": {
                "summary": "Update (Webform submission - Request a Medical Appointment)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission template_medical_appointment"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The <em class=\"placeholder\">webform_submission</em> object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/webform_submission--template_medical_appointment"
                        }
                    }
                ],
                "tags": [
                    "Webform submission - Request a Medical Appointment"
                ],
                "responses": []
            }
        },
        "/webform_submission/template_medical_appointment/{entity}/uid": {
            "get": {
                "summary": "Related: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission template_medical_appointment"
                    }
                ],
                "tags": [
                    "Webform submission - Request a Medical Appointment"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/user--user"
                        }
                    }
                }
            }
        },
        "/webform_submission/template_medical_appointment/{entity}/relationships/uid": {
            "delete": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission template_medical_appointment"
                    }
                ],
                "tags": [
                    "Webform submission - Request a Medical Appointment"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: uid (User)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission template_medical_appointment"
                    }
                ],
                "tags": [
                    "Webform submission - Request a Medical Appointment"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission template_medical_appointment"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Webform submission - Request a Medical Appointment"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: uid (User)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission template_medical_appointment"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Webform submission - Request a Medical Appointment"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "user--user"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/webform_submission/template_medical_appointment/{entity}/relationships/webform_id": {
            "delete": {
                "summary": "Relationship: webform_id (Webform)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission template_medical_appointment"
                    }
                ],
                "tags": [
                    "Webform submission - Request a Medical Appointment"
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "get": {
                "summary": "Relationship: webform_id (Webform)",
                "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the webform--webform resource type through the <em class=\"placeholder\">webform_id</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission template_medical_appointment"
                    }
                ],
                "tags": [
                    "Webform submission - Request a Medical Appointment"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "webform--webform"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Relationship: webform_id (Webform)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission template_medical_appointment"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "webform--webform"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Webform submission - Request a Medical Appointment"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "webform--webform"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Relationship: webform_id (Webform)",
                "description": null,
                "parameters": [
                    {
                        "name": "entity",
                        "required": true,
                        "in": "path",
                        "type": "uuid",
                        "description": "The uuid of the webform_submission template_medical_appointment"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The resource identifier object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "webform--webform"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Webform submission - Request a Medical Appointment"
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "The \"type\" and \"id\" to non-empty members.",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "id"
                                    ],
                                    "properties": {
                                        "type": {
                                            "title": "Resource type name",
                                            "type": "string",
                                            "enum": [
                                                "webform--webform"
                                            ]
                                        },
                                        "id": {
                                            "title": "Resource ID",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "meta": {
                                            "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {}
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}